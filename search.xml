<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo进阶之各种优化摘录</title>
      <link href="/posts/36046.html"/>
      <url>/posts/36046.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo进阶之各种优化摘录"><a href="#Hexo进阶之各种优化摘录" class="headerlink" title="Hexo进阶之各种优化摘录"></a>Hexo进阶之各种优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220121Hexo%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E6%91%98%E5%BD%95/1.png" alt="Hexo进阶之各种优化摘录"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo的matery主题搭建博客并深度优化摘录</title>
      <link href="/posts/46171.html"/>
      <url>/posts/46171.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于Hexo的matery主题搭建博客并深度优化摘录"><a href="#基于Hexo的matery主题搭建博客并深度优化摘录" class="headerlink" title="基于Hexo的matery主题搭建博客并深度优化摘录"></a>基于Hexo的matery主题搭建博客并深度优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/strange/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git Large File Storage摘录</title>
      <link href="/posts/55425.html"/>
      <url>/posts/55425.html</url>
      
        <content type="html"><![CDATA[<h1 id="git-Large-File-Storage摘录"><a href="#git-Large-File-Storage摘录" class="headerlink" title="git Large File Storage摘录"></a>git Large File Storage摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220120gitLargeFileStorage%E6%91%98%E5%BD%95/gitLargeFileStorage%E6%91%98%E5%BD%95.png" alt="git Large File Storage摘录"></p>]]></content>
      
      
      <categories>
          
          <category> 版本控制git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文件名大小写问题摘录</title>
      <link href="/posts/12645.html"/>
      <url>/posts/12645.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo文件名大小写问题摘录"><a href="#Hexo文件名大小写问题摘录" class="headerlink" title="Hexo文件名大小写问题摘录"></a>Hexo文件名大小写问题摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220119Hexo%E6%96%87%E4%BB%B6%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态规划之状态压缩</title>
      <link href="/posts/49630.html"/>
      <url>/posts/49630.html</url>
      
        <content type="html"><![CDATA[<h1 id="动态规划之状态压缩摘录"><a href="#动态规划之状态压缩摘录" class="headerlink" title="动态规划之状态压缩摘录"></a>动态规划之状态压缩摘录</h1><p>========================</p><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h4 id="1-状态压缩"><a href="#1-状态压缩" class="headerlink" title="1.状态压缩"></a>1.状态压缩</h4><p><code>状态压缩</code>就是使用某种方法，简明扼要地以最小代价来表示某种状态，通常是用一串01数字（二进制数）来表示各个点的状态。这就要求使用状态压缩的对象的点的状态必须只有两种，0 或 1；当然如果有三种状态用三进制来表示也未尝不可。</p><h4 id="2-使用条件"><a href="#2-使用条件" class="headerlink" title="2.使用条件"></a>2.使用条件</h4><p>从状态压缩的特点来看，这个算法适用的题目符合以下的条件：</p><ul><li><code>解法需要保存一定的状态数据</code>（表示一种状态的一个数据值），每个状态数据通常情况下是可以通过2进制来表示的。这就要求状态数据的每个单元只有两种状态，比如说棋盘上的格子，放棋子或者不放，或者是硬币的正反两面。这样用0或者1来表示状态数据的每个单元，而<code>整个状态数据就是一个一串0和1组成的二进制数</code>。</li><li>解法需要将状态数据实现为一个基本数据类型，比如int，long等等，即所谓的状态压缩。状态压缩的目的一方面是<code>缩小了数据存储的空间</code>，另一方面是在<code>状态对比和状态整体处理时能够提高效率</code>。这样就要求状态数据中的单元个数不能太大，比如用int来表示一个状态的时候，状态的单元个数不能超过32（32位的机器），所以题目一般都是至少有一维的数据范围很小。</li></ul><h4 id="3-状压DP"><a href="#3-状压DP" class="headerlink" title="3.状压DP"></a>3.状压DP</h4><p>状压DP，顾名思义，就是使用状态压缩的动态规划。</p><p>动态规划问题通常有两种，一种是对递归问题的记忆化求解，另一种是把大问题看作是多阶段的决策求解。这里用的便是后一种，这带来一个需求，即存储之前的状态，再由状态及状态对应的值推演出状态转移方程最终得到最优解。</p><h2 id="二、位运算"><a href="#二、位运算" class="headerlink" title="二、位运算"></a>二、位运算</h2><p>一般基础的状压就是将一行的状态压成一个数，这个数的二进制形式反映了这一行的情况。由于使用二进制数来保存被压缩的状态，所以要用到神奇的二进制位运算操作，将一个十进制数转成二进制进行位运算操作再转回十进制数。包括：</p><ul><li>按位与&amp;（有0为0，其实就是且）</li><li>按位或|（有1为1，其实就是或）</li><li>按位取反~（注意负数补码的符号，最前面的第一位是1）</li><li>异或^（相同为0，不同为1）</li><li>左移&lt;&lt;</li><li>右移&gt;&gt;</li></ul><p>常见操作：</p><ul><li>判断x是奇数还是偶数：(x&amp;1)==0</li><li>x乘以一个2的n次方的数：x&lt;&lt;n</li><li>x除以一个2的n次方的数：x&gt;&gt;n</li><li>消去x最后一位的1：x&amp;(x-1)</li><li>求x的相反数： <del>(x-1)或者</del>x+1</li><li>x的异或操作：~x = -x-1</li><li>把x从右边数第n位变1：x|(1&lt;&lt;(n-1))（n从1开始）</li><li>把x从右边数第n位变0：x&amp;(~(1&lt;&lt;(n-1)))（n从1开始）</li><li>取x最后n位的值：x&amp;((1&lt;&lt;n)-1)</li><li>取x前n位的值，后面的全部置为0：x &amp; (~((1 &lt;&lt; (32 - n)) - 1))</li><li>只保留x右边第一个1，其他的全部置为0：x &amp; (-x) 或 x &amp; ~(x - 1)</li><li>判断x的第n位是偶数还是奇数：(x &amp; (1 &lt;&lt; (n - 1))) == 0</li><li>求x的绝对值：(n ^ (n &gt;&gt; 31)) - (n &gt;&gt; 31) 或 (x &gt;&gt; 31) == 0 ? x : (~x + 1) 或 (x + (x &gt;&gt; 31)) ^ (x &gt;&gt; 31)</li><li>求两个数的最大数：(x &amp; ((y - x) &gt;&gt; 31)) | (y &amp; (~(y - x) &gt;&gt; 31))</li><li>返回x的符号：(i &gt;&gt; 31) | (-i &gt;&gt;&gt; 31)（正数为1，负数为-1）</li><li>两数相加：(x | y) + (x &amp; y) 或 (x ^ y) + ((x &amp; y) &lt;&lt; 1)</li><li>两数相减：(x &amp; <del>y) - (</del>x &amp; y)</li><li>求两数的平均数：(x &amp; y) + ((x ^ y) &gt;&gt; 1) 或 (x + y) &gt;&gt; 1</li><li>判断一个数是不是2的次幂：(x != 0) &amp;&amp; (x &amp; (x - 1)) == 0</li><li>x对2的n次方求余：x &amp; (2^n - 1)（这里的^是幂的次方）</li><li>判断x和y的符号是否相同：(a ^ b) &gt;= 0</li><li>if(x == a) x = b; if(x == b) x = a：用异或运算符：x = a ^ b ^ x</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/1.png"></p><p>初试化状态的时候要看清条件，什么要，什么不要。<br>一般情况下要预处理前k行（k由题目定）。<br>Dp时题目给的条件和fit函数、state数组都要检查。</p><p>最最重要的一点：</p><blockquote><p>位反（~ )  &gt;  算术  &gt;  位左移、位右移  &gt;  关系运算<br>&gt;位与  &gt;  位或  &gt;  位异或  &gt;  逻辑运算</p></blockquote><p>所以一般位运算最好打括号。</p><h2 id="三、例题引入"><a href="#三、例题引入" class="headerlink" title="三、例题引入"></a>三、例题引入</h2><h4 id="【例1】填满棋盘"><a href="#【例1】填满棋盘" class="headerlink" title="【例1】填满棋盘"></a>【例1】填满棋盘</h4><p>有一个NM(N&lt;=5,M&lt;=1000)的棋盘，现在有12及2*1的小木块无数个，要盖满整个棋盘，有多少种方式？答案只需要mod1,000,000,007即可。</p><p>例如：对于一个22的棋盘，有两种方法，一种是使用2个12的，一种是使用2个2*1的。</p><p><code>【算法分析】</code></p><p>在这道题目中,N和M的范围本应该是一样的，但实际上，N和M的范围却差别甚远，对于这种题目，首先应该想到的就是，正确算法与这两个范围有关！N的范围特别小，因此可以考虑使用状态压缩动态规划的思想，请看下面的图：</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/2.png"></p><p>本思路来自博客，不过原博没有图，我帮他补个图，再优化一下内容。</p><p>假设第一列已经填满，则第二列的摆设方式，只与第一列对第二列的影响有关。同理，第三列的摆设方式也只与第二列对它的影响有关。那么，使用一个长度为NN的二进制数statestate来表示这个影响，例如：4(00100)就表示了图上第二列的状态。</p><p>因此，本题的状态可以这样表示：</p><p>dp[i][state]表示该填充第 ii 列，第 i-1i−1 列对它的影响是 statestate 的时候的方法数。i&lt;=M,0&lt;=state&lt;2^Ni&lt;=M,0&lt;=state&lt;2<br>N</p><p>对于每一列，情况数也有很多，但由于 NN 很小，所以可以采取搜索的办法去处理。对于每一列，搜索所有可能的放木块的情况，并记录它对下一列的影响，之后更新状态。状态转移方程如下：</p><p>dp[i][state]=∑dp[i-1][pre] 每一个prepre可以通过填放成为statestate</p><p>对于每一列的深度优先搜索，写法如下：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nexvoid dfs(ll i,ll j,ll state,ll nex){    if(j==n)//最后一行    {        dp[i+1][nex]+=dp[i][state];        dp[i+1][nex]%=mod;        return;    }    //如果这个位置（第j行）已经被上一列给站了（state的第j位为1），所以就直接跳过    if(state&amp;(1&lt;&lt;j)&gt;0)        dfs(i,j+1,state,nex);    //如果这个位置是空的，那么就尝试放一个1*2的棋子    if(state&amp;(1&lt;&lt;j)==0)        dfs(i,j+1,state,nex|(1&lt;&lt;j));//（使nex的第j位变成1）    //如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行    if(j+1&lt;n&amp;&amp;state&amp;(1&lt;&lt;j)==0&amp;&amp;state&amp;(1&lt;&lt;j+1)==0)//注意要特判第j行下面是否还有一行        dfs(i,j+2,state,nex);    return;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终，答案就是dp[M+1][0]。<br>完整代码</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">#include&lt;bits/stdc++.h&gt;using namespace std;typedef long long ll;const ll N=2000+7;const ll mod=1000000007;ll n,m;ll dp[N][N];//dp[i][state]; 铺满前i-1列的所有方案数//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nexvoid dfs(ll i,ll j,ll state,ll nex){    if(j==n)//最后一行    {        dp[i+1][nex]+=dp[i][state];//nex一直接受前面的变化直到最后一行当前的可能性已经遍历完了就+上即可        dp[i+1][nex]%=mod;        return;    }     //如果这个位置（第j行）已经被上一列给占了（state的第j位为1），所以就直接跳过    if(((1&lt;&lt;j)&amp;state)&gt;0)        dfs(i,j+1,state,nex);//不会对下一列有什么影响     //如果这个位置是空的，那么就尝试放一个1*2的棋子    if(((1&lt;&lt;j)&amp;state)==0)        dfs(i,j+1,state,nex|(1&lt;&lt;j));//（使nex的第j位变成1）横着放一个1*2的棋子会对下一列造成影响     //如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行    if(j+1&lt;n&amp;&amp;((1&lt;&lt;j)&amp;state)==0&amp;&amp;((1&lt;&lt;(j+1))&amp;state)==0)//注意要特判第j行下面是否还有一行,以及要加上足够的括号以免因为位运算的优先级问题而导致出bug        dfs(i,j+2,state,nex);//不会对下一列造成影响     return;}int main(){    while(~scanf("%lld %lld",&amp;n,&amp;m))    {        if(n==0&amp;&amp;m==0)break;        memset(dp,0,sizeof dp);        dp[1][0]=1;//注意初始化        for(int i=1;i&lt;=m;++i)//一共m列//枚举第i列 -&gt; 影响第i+1列        {            //注意1&lt;&lt;n结果是二进制，到for循环中会转换成十进制计算，这里最多也就是2的5次方，即32，可别以为是十进制的100000。            //如下为遍历情况：//            *0 *0 *0 *0     *1 *1 *1 *1//            *0 *0 *0 *0     *1 *1 *1 *1//            *0 *0 *0 *0 ... *1 *1 *1 *1//            *0 *0 *1 *1     *0 *0 *1 *1//            *0 *1 *0 *1     *0 *1 *0 *1            for(int j=0;j&lt;(1&lt;&lt;n);++j)//到2^n，遍历一遍，二进制会把所有填充的情况都列举一遍            {                if(dp[i][j])//如果存在方案数 -&gt; 则可以推广到i+1列                    dfs(i,0,j,0);            }        }        printf("%lld\n",dp[m+1][0]);    }    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要注意多加几个括号，能加就加，以免因为位运算的优先级问题而导致出bug。</p><h4 id="【例2】最小总代价（Vijos-1456）"><a href="#【例2】最小总代价（Vijos-1456）" class="headerlink" title="【例2】最小总代价（Vijos-1456）"></a>【例2】最小总代价（Vijos-1456）</h4><p>题目描述：</p><p>n个人在做传递物品的游戏,编号为1-n。</p><p>游戏规则是这样的：开始时物品可以在任意一人手上，他可把物品传递给其他人中的任意一位；下一个人可以传递给未接过物品的任意一人。</p><p>即物品只能经过同一个人一次，而且每次传递过程都有一个代价；不同的人传给不同的人的代价值之间没有联系；</p><p>求当物品经过所有n个人后，整个过程的总代价是多少。</p><p>输入格式：</p><p>第一行为n,表示共有n个人（16&gt;=n&gt;=2）；</p><p>以下为n*n的矩阵，第i+1行、第j列表示物品从编号为i的人传递到编号为j的人所花费的代价，特别的有第i+1行、第i列为-1（因为物品不能自己传给自己），其他数据均为正整数(&lt;=10000)。</p><p>(对于50%的数据，n&lt;=11)。</p><p>输出格式：</p><p>一个数，为最小的代价总和。</p><p>输入样例：</p><p>2</p><p>-1 9794</p><p>2724 –1</p><p>输出样例：</p><p>2724</p><p><code>【算法分析】</code></p><p>看到2&lt;=n&lt;=16，应想到此题和状态压缩dp有关。每个人只能够被传递一次，因此使用一个n位二进制数state来表示每个人是否已经被访问过了。但这还不够，因为从这样的状态中，并不能清楚地知道现在物品在谁 的手中，因此，需要在此基础上再增加一个状态now，表示物品在谁的手上。</p><p>dp[state][now]表示每个人是否被传递的状态是state，物品在now的手上的时候，最小的总代价。</p><p>初始状态为：dp[1&lt;&lt;i][i]=0；表示一开始物品在i手中。</p><p>所求状态为：min(dp[(1&lt;&lt;n)-1][j]); 0&lt;=j&lt;n</p><p>状态转移方程是：</p><p>dp[state][now]=min(dp[pre][t]+dist[now][t])；</p><p>pre表示的是能够到达state这个状态的一个状态，t能够传递物品给now且只有二进制下第t位与state不同。</p><p>状态的大小是O((2n)*n)，转移复杂度是O(n)。总的时间复杂度是O((2n)<em>n</em>n)。</p><p><code>【代码实现】</code></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">/*ID:shijieyywdPROG:Vijos-1456LANG:c++*/#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;vector&gt; #define MAXN 20#define INF 0x3f3f3f3f using namespace std; int n;int edges[MAXN][MAXN];int dp[65546][MAXN]; int min(int a, int b) {if (a == -1) return b;if (b == -1) return a;return a &lt; b ? a : b;} int main() {freopen("p1456.in", "r", stdin);scanf("%d", &amp;n);int t;for (int i = 0; i &lt; n; i++) {for (int j = 0; j &lt; n; j++) {scanf("%d", &amp;edges[i][j]);}}memset(dp, -1, sizeof(dp));for (int i = 0; i &lt; n; i++) {dp[1 &lt;&lt; i][i] = 0;}int ans = -1;for (int i = 0; i &lt; 1 &lt;&lt; n; i++) {for (int j = 0; j &lt; n; j++) {if (dp[i][j] != -1) {for (int k = 0; k &lt; n; k++) {if (!(i &amp; (1 &lt;&lt; k))) {dp[i | (1 &lt;&lt; k)][k] = min(dp[i | (1 &lt;&lt; k)][k], dp[i][j] + edges[j][k]);if ((i | (1 &lt;&lt; k)) == (1 &lt;&lt; n) - 1) ans = min(ans, dp[i | (1 &lt;&lt; k)][k]);}}}}}if (ans != -1)printf("%d\n", ans);else printf("0\n"); return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="【例3】胜利大逃亡-续-Hdoj-1429"><a href="#【例3】胜利大逃亡-续-Hdoj-1429" class="headerlink" title="【例3】胜利大逃亡(续)(Hdoj-1429)"></a>【例3】胜利大逃亡(续)(Hdoj-1429)</h4><p>题目描述：</p><p>Ignatius再次被魔王抓走了(搞不懂他咋这么讨魔王喜欢)……</p><p>这次魔王汲取了上次的教训，把Ignatius关在一个n*m的地牢里，并在地牢的某些地方安装了带锁的门，钥匙藏在地牢另外的某些地方。刚开始Ignatius被关在(sx,sy)的位置，离开地牢的门在(ex,ey)的位置。Ignatius每分钟只能从一个坐标走到相邻四个坐标中的其中一个。魔王每t分钟回地牢视察一次，若发现Ignatius不在原位置便把他拎回去。经过若干次的尝试，Ignatius已画出整个地牢的地图。现在请你帮他计算能否再次成功逃亡。只要在魔王下次视察之前走到出口就算离开地牢，如果魔王回来的时候刚好走到出口或还未到出口都算逃亡失败。</p><p>输入格式：</p><p>每组测试数据的第一行有三个整数n,m,t(2&lt;=n,m&lt;=20,t&gt;0)。接下来的n行m列为地牢的地图，其中包括:</p><p>. 代表路</p><ul><li>代表墙</li></ul><p>@ 代表Ignatius的起始位置</p><p>^ 代表地牢的出口</p><p>A-J 代表带锁的门,对应的钥匙分别为a-j</p><p>a-j 代表钥匙，对应的门分别为A-J</p><p>每组测试数据之间有一个空行。</p><p>输出格式：</p><p>针对每组测试数据，如果可以成功逃亡，请输出需要多少分钟才能离开，如果不能则输出-1。</p><p>输入样例：</p><p>4 5 17</p><p>@A.B.</p><p>a*.*.</p><p>*..*^</p><p>c..b*</p><p>输出样例：</p><p>16</p><p><code>【算法分析】</code></p><p>初看此题感觉十分像是宽度优先搜索（BFS），但搜索的过程中如何表示钥匙的拥有情况，却是个问题。借鉴状态压缩的思想，使用一个10位的二进制数state来表示此刻对10把钥匙的拥有情况，那么，dp[x][y][state]表示到达(x,y)，钥匙拥有状况为state的最短路径。另外，需要注意到一旦拥有了某一把钥匙，那个有门的位置就如履平地了。</p><p>代码的实现方式可以采用Spfa求最短路的方式。值得一提的是，Spfa算法本来就是一种求解最短路径问题的动态规划算法，本文假设读者已经非常熟悉Spfa等基础算法，在此处不再赘述。</p><p>状态压缩dp可以出现在各种算法中，本题就是典型的搜索算法和状态压缩dp算法结合的题目。另外，很多状态压缩dp本身就是通过搜索算法实现的状态转移。</p><p><code>【代码实现】</code></p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">/*ID:shijieyywdPROG:Hdu-1429LANG:c++*/#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;#include &lt;iostream&gt;#include &lt;queue&gt; using namespace std; struct Node{int x;int y;int step;int key;Node() {}Node(int a, int b, int s, int k) : x(a), y(b), step(s), key(k) {}}; int n, m, t;int arr[25][25];int door[25][25];int key[25][25];int Go[4][2] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};int sx, sy;int ex, ey;int vis[25][25][1049]; bool canGo(int x, int y, int k) {if (x &gt;= 0 &amp;&amp; x &lt; n &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; m &amp;&amp; !arr[x][y]) {if (vis[x][y][k]) return false;if ((k &amp; door[x][y]) == door[x][y]) return true;}return false;} int bfs() {memset(vis, 0, sizeof(vis));queue&lt;Node&gt; q;Node s = Node(sx, sy, 0, 0);q.push(s);vis[sx][sy][0] = 1;while (!q.empty()) {Node e = q.front();q.pop();if (e.x == ex &amp;&amp; e.y == ey) return e.step;for (int i = 0; i &lt; 4; i++) {int nx = e.x + Go[i][0];int ny = e.y + Go[i][1];if (canGo(nx, ny, e.key)) {Node nex = Node(nx, ny, e.step + 1, e.key | key[nx][ny]);vis[nx][ny][nex.key] = 1;q.push(nex);}}}return 0;} int main() {while (~scanf("%d %d %d\n", &amp;n, &amp;m, &amp;t)) {memset(arr, 0, sizeof(arr));memset(door, 0, sizeof(door));memset(key, 0, sizeof(key));char c;for (int i = 0; i &lt; n; i++) {for (int j = 0; j &lt; m; j++) {scanf("%c", &amp;c);if (c == '*') arr[i][j] = 1;else if (c == '@') sx = i, sy = j;else if (c == '^') ex = i, ey = j;else if (c &gt;= 'a' &amp;&amp; c &lt;= 'z') key[i][j] = 1 &lt;&lt; (c - 'a');else if (c &gt;= 'A' &amp;&amp; c &lt;= 'Z') door[i][j] = 1 &lt;&lt; (c - 'A');}getchar();}int ans = bfs();if (ans &lt; t &amp;&amp; ans) printf("%d\n", ans);else printf("-1\n");}return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++标准库使用</title>
      <link href="/posts/44130.html"/>
      <url>/posts/44130.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-标准库使用"><a href="#C-标准库使用" class="headerlink" title="C++标准库使用"></a>C++标准库使用</h1><p>========================</p><h2 id="测试了一些标准库提供的数据结构和函数等"><a href="#测试了一些标准库提供的数据结构和函数等" class="headerlink" title="测试了一些标准库提供的数据结构和函数等"></a>测试了一些标准库提供的数据结构和函数等</h2><p>值得一提的是那个自动推导<code>auto</code>用着非常舒服,可自动推导容器内的变量类型、函数的返回值类型等。<br>模板就不用说了，一行胜百行。需要大量重复的工作，还是建议用模板，模板的效率我还没时间去测试，不过不管怎么样，模板真方便。</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">template &lt;typename T&gt;auto printData(const T&amp; v){    for (auto i: v) {        cout&lt;&lt;i&lt;&lt;" ";    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是.hpp文件和.cpp文件</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">////  test.hpp//  Code////  Created by 张赛东 on 2022/1/6.//#ifndef test_hpp#define test_hpp#include "stdc++.hpp"using namespace std;using gg = long long;class Test {    int testThings;public:    int func();    int func2();};#endif /* test_hpp */<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">////  test.cpp//  Code////  Created by 张赛东 on 2022/1/6.//#include "test.hpp"bool cmp(gg a, gg b) { return a&lt;b; }struct Compare {//    gg score;//    Compare(gg s):score(s){}    bool operator() (const gg&amp; s1, const gg&amp; s2)const {        return s1 &lt; s2;    }};template &lt;typename T&gt;auto printData(const T&amp; v){//可能改变的话，就需要用引用&amp;, 引用可被修改，值类型固定    for (auto i: v) {        cout&lt;&lt;i&lt;&lt;" ";    }}auto lowerBound1(vector&lt;gg&gt;&amp; v, gg left, gg right, gg x, gg a) {    while(left&lt;right){        gg mid = (left+right)/2;        if(v[mid]&gt;x)            right=mid;        else            left=mid+1;    }    return left&gt;right or v[left]&gt;x?left:a;}int Test::func(){    vector&lt;gg&gt;v={2,1,4,3,6,5,8,10,5,3};    //sort(v.begin(),v.end());    sort(v.rbegin(),v.rend());    cout&lt;&lt;"V:\n";    //cout&lt;&lt;&amp;v&lt;&lt;"\n";//    for (gg i: v) {//        cout&lt;&lt;i&lt;&lt;" ";//    }    printData(v);        reverse(v.begin()+4, v.begin()+6);//转置了第5（4+1）、6（5+1）个位置，6是开区间所在    cout&lt;&lt;"\n\n";    printData(v);        sort(v.begin(), v.end());//必须先排序，才能用unique去重，因为unique只看相邻的元素。    cout&lt;&lt;"This is v";    printData(v);    //auto it = unique(v.begin(), v.end());    vector&lt;gg&gt;::iterator it = unique(v.begin(), v.end());    v.erase(it, v.end());    cout&lt;&lt;"\n\n";    printData(v);        cout&lt;&lt;"\n\n";    auto it2 = remove(v.begin(), v.end(), 8);    v.erase(it2,v.end());    printData(v);        reverse(v.begin(), v.end());    partial_sort(v.begin(), v.begin()+4, v.end());    cout&lt;&lt;"\n\n";    printData(v);        reverse(v.begin(), v.end());    v.insert(v.begin(),{20, 29, 88, 15, 65, 3, 8 ,9});    nth_element(v.begin(), v.begin()+6, v.end());//将第6小的数字放到v[6]的位置（即第七个位置）上去，且其前面的数字必小于它，其后面的数字必大于它。    cout&lt;&lt;"\n\nThis is v:";    printData(v);        cout&lt;&lt;"\n\nThis is v:";    //任何二分查找算法都必须排序，没有顺序，还何谈二分。    sort(v.begin(), v.end()-1);    printData(v);    cout&lt;&lt; "\n";    //用v.end()-1比较好，因为v.end()它背后其实也还是有数字的，如:140704480081848，如果你查的数大于所有元素，那么此时会显示v.end()背后的值。    //当要读取值时，考虑v.end()-1,其他时候没必要。    cout&lt;&lt;*v.begin()&lt;&lt;" "&lt;&lt;*(v.end()-1)&lt;&lt;" "&lt;&lt;*v.end()&lt;&lt;" "&lt;&lt;*v.rbegin()&lt;&lt;"\n";    //输出第一个大于等于该数的值    cout&lt;&lt; *lower_bound(v.begin(), v.end()-1, 140704480081848)&lt;&lt; " " &lt;&lt; *lower_bound(v.begin(), v.end()-1, 65)    //输出第一个大于该数的值    &lt;&lt;"\n"&lt;&lt; *upper_bound(v.begin(), v.end()-1, 9)&lt;&lt; " " &lt;&lt; *upper_bound(v.begin(), v.end()-1, 65, cmp);        //输出第一个大于等于该数的值所在位置索引。    cout&lt;&lt;"\n\n";    cout&lt;&lt;"Position:"&lt;&lt;lowerBound1(v, 0, v.size()-1, 9, -1)&lt;&lt;" "&lt;&lt;lowerBound1(v, 0, v.size()-1, 65, -1);        //将序列调整为大根堆，即大顶堆。    make_heap(v.begin(), v.end());    cout&lt;&lt;"\n\n";    printData(v);        //将大根堆序列调整为升序，即堆排序。    sort_heap(v.begin(), v.end());    cout&lt;&lt;"\n\n";    printData(v);        sort(v.begin(), v.end(), greater&lt;gg&gt;());    //如序列已是最大的排列，将序列重排为最小的排列    next_permutation(v.begin(), v.end());    cout&lt;&lt;"\n\n";    printData(v);        sort(v.begin(), v.end(), greater&lt;gg&gt;());    cout&lt;&lt;"\n\n"&lt;&lt;*v.data();    cout&lt;&lt;"\n\nMax:"&lt;&lt;*max_element(v.begin(), v.end());    cout&lt;&lt;"\n\nMin:"&lt;&lt;*min_element(v.begin(), v.end());    //取值型的最好用v.end()-1。    cout&lt;&lt;"\n\nthe Max:"&lt;&lt;*minmax(v.begin(), v.end()-1).first&lt;&lt;"\n\nthe Min:"&lt;&lt;*minmax(v.begin(), v.end()-1).second;        cout&lt;&lt;"\n\nthe sum:";    //0表示初始值    cout&lt;&lt;accumulate(v.begin(), v.end(), 0)&lt;&lt;" "&lt;&lt;accumulate(v.begin(), v.end(), 100);            gg v2[100] = {6, 3, 4, 9, 2, 7, 8, 10, 3, 1, 2, 8, 7, 33, 58, 4, 6, 3, 4, 9, 2, 7, 8, 10, 3, 1, 2, 8, 7, 33, 51, 4,6, 3, 4, 9, 2, 7, 8, 10, 3, 1, 2, 8, 7, 33, 57, 4, 6, 3, 4, 9, 2, 7, 8, 10, 3, 1, 2, 8, 7, 33, 56, 4};    //sort(v2,v2+5);    //sort(v2, v2+3);    sort(v2, v2+10, greater&lt;gg&gt;());//10是开区间所在，故排序了第1（0+1）、……10（9+1）个位置。    sort(v2+10, v2+20, less&lt;gg&gt;());    sort(v2+20, v2+30, cmp);    sort(v2+30, v2+40, Compare());    sort(v2+40, v2+50, [](gg&amp; a,gg&amp; b){return a&gt;b;});    partition(v2,v2+100, [](gg a){ return a!=3 &amp;&amp; a!=7; });//符合条件的放到序列前方，不符合的放到序列后方        cout&lt;&lt;"\nV2:\n";    int times = 0;    for(gg i:v2) {        ++times;        cout&lt;&lt;i&lt;&lt;" ";        if(times%10 == 0)            cout&lt;&lt;"\n";    }    cout&lt;&lt;"\n\n";    printData(v2);     cout&lt;&lt;"\nV3:\n";    char v3[20] = {'e','c','b','a','d','g','f','h','j','f','f'};//后面的默认为' '，即空字符。    sort(v3, v3+20);    cout&lt;&lt;"\n\n";    printData(v3);    //如序列已经是最小序列，则重排为最大序列    prev_permutation(v3, v3+20);    cout&lt;&lt;"\n\n";    printData(v3);        //将'u'赋值给指定位置元素，递增后的值赋值给下一个元素    iota(v3+10, v3+20, 'u');    cout&lt;&lt;"\n\n";    printData(v3);        int v4[] = {3,2,1};    int v5[] = {2,1,3};    //向量内积    cout&lt;&lt;"\n\n"&lt;&lt;inner_product(v4, v4+3, v5, 0);        int v6[] = {0,1,2,3,4,5,6,7,8,9};    //这里多输出个地址不知道怎么回事    cout&lt;&lt;"\n\n"&lt;&lt;partial_sum(v6, v6+10, v6);    printData(v6);        vector&lt;int&gt; v7 = {0,1,2,3,4,5,6,7,8,9};    cout&lt;&lt;"\n\n";    //前缀和，即前n项和。    partial_sum(v7.begin(), v7.end(), v7.begin());    printData(v7);        //前缀和的逆向操作。    cout&lt;&lt;"\n\n";    adjacent_difference(v7.begin(), v7.end(), v7.begin());    printData(v7);        cout&lt;&lt;"\n\n";    bitset&lt;8&gt; b(257);    cout&lt;&lt;b&lt;&lt;" "&lt;&lt;b.flip()&lt;&lt;" "&lt;&lt;b.to_ulong()&lt;&lt;" "&lt;&lt;b.to_ullong()&lt;&lt;"\n";        bitset&lt;16&gt; b2(257);//整数的二进制表示    cout&lt;&lt;b2&lt;&lt;" "&lt;&lt;b2.flip()&lt;&lt;" "&lt;&lt;b2.to_ulong()&lt;&lt;" "&lt;&lt;b2.to_ullong()&lt;&lt;"\n"    &lt;&lt;(b2&lt;&lt;2)&lt;&lt;" "&lt;&lt;(b2&gt;&gt;1)&lt;&lt;"\n"&lt;&lt;(b2&lt;&lt;=2)&lt;&lt;" "&lt;&lt;(b2&gt;&gt;=1)&lt;&lt;"\n"    &lt;&lt;b2&lt;&lt;" "&lt;&lt;~b2&lt;&lt;" "&lt;&lt; (b2&amp;=255) &lt;&lt;'\n'    &lt;&lt;(b2^=255)&lt;&lt;" "&lt;&lt;(b2|=255)&lt;&lt;" "&lt;&lt;(b2^=255) &lt;&lt;'\n'    &lt;&lt;b2[12]&lt;&lt;" "&lt;&lt;b2.count()&lt;&lt;" "&lt;&lt;~b2&lt;&lt;" "&lt;&lt;(b2|=255)&lt;&lt;" "&lt;&lt;b2.count()&lt;&lt;'\n'//count: b2中true即1的位数    &lt;&lt;b2.reset()&lt;&lt;" "&lt;&lt;b2.all()&lt;&lt;" "&lt;&lt;b2.any()&lt;&lt;" "&lt;&lt;b2.none()&lt;&lt;'\n';        cout&lt;&lt;to_string(1000)&lt;&lt;" "&lt;&lt;stoi("1111")&lt;&lt;" "&lt;&lt;stod("10.78")&lt;&lt;" "&lt;&lt;stof("11.766")&lt;&lt;'\n';    cout&lt;&lt;showpos&lt;&lt;20&lt;&lt;" "&lt;&lt;100&lt;&lt;" "&lt;&lt;20-50&lt;&lt;'\n';//展示正负号    cout&lt;&lt;to_string(1000)&lt;&lt;" "&lt;&lt;stoi("1111")&lt;&lt;" "&lt;&lt;stod("10.78")&lt;&lt;" "&lt;&lt;stof("11.766")&lt;&lt;'\n';    cout&lt;&lt;noshowpos&lt;&lt;to_string(1000)&lt;&lt;" "&lt;&lt;stoi("1111")&lt;&lt;" "&lt;&lt;stod("10.78")&lt;&lt;" "&lt;&lt;stof("11.766")    &lt;&lt;" "&lt;&lt;stol("23453")&lt;&lt;" "&lt;&lt;stoll("1043791749713284")&lt;&lt;'\n';        string str = "00001234";    str.erase(0, str.find_first_not_of('0'));//第一个不是0的数字。    cout&lt;&lt;str&lt;&lt;'\n';    cout&lt;&lt;'8' - '0'&lt;&lt;'\n';        string str2 = "63433";    for (char c: str2) {        c-= '2';    }    cout&lt;&lt;str2&lt;&lt;'\n';        cout&lt;&lt;fixed&lt;&lt;setprecision(10)&lt;&lt;1e5&lt;&lt;" "&lt;&lt;200e5&lt;&lt;" "&lt;&lt;(double)3e-8&lt;&lt;'\n';//1乘以10的5次方        //并查集    vector&lt;gg&gt; ufs(1e2);    iota(ufs.begin(), ufs.end(), 0);//赋值函数    printData(ufs);    cout&lt;&lt;"\n";        return 0;}int Test::func2(){    ios::sync_with_stdio(false);    cin.tie(0);    string s;    getline(cin, s);    cout&lt;&lt;s;    return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上使用C++万能头文件</title>
      <link href="/posts/33854.html"/>
      <url>/posts/33854.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mac上使用C-万能头文件"><a href="#Mac上使用C-万能头文件" class="headerlink" title="Mac上使用C++万能头文件"></a>Mac上使用C++万能头文件</h1><p>========================</p><h2 id="下述代码相当于-include-lt-bits-stdc-h-gt"><a href="#下述代码相当于-include-lt-bits-stdc-h-gt" class="headerlink" title="下述代码相当于#include<bits/stdc++.h>"></a>下述代码相当于#include&lt;bits/stdc++.h&gt;</h2><p>直接将下列文件拷贝或移入工程，引用时，使用<code>#include "stdc++.hpp"</code>,当然你可以自定义该hpp头文件名。</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">////  stdc++.hpp//  Code////  Created by 张赛东 on 2021/1/1.//#ifndef stdc___hpp#define stdc___hpp//下述代码相当于#include&lt;bits/stdc++.h&gt;// C++ includes used for precompiling -*- C++ -*- // Copyright (C) 2003-2014 Free Software Foundation, Inc.//// This file is part of the GNU ISO C++ Library.  This library is free// software; you can redistribute it and/or modify it under the// terms of the GNU General Public License as published by the// Free Software Foundation; either version 3, or (at your option)// any later version. // This library is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details. // Under Section 7 of GPL version 3, you are granted additional// permissions described in the GCC Runtime Library Exception, version// 3.1, as published by the Free Software Foundation. // You should have received a copy of the GNU General Public License and// a copy of the GCC Runtime Library Exception along with this program;// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see// &lt;http://www.gnu.org/licenses/&gt;. /** @file stdc++.h *  This is an implementation file for a precompiled header. */ // 17.4.1.2 Headers // C#ifndef _GLIBCXX_NO_ASSERT#include &lt;cassert&gt;#endif#include &lt;cctype&gt;#include &lt;cerrno&gt;#include &lt;cfloat&gt;#include &lt;ciso646&gt;#include &lt;climits&gt;#include &lt;clocale&gt;#include &lt;cmath&gt;#include &lt;csetjmp&gt;#include &lt;csignal&gt;#include &lt;cstdarg&gt;#include &lt;cstddef&gt;#include &lt;cstdio&gt;#include &lt;cstdlib&gt;#include &lt;cstring&gt;#include &lt;ctime&gt; #if __cplusplus &gt;= 201103L#include &lt;ccomplex&gt;#include &lt;cfenv&gt;#include &lt;cinttypes&gt;#include &lt;cstdbool&gt;#include &lt;cstdint&gt;#include &lt;ctgmath&gt;#include &lt;cwchar&gt;#include &lt;cwctype&gt;#endif // C++#include &lt;algorithm&gt;#include &lt;bitset&gt;#include &lt;complex&gt;#include &lt;deque&gt;#include &lt;exception&gt;#include &lt;fstream&gt;#include &lt;functional&gt;#include &lt;iomanip&gt;#include &lt;ios&gt;#include &lt;iosfwd&gt;#include &lt;iostream&gt;#include &lt;istream&gt;#include &lt;iterator&gt;#include &lt;limits&gt;#include &lt;list&gt;#include &lt;locale&gt;#include &lt;map&gt;#include &lt;memory&gt;#include &lt;new&gt;#include &lt;numeric&gt;#include &lt;ostream&gt;#include &lt;queue&gt;#include &lt;set&gt;#include &lt;sstream&gt;#include &lt;stack&gt;#include &lt;stdexcept&gt;#include &lt;streambuf&gt;#include &lt;string&gt;#include &lt;typeinfo&gt;#include &lt;utility&gt;#include &lt;valarray&gt;#include &lt;vector&gt; #if __cplusplus &gt;= 201103L#include &lt;array&gt;#include &lt;atomic&gt;#include &lt;chrono&gt;#include &lt;condition_variable&gt;#include &lt;forward_list&gt;#include &lt;future&gt;#include &lt;initializer_list&gt;#include &lt;mutex&gt;#include &lt;random&gt;#include &lt;ratio&gt;#include &lt;regex&gt;#include &lt;scoped_allocator&gt;#include &lt;system_error&gt;#include &lt;thread&gt;#include &lt;tuple&gt;#include &lt;typeindex&gt;#include &lt;type_traits&gt;#include &lt;unordered_map&gt;#include &lt;unordered_set&gt;#endif#endif /* stdc___hpp */<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InterfaceKit：一行代码实现在SwiftUI界面使用UIKit、AppKit和WatchKit的接口！</title>
      <link href="/posts/47700.html"/>
      <url>/posts/47700.html</url>
      
        <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！</p><h5 id="English-English-Document"><a href="#English-English-Document" class="headerlink" title="English: English Document"></a>English: <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">English Document</a></h5><h5 id="代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）"><a href="#代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）" class="headerlink" title="代码解释文档：https://github.com/adong666666/InterfaceKitDoc（或此存储库的Docs）"></a>代码解释文档：<a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>（或此存储库的<code>Docs</code>）</h5><p>InterfaceKit的基本思想是，我们想要一些用户界面抽象层，它能充分封装直接调用UIKit，AppKit和WatchKit。它应该足够简单，使普通的东西容易，但要足够全面，使复杂的东西也容易。</p><p>您可以在<a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.zh-Hans.md">愿景</a>中查看有关项目方向的更多信息。</p><pre class="line-numbers language-none"><code class="language-none">                    ┌──────────────┐                    │   SwiftUI    │                    └──────▲───────┘                           │        ┌──────────────────────────┴───────────────────────────┐│                    InterfaceKit                      │└───────▲──────────────────▲───────────────────▲───────┘        │                  │                   │        ┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐│     UIKit    │    │    AppKit    │    │   WatchKit   │└──────────────┘    └──────────────┘    └──────────────┘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E5%B9%B3%E5%8F%B0">平台</a></li><li><a href="#%E7%A4%BE%E5%8C%BA">社区</a></li><li><a href="#%E7%8A%B6%E6%80%81">状态</a></li><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li><a href="#%E4%BF%A1%E7%94%A8">信用</a></li><li><a href="#%E6%8D%90%E7%8C%AE">捐献</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#%E8%AE%B8%E5%8F%AF">许可</a></li><li><a href="#%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2">版本历史</a></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用UIKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用AppKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用WatchKit</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h3><h4 id="对于iOS或tvOS："><a href="#对于iOS或tvOS：" class="headerlink" title="对于iOS或tvOS："></a>对于iOS或tvOS：</h4><ul><li><p>展示UIView</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceView</span><span class="token punctuation">(</span><span class="token function">MyUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>展示UIViewController</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyUIViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="对于macOS："><a href="#对于macOS：" class="headerlink" title="对于macOS："></a>对于macOS：</h4><ul><li><p>展示NSView</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">NSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyNSView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>展示NSViewController</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">NSInterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyNSViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="对于watchOS："><a href="#对于watchOS：" class="headerlink" title="对于watchOS："></a>对于watchOS：</h4><ul><li>展示WKInterfaceObject</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">WKInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyWKInterfaceObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">SwiftUI</span><span class="token keyword">import</span> <span class="token builtin">InterfaceKit</span><span class="token keyword">struct</span> <span class="token builtin">MyInterfaceView</span><span class="token punctuation">:</span> <span class="token builtin">View</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>        <span class="token builtin">ZStack</span> <span class="token punctuation">{</span>            <span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">InterfaceView</span><span class="token punctuation">(</span><span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">SwiftUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#<span class="token keyword">if</span> <span class="token constant">DEBUG</span><span class="token keyword">struct</span> <span class="token builtin">MyInterfaceView_Previews</span><span class="token punctuation">:</span> <span class="token builtin">PreviewProvider</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>        <span class="token function">MyInterfaceView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配合闭包使用"><a href="#配合闭包使用" class="headerlink" title="配合闭包使用"></a>配合闭包使用</h3><p>展示SwiftuI视图时，您可以执行一些操作。</p><ul><li>示例</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span>    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token builtin">SomeViewControler</span><span class="token punctuation">.</span>shared    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span>    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span><span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">networkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">JSONParsing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">showProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">makeToast</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">databaseOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//do something</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token builtin">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string">"Title"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>large<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><p>InterfaceKit 让多平台编程更加清晰。</p><ul><li>示例</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">SwiftUI</span><span class="token keyword">import</span> <span class="token builtin">MapKit</span><span class="token keyword">import</span> <span class="token builtin">InterfaceKit</span><span class="token keyword">let</span> <span class="token constant">kStr</span> <span class="token operator">=</span> <span class="token string">"Hello World"</span>#<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSViewController</span> <span class="token operator">=</span> <span class="token builtin">UIViewController</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSView</span> <span class="token operator">=</span> <span class="token builtin">UILabel</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceView</span> <span class="token operator">=</span> <span class="token builtin">InterfaceView</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token builtin">InterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token builtin">UIScreen</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span>bounds <span class="token keyword">as</span> <span class="token builtin">CGRect</span><span class="token operator">?</span>#elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSViewController</span> <span class="token operator">=</span> <span class="token builtin">NSViewController</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSView</span> <span class="token operator">=</span> <span class="token builtin">NSTextField</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceView</span> <span class="token operator">=</span> <span class="token builtin">NSInterfaceView</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token builtin">NSInterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token builtin">NSScreen</span><span class="token punctuation">.</span>main<span class="token operator">?</span><span class="token punctuation">.</span>frame#endif@main<span class="token keyword">struct</span> <span class="token builtin">EApp</span><span class="token punctuation">:</span> <span class="token builtin">App</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">Scene</span> <span class="token punctuation">{</span>        <span class="token builtin">WindowGroup</span> <span class="token punctuation">{</span>            <span class="token builtin">ZStack</span> <span class="token punctuation">{</span>                #<span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span>                    <span class="token function">OSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MKMapView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token function">OSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token function">OSInterfaceVC</span><span class="token punctuation">(</span><span class="token function">MyVC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                #<span class="token keyword">else</span>                    <span class="token function">WKInterfaceView</span><span class="token punctuation">(</span><span class="token function">WKInterfaceMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                #endif                <span class="token function">Text</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#<span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">MyVC</span><span class="token punctuation">:</span> <span class="token builtin">OSViewController</span> <span class="token punctuation">{</span>    #<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">viewDidLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> lbl <span class="token operator">=</span> <span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            lbl<span class="token punctuation">.</span>textAlignment <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">right</span>            view<span class="token punctuation">.</span><span class="token function">addSubview</span><span class="token punctuation">(</span>lbl<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    #elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">loadView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> view <span class="token operator">=</span> <span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    #endif<span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">MyView</span><span class="token punctuation">:</span> <span class="token builtin">OSView</span> <span class="token punctuation">{</span>    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token builtin">CGRect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token function">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        #<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>            text <span class="token operator">=</span> <span class="token constant">kStr</span>        #elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>            stringValue <span class="token operator">=</span> <span class="token constant">kStr</span>        #endif    <span class="token punctuation">}</span>        <span class="token keyword">required</span> <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span>coder<span class="token punctuation">:</span> <span class="token builtin">NSCoder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>#endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><ul><li>QQ群：1027277979</li><li>您可以和我联系（邮箱：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>，QQ：3440217568，微信：adongenjoylife，电话：15674119605）。</li><li>如果您发现了一个bug，并且可以提供可靠地重现它的步骤，请打开一个问题。</li><li>如果您有一个特性请求，请打开一个问题。</li><li>如果您想贡献，请提交一个拉取请求。</li></ul><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><p>这个项目正在积极开发中。我们认为它可以用于项目开发。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下表显示了您应该根据您的Swift版本使用哪个版本的InterfaceKit。</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit支持多种方法在项目中安装框架。</p><h3 id="直接拷贝"><a href="#直接拷贝" class="headerlink" title="直接拷贝"></a>直接拷贝</h3><p>通过运行以下命令来克隆此存储库：</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/adong666666/InterfaceKit.git --depth=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将github工程中的<code>InterfaceKit</code>文件夹下的Swift文件复制到您的工程中。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/copy_files.png" alt="拷贝文件"></div><ul><li>如果是iOS或tvOS项目，您可以复制文件<code>UIInterface.swift</code>。</li><li>如果是macOS项目，您可以复制文件<code>NSInterface.swift</code>。</li><li>如果是watchOS项目，您可以复制文件<code>WKInterface.swift</code>。</li></ul><h3 id="CocoaPods安装"><a href="#CocoaPods安装" class="headerlink" title="CocoaPods安装"></a>CocoaPods安装</h3><p><a href="https://cocoapods.org/">CocoaPods</a> 是Cocoa项目的依赖关系管理器。有关使用和安装说明，请访问他们的网站。如果您还没有安装cocoapods则请先执行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">$ gem install cocoapods<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>您需要一个`Podfile`文件来通过CocoaPods整合InterfaceKit到您的Xcode工程中去, 如果您没有Podfile，那么直接创建一个Podfile或使用此存储库在`PodfileExample`文件夹中提供的Podfile。Podfile的内容如下：<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># Podfile</span>source <span class="token string">'https://github.com/CocoaPods/Specs.git'</span><span class="token comment"># platform:ios, '13.0'</span>use_frameworks<span class="token operator">!</span>inhibit_all_warnings<span class="token operator">!</span>target <span class="token string">'YOUR_TARGET_NAME'</span> <span class="token keyword">do</span>    pod <span class="token string">'InterfaceKit'</span><span class="token keyword">end</span><span class="token comment"># post_install do |installer_representation|</span><span class="token comment">#   installer_representation.pods_project.targets.each do |target|</span><span class="token comment">#     target.build_configurations.each do |config|</span><span class="token comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><span class="token comment">#     end</span><span class="token comment">#   end</span><span class="token comment"># end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用您的项目名称替换<code>YOUR_TARGET_NAME</code>。<br>要使用CocoaPods将InterfaceKit集成到Xcode项目中，请在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或许您还没有更新CocoaPods, 那么<code>InterfaceKit</code> 可能不会被找到，您可以运行 <code>pod update</code>来更新CocoaPods，或者直接运行下面的命令行：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>如果只是针对iOS或tvOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/UIKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果只是针对macOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/AppKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果只是针对watchOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/WatchKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果您要使用此框架的最新发布的版本，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果您要使用此框架的<code>特定的</code>某一个版本，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span class="token punctuation">,</span> <span class="token symbol">:branch</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'master'</span><span class="token comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>然后，在<code>Podfile</code>所在的目录中（确保Podfile和xcodeproj文件位于同一目录中），运行以下命令：</p><pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/PodfileLocation.png" alt="Podfile位置"></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a>是一个分散的依赖关系管理器，它构建依赖关系并为您提供二进制框架。</p><ol><li><p>要使用Carthage将InterfaceKit集成到Xcode项目中，请在此您的<code>Cartfile</code>中指定它（如果没有Cartfile，只需创建一个或使用此存储库在<code>CartfileExample</code>文件夹中提供的Cartfile）：</p><pre class="line-numbers language-ogdl" data-language="ogdl"><code class="language-ogdl">github "adong666666/InterfaceKit" "master"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后，在<code>Cartfile</code>目录中（确保Podfile和xcodeproj文件位于同一目录中），运行<code>carthage update --use xcframeworks</code>。<br>或者</p><ul><li>对于iOS工程, 运行<code>carthage update --platform iOS</code>。</li><li>对于macOS工程, 运行<code>carthage update --platform macOS</code>。</li><li>对于tvOS工程, 运行<code>carthage update --platform tvOS</code>。</li><li>对于watchOS工程, 运行<code>carthage update --platform watchOS</code>。 <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/CartfileLocation.png" alt="Cartfile 位置"></div></li></ul></li><li><p>在您的应用程序目标<code>“General”</code>设置选项卡的<code>“Frameworks,Libraries,and Embedded Content”</code>部分中，从磁盘上的Carthage/Build文件夹拖放<code>InterfaceKit</code>xcframework（或从xcframework中选择合适的framework）。</p></li></ol><h4 id="Carthage作为静态库"><a href="#Carthage作为静态库" class="headerlink" title="Carthage作为静态库"></a>Carthage作为静态库</h4><p>Carthage默认将InterfaceKit构建为一个动态库。</p><p>如果您希望使用Carthage将InterfaceKit构建为静态库，您可以在使用Carthage构建之前使用下面的脚本手动修改框架类型：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">carthage update InterfaceKit --platform iOS --no-build<span class="token function">sed</span> -i -e <span class="token string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxprojcarthage build InterfaceKit --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p><a href="https://swift.org/package-manager/">Swift Package Manager</a>是一种用于自动分发Swift代码的工具，并集成到<code>Swift</code>编译器中。它处于早期开发阶段，但InterfaceKit仍支持在其支持的平台上使用它。</p><ol><li>设置Swift包后，将InterfaceKit添加为依赖项就像将其添加到<code>package.Swift</code>的<code>dependencies</code>的值一样简单。然后运行<code>swift build</code>。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string">"https://github.com/adong666666/InterfaceKit.git"</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">upToNextMajor</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token string">"5.4.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者</p><ol><li>在Xcode中，选择File &gt; Swift Packages &gt; Add Package Dependency。</li><li>安装提示操作使用这个URL(“<a href="https://github.com/adong666666/InterfaceKit.git%E2%80%9D)%E6%9D%A5%E9%9B%86%E6%88%90%E6%AD%A4%E6%A1%86%E6%9E%B6">https://github.com/adong666666/InterfaceKit.git”)来集成此框架</a>.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/SwiftPackageManager.png" alt="Swift Package Manager配置"></div></li></ol><h3 id="手动设置"><a href="#手动设置" class="headerlink" title="手动设置"></a>手动设置</h3><p>如果您不想使用上述任何依赖关系管理器，可以手动将InterfaceKit集成到项目中。</p><h4 id="嵌入式框架"><a href="#嵌入式框架" class="headerlink" title="嵌入式框架"></a>嵌入式框架</h4><ul><li>打开Terminal，<code>cd</code>到顶级项目目录，如果您的项目未初始化为git存储库，则运行以下命令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>通过以下命令来将InterfaceKit添加为git<a href="https://git-scm.com/docs/git-submodule">子模块</a>：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/adong666666/InterfaceKit.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>打开<code>InterfaceKit</code>文件夹，将<code>InterfaceKit.xcodeproj</code>拖到应用程序Xcode项目的项目导航器中。</p><blockquote><p>它应该嵌套在应用程序的蓝色项目图标下面。它是否高于或低于所有其他Xcode组并不重要。</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/drag_framework.png" alt="拖放文件"></div><ul><li><p>在项目导航器中选择<code>InterfaceKit.xcodeproj</code>，并验证部署目标是否与应用程序目标匹配。</p></li><li><p>接下来，在项目导航器（蓝色项目图标）中选择您的应用程序项目，以导航到目标配置窗口，并在侧边栏的“Targets”标题下选择应用程序目标。</p></li><li><p>在该窗口顶部的选项卡栏中，打开<code>“General”</code>面板。</p></li><li><p>单击<code>“Frameworks,Libraries,and Embedded Content”</code>部分下的<code>+</code>按钮。</p></li><li><p>您将看到<code>Workspace</code>下的<code>InterfaceKit</code>文件夹，<code>InterfaceKit</code>文件夹下有<code>InterfaceKit.framework</code>和<code>InterfaceKitTests.xctest</code></p><blockquote><p>点击<code>InterfaceKit.framework</code>，然后点击<code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/add_framework.png" alt="添加框架"></div><ul><li><p>就这样！</p><blockquote><p><code>InterfaceKit.framework</code>在复制文件构建阶段自动添加为目标依赖项、链接框架和嵌入式框架，这是在模拟器和设备上构建所需的全部内容。</p></blockquote></li></ul><h3 id="解压，拖拽"><a href="#解压，拖拽" class="headerlink" title="解压，拖拽"></a>解压，拖拽</h3><ol><li><p>解压此存储库提供的<code>InterfaceKit.xcframework.zip</code>文件。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/unzip.png" alt="解压"></div></li><li><p>在应用程序目标的<code>“General”</code>设置选项卡上，在<code>“Frameworks,Libraries,and Embedded Content”</code>部分，拖放解压缩后的文件<code>InterfaceKit.xcframework</code>（或从InterfaceKit.xcframework中选择合适的framework）。</p></li></ol><ul><li><p>如果您使用<code>xcfamework</code>，只需拖放<code>InterfaceKit.xcframework</code>。<code>InterfaceKit.xcframework</code>支持所有四种平台（<code>iOS、macOS、tvOS、watchOS</code>）。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/use_xcframeworks.png" alt="使用xcframework"></div></li><li><p>如果您使用<code>framework</code>，请根据文件夹名称和项目平台从InterfaceKit.xcframework中选择合适的框架。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/use_frameworks.png" alt="使用framework"></div></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="为什么使用-InterfaceKit"><a href="#为什么使用-InterfaceKit" class="headerlink" title="为什么使用 InterfaceKit?"></a>为什么使用 InterfaceKit?</h3><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！ InterfaceKit 同时支持全部四个平台(<code>iOS, macOS, tvOS, watchOS</code>)。InterfaceKit<code>持续</code>更新。</p><h2 id="信用"><a href="#信用" class="headerlink" title="信用"></a>信用</h2><p>InterfaceKit 由<a href="https://zsd.name/">张赛东</a>持续更新。 您可以关注他 <a href="https://github.com/adong666666">@Github</a> 以及时了解工程的更新与发布。</p><h3 id="安全披露"><a href="#安全披露" class="headerlink" title="安全披露"></a>安全披露</h3><p>如果您认为InterfaceKit存在安全漏洞，请您尽快通过邮箱告知：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>。</p><h2 id="捐献"><a href="#捐献" class="headerlink" title="捐献"></a>捐献</h2><p>不需要捐献，但仍表示感谢。</p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>您喜欢InterfaceKit吗？真好！我们真的需要您的帮助！</p><p>开源不仅仅是编写代码。您可以帮我们做以下的任何一件事：</p><ul><li>查找（和报告）漏洞。</li><li>新功能建议。</li><li>回答问题。</li><li>文件改进。</li><li>查看拉取请求。</li><li>帮助管理问题优先级。</li><li>修复错误/新功能。</li></ul><p>如果您觉得这些听起来很酷，发送一个请求！第一次贡献之后，我们会将把您设置为此存储库的成员，以便您可以合并请求，您可以<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">在我们的投稿人指南中</a>阅读更多的细节。</p><p>InterfaceKit的社区拥有巨大的正能量，维护人员致力于保持事物的精彩。就像 <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">在CocoaPods社区</a>, 总是表现出积极的意图；即使一个评论听起来很刻薄，也要让这个人从怀疑中受益。</p><p>请注意，这个项目伴随着贡献者的行为准则而发布。参与此项目即表示您同意遵守<a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.zh-Hans.md">其条款</a>.</p><h3 id="添加新源文件"><a href="#添加新源文件" class="headerlink" title="添加新源文件"></a>添加新源文件</h3><p>如果从InterfaceKIt添加或删除源文件，则需要对此存储库根目录下的<code>InterfaceKIt.xcworkspace</code>项目进行相应的更改。这个项目用于迦太基。别担心，如果您忘记了，在提交拉取请求时会自动收到警告。</p><h3 id="帮助我们改进InterfaceKit的文档"><a href="#帮助我们改进InterfaceKit的文档" class="headerlink" title="帮助我们改进InterfaceKit的文档"></a>帮助我们改进InterfaceKit的文档</h3><p>无论您是核心成员还是第一次尝试它的用户，您都可以通过改进文档对InterfaceKit做出有价值的贡献。帮助我们：</p><ul><li>向我们发送有关您认为混淆或遗漏的内容的反馈</li><li>建议用更好的措辞或方式来解释某些话题</li><li>通过GitHub向我们发送拉取请求</li><li>改进 <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">英文文档</a></li></ul><h3 id="上面的话太啰嗦了？-那么直接看下面吧。"><a href="#上面的话太啰嗦了？-那么直接看下面吧。" class="headerlink" title="上面的话太啰嗦了？ 那么直接看下面吧。"></a>上面的话太啰嗦了？ 那么直接看下面吧。</h3><ul><li>分叉此存储库！</li><li>创建您的分支：<code>git checkout -b my-new-feature</code></li><li>提交您的更改：<code>git commit -am 'Add some feature'</code></li><li>推送至该分支：<code>git push origin my-new-feature</code></li><li>发起拉取请求</li><li>其他：<br>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">贡献</a>。</li></ul><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>InterfaceKit是在MIT许可下发布的，详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.zh-Hans.md">许可</a>。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title="版本历史"></a>版本历史</h2><p>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.zh-Hans.md">版本历史</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> git </tag>
            
            <tag> framework </tag>
            
            <tag> github </tag>
            
            <tag> carthage </tag>
            
            <tag> cocoapods </tag>
            
            <tag> macOS </tag>
            
            <tag> tvOS </tag>
            
            <tag> watchOS </tag>
            
            <tag> swift package manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InterfaceKit--One line of code to implement interfaces of UIKit,AppKit,and WatchKit in SwiftUI interface!</title>
      <link href="/posts/35069.html"/>
      <url>/posts/35069.html</url>
      
        <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface!</p><h5 id="Chinese-Simplified-中文文档"><a href="#Chinese-Simplified-中文文档" class="headerlink" title=" Chinese (Simplified): 中文文档"></a><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/China.png" alt="cn"> Chinese (Simplified): <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">中文文档</a></h5><h5 id="Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs"><a href="#Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs" class="headerlink" title="Code interpretation document: https://github.com/adong666666/InterfaceKitDoc(or this repository’s Docs)"></a>Code interpretation document: <a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>(or this repository’s <code>Docs</code>)</h5><p>The basic idea of InterfaceKit is that we want some user interface abstraction layer that sufficiently encapsulates actually calling UIKit,AppKit,and WatchKit directly. It should be simple enough that common things are easy, but comprehensive enough that complicated things are also easy.</p><p>You can check out more about the project direction in the <a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.md">vision document</a>.</p><pre class="line-numbers language-none"><code class="language-none">                    ┌──────────────┐                    │   SwiftUI    │                    └──────▲───────┘                           │        ┌──────────────────────────┴───────────────────────────┐│                    InterfaceKit                      │└───────▲──────────────────▲───────────────────▲───────┘        │                  │                   │        ┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐│     UIKit    │    │    AppKit    │    │   WatchKit   │└──────────────┘    └──────────────┘    └──────────────┘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><a href="#features">Features</a></li><li><a href="#usage">Usage</a></li><li><a href="#requirements">Requirements</a></li><li><a href="#communication">Communication</a></li><li><a href="#status">Status</a></li><li><a href="#installation">Installation</a></li><li><a href="#faq">FAQ</a></li><li><a href="#credits">Credits</a></li><li><a href="#donations">Donations</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a></li><li><a href="#history">History</a></li></ul><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li><input checked="" disabled="" type="checkbox"> use interface of UIKit in SwiftUI interface </li><li><input checked="" disabled="" type="checkbox"> use interface of AppKit in SwiftUI interface</li><li><input checked="" disabled="" type="checkbox"> use interface of WatchKit in SwiftUI interface</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Universal"><a href="#Universal" class="headerlink" title="Universal"></a>Universal</h3><h4 id="For-iOS-or-tvOS"><a href="#For-iOS-or-tvOS" class="headerlink" title="For iOS or tvOS:"></a>For iOS or tvOS:</h4><ul><li><p>To present UIView.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceView</span><span class="token punctuation">(</span><span class="token function">MyUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>To present UIViewController.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyUIViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="For-macOS"><a href="#For-macOS" class="headerlink" title="For macOS:"></a>For macOS:</h4><ul><li><p>To present NSView.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">NSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyNSView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>To present NSViewController.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">NSInterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyNSViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="For-watchOS"><a href="#For-watchOS" class="headerlink" title="For watchOS:"></a>For watchOS:</h4><ul><li>To present WKInterfaceObject. </li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">WKInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyWKInterfaceObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="eg"><a href="#eg" class="headerlink" title="eg."></a>eg.</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">SwiftUI</span><span class="token keyword">import</span> <span class="token builtin">InterfaceKit</span><span class="token keyword">struct</span> <span class="token builtin">MyInterfaceView</span><span class="token punctuation">:</span> <span class="token builtin">View</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>        <span class="token builtin">ZStack</span> <span class="token punctuation">{</span>            <span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token function">MyViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">InterfaceView</span><span class="token punctuation">(</span><span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">SwiftUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#<span class="token keyword">if</span> <span class="token constant">DEBUG</span><span class="token keyword">struct</span> <span class="token builtin">MyInterfaceView_Previews</span><span class="token punctuation">:</span> <span class="token builtin">PreviewProvider</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> some <span class="token builtin">View</span> <span class="token punctuation">{</span>        <span class="token function">MyInterfaceView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="With-Closure"><a href="#With-Closure" class="headerlink" title="With Closure"></a>With Closure</h3><p>You can do something while presenting SwiftUI view.</p><ul><li>For Example</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">InterfaceViewController</span><span class="token punctuation">(</span><span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span>    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token builtin">SomeViewControler</span><span class="token punctuation">.</span>shared    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span>    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white    <span class="token builtin">MyUIViewController</span><span class="token punctuation">.</span><span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">networkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">JSONParsing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">showProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">makeToast</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">databaseOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//do something</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token builtin">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string">"Title"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>large<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Multiple-platforms"><a href="#Multiple-platforms" class="headerlink" title="Multiple platforms"></a>Multiple platforms</h3><p>InterfaceKit makes it clearer for multiple platforms programming.</p><ul><li>For Example</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token builtin">SwiftUI</span><span class="token keyword">import</span> <span class="token builtin">MapKit</span><span class="token keyword">import</span> <span class="token builtin">InterfaceKit</span><span class="token keyword">let</span> <span class="token constant">kStr</span> <span class="token operator">=</span> <span class="token string">"Hello World"</span>#<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSViewController</span> <span class="token operator">=</span> <span class="token builtin">UIViewController</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSView</span> <span class="token operator">=</span> <span class="token builtin">UILabel</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceView</span> <span class="token operator">=</span> <span class="token builtin">InterfaceView</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token builtin">InterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token builtin">UIScreen</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span>bounds <span class="token keyword">as</span> <span class="token builtin">CGRect</span><span class="token operator">?</span>#elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSViewController</span> <span class="token operator">=</span> <span class="token builtin">NSViewController</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSView</span> <span class="token operator">=</span> <span class="token builtin">NSTextField</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceView</span> <span class="token operator">=</span> <span class="token builtin">NSInterfaceView</span>    <span class="token keyword">typealias</span> <span class="token builtin">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token builtin">NSInterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token builtin">NSScreen</span><span class="token punctuation">.</span>main<span class="token operator">?</span><span class="token punctuation">.</span>frame#endif@main<span class="token keyword">struct</span> <span class="token builtin">EApp</span><span class="token punctuation">:</span> <span class="token builtin">App</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> some <span class="token builtin">Scene</span> <span class="token punctuation">{</span>        <span class="token builtin">WindowGroup</span> <span class="token punctuation">{</span>            <span class="token builtin">ZStack</span> <span class="token punctuation">{</span>                #<span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span>                    <span class="token function">OSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MKMapView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token function">OSInterfaceView</span><span class="token punctuation">(</span><span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token function">OSInterfaceVC</span><span class="token punctuation">(</span><span class="token function">MyVC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                #<span class="token keyword">else</span>                    <span class="token function">WKInterfaceView</span><span class="token punctuation">(</span><span class="token function">WKInterfaceMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                #endif                <span class="token function">Text</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#<span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">os</span><span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">MyVC</span><span class="token punctuation">:</span> <span class="token builtin">OSViewController</span> <span class="token punctuation">{</span>    #<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">viewDidLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> lbl <span class="token operator">=</span> <span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            lbl<span class="token punctuation">.</span>textAlignment <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">right</span>            view<span class="token punctuation">.</span><span class="token function">addSubview</span><span class="token punctuation">(</span>lbl<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    #elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function">loadView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> view <span class="token operator">=</span> <span class="token function">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    #endif<span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">MyView</span><span class="token punctuation">:</span> <span class="token builtin">OSView</span> <span class="token punctuation">{</span>    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token builtin">CGRect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token function">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        #<span class="token keyword">if</span> <span class="token function">os</span><span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">os</span><span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span>            text <span class="token operator">=</span> <span class="token constant">kStr</span>        #elseif <span class="token function">os</span><span class="token punctuation">(</span>macOS<span class="token punctuation">)</span>            stringValue <span class="token operator">=</span> <span class="token constant">kStr</span>        #endif    <span class="token punctuation">}</span>        <span class="token keyword">required</span> <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span>coder<span class="token punctuation">:</span> <span class="token builtin">NSCoder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>#endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h2><ul><li>QQ Group: 1027277979</li><li>If you’d like to contact me, use mail:<a href="mailto:3440217568@qq.com">3440217568@qq.com</a> or QQ:3440217568 or WeChat:adongenjoylife or telephone:15674119605.</li><li>If you found a bug, and can provide steps to reliably reproduce it, please open an issue.</li><li>If you have a feature request, please open an issue.</li><li>If you want to contribute, please submit a pull request.</li></ul><h2 id="Status"><a href="#Status" class="headerlink" title="Status"></a>Status</h2><p>This project is actively under development. We consider it ready for production use.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Below is a table that shows which version of InterfaceKit you should use for your Swift version.</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit supports multiple methods for installing the library in a project.</p><h3 id="Copy-to-your-project"><a href="#Copy-to-your-project" class="headerlink" title="Copy to your project"></a>Copy to your project</h3><p>Clone the repository by running the following command:</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/adong666666/InterfaceKit.git --depth=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Copy the Swift files in <code>InterfaceKit</code> folder to your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/copy_files.png" alt="Copy files"></div><ul><li>If for iOS or tvOS project, you can copy the file <code>UIInterface.swift</code>.</li><li>If for macOS project, you can copy the file <code>NSInterface.swift</code>.</li><li>If for watchOS project, you can copy the file <code>WKInterface.swift</code>.</li></ul><h3 id="CocoaPods"><a href="#CocoaPods" class="headerlink" title="CocoaPods"></a>CocoaPods</h3><p><a href="https://cocoapods.org/">CocoaPods</a> is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. If you have not installed CocoaPods, just install it with the following command:</p><pre class="line-numbers language-none"><code class="language-none">$ gem install cocoapods<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>You need a `Podfile` to Integrate InterfaceKit into your Xcode project with CocoaPods. If you do not have a Podfile, just create one or use the Podfile provided in `PodfileExample` folder by this repository. Podfile is as follows.<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># Podfile</span>source <span class="token string">'https://github.com/CocoaPods/Specs.git'</span><span class="token comment"># platform:ios, '13.0'</span>use_frameworks<span class="token operator">!</span>inhibit_all_warnings<span class="token operator">!</span>target <span class="token string">'YOUR_TARGET_NAME'</span> <span class="token keyword">do</span>    pod <span class="token string">'InterfaceKit'</span><span class="token keyword">end</span><span class="token comment"># post_install do |installer_representation|</span><span class="token comment">#   installer_representation.pods_project.targets.each do |target|</span><span class="token comment">#     target.build_configurations.each do |config|</span><span class="token comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><span class="token comment">#     end</span><span class="token comment">#   end</span><span class="token comment"># end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Replace <code>YOUR_TARGET_NAME</code> with your project name.<br>To integrate InterfaceKit into your Xcode project using CocoaPods, specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Maybe you have not update CocoaPods, then <code>InterfaceKit</code> may not be found, you can run <code>pod update</code> to update CocoaPods, or just run the following command. </p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>If just for iOS or tvOS project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/UIKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If just for mac project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/AppKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If just for watchOS project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit/WatchKit'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If you want to use the newest release of the framework, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If you want to use the <code>specific</code> release of the framework, you can specify it like following in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string">'InterfaceKit'</span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span><span class="token punctuation">,</span> <span class="token symbol">:branch</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'master'</span><span class="token comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>Then, in the <code>Podfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run the following command:</p><pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/PodfileLocation.png" alt="Podfile Location"></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a> is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.</p><ol><li><p>To integrate InterfaceKit into your Xcode project using Carthage, specify it in your <code>Cartfile</code>(If you don’t have Cartfile, just create one or use the Cartfile provided by this repository in <code>CartfileExample</code> folder):</p><pre class="line-numbers language-ogdl" data-language="ogdl"><code class="language-ogdl">github "adong666666/InterfaceKit" "master"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Then, in the <code>Cartfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run <code>carthage update --use-xcframeworks</code>.<br>OR</p><ul><li>For iOS project, Run <code>carthage update --platform iOS</code>.</li><li>For macOS project, Run <code>carthage update --platform macOS</code>.</li><li>For tvOS project, Run <code>carthage update --platform tvOS</code>.</li><li>For watchOS project, Run <code>carthage update --platform watchOS</code>. <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/CartfileLocation.png" alt="Cartfile Location"></div></li></ul></li><li><p>On your application targets’ <code>"General"</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop <code>InterfaceKit</code> xcframework (or just select the appropriate framework from xcframework) from the Carthage/Build folder on disk.</p></li></ol><h4 id="Carthage-as-a-Static-Library"><a href="#Carthage-as-a-Static-Library" class="headerlink" title="Carthage as a Static Library"></a>Carthage as a Static Library</h4><p>Carthage defaults to building InterfaceKit as a Dynamic Library. </p><p>If you wish to build InterfaceKit as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">carthage update InterfaceKit --platform iOS --no-build<span class="token function">sed</span> -i -e <span class="token string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxprojcarthage build InterfaceKit --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p>The <a href="https://swift.org/package-manager/">Swift Package Manager</a> is a tool for automating the distribution of Swift code and is integrated into the <code>swift</code> compiler. It is in early development, but InterfaceKit does support its use on supported platforms.</p><ol><li>Once you have your Swift package set up, adding InterfaceKit as a dependency is as easy as adding it to the <code>dependencies</code> value of your <code>Package.swift</code>. Then run <code>swift build</code>.</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string">"https://github.com/adong666666/InterfaceKit.git"</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">upToNextMajor</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token string">"5.4.0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>OR</p><ol><li>In Xcode, select File &gt; Swift Packages &gt; Add Package Dependency.</li><li>Follow the prompts using the URL(“<a href="https://github.com/adong666666/InterfaceKit.git&quot;">https://github.com/adong666666/InterfaceKit.git"</a>) for this repository.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/SwiftPackageManager.png" alt="Swift Package Manager Configuration"></div></li></ol><h3 id="Manually"><a href="#Manually" class="headerlink" title="Manually"></a>Manually</h3><p>If you prefer not to use any of the aforementioned dependency managers, you can integrate InterfaceKit into your project manually.</p><h4 id="Embedded-Framework"><a href="#Embedded-Framework" class="headerlink" title="Embedded Framework"></a>Embedded Framework</h4><ul><li>Open up Terminal, <code>cd</code> into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Add InterfaceKit as a git <a href="https://git-scm.com/docs/git-submodule">submodule</a> by running the following command:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/adong666666/InterfaceKit.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>Open the <code>InterfaceKit</code> folder, and drag the <code>InterfaceKit.xcodeproj</code> into the Project Navigator of your application’s Xcode project.</p><blockquote><p>It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/drag_framework.png" alt="Drag and drop xcodeproj"></div><ul><li><p>Select the <code>InterfaceKit.xcodeproj</code> in the Project Navigator and verify the deployment target matches that of your application target.</p></li><li><p>Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the “Targets” heading in the sidebar.</p></li><li><p>In the tab bar at the top of that window, open the <code>"General"</code> panel.</p></li><li><p>Click on the <code>+</code> button under the <code>"Frameworks,Libraries,and Embedded Content"</code> section.</p></li><li><p>You will see the <code>InterfaceKit</code> folder under <code>Workspace</code>. There are <code>InterfaceKit.framework</code> and  <code>InterfaceKitTests.xctest</code> in the <code>InterfaceKit</code> folder`</p><blockquote><p>Click <code>InterfaceKit.framework</code>, and then click <code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/add_framework.png" alt="Add framework"></div><ul><li><p>And that’s it!</p><blockquote><p>The <code>InterfaceKit.framework</code> is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.</p></blockquote></li></ul><h3 id="Unzip-drag-and-drop"><a href="#Unzip-drag-and-drop" class="headerlink" title="Unzip,drag and drop"></a>Unzip,drag and drop</h3><ol><li><p>Unzip the <code>InterfaceKit.xcframework.zip</code> file provided by the repository.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/unzip.png" alt="Unzip"></div></li><li><p>On your application targets’ <code>“General”</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop the unzipped file <code>InterfaceKit.xcframework</code> (or just select the appropriate framework from InterfaceKit.xcframework).</p></li></ol><ul><li><p>If you use <code>xcfameworks</code>, just drag and drop <code>InterfaceKit.xcframework</code>. <code>InterfaceKit.xcframework</code> supports all four platforms(<code>iOS, macOS, tvOS, watchOS</code>).</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/use_xcframeworks.png" alt="Use xcframeworks"></div></li><li><p>If you use <code>frameworks</code>, select the appropriate framework from InterfaceKit.xcframework according to the folder name and the platform of your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.com/adong666666/InterfaceKit/raw/master/Pictures/use_frameworks.png" alt="Use frameworks"></div></li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Why-use-InterfaceKit"><a href="#Why-use-InterfaceKit" class="headerlink" title="Why use InterfaceKit?"></a>Why use InterfaceKit?</h3><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface! InterfaceKit supports for all four platforms(<code>iOS, macOS, tvOS, watchOS</code>). InterfaceKit is <code>constantly</code> updated.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>InterfaceKit is owned and maintained by <a href="https://zsd.name/">Saidong Zhang</a>. You can follow him on github at <a href="https://github.com/adong666666">@Github</a> for project updates and releases. </p><h3 id="Security-Disclosure"><a href="#Security-Disclosure" class="headerlink" title="Security Disclosure"></a>Security Disclosure</h3><p>If you believe you have identified a security vulnerability with InterfaceKit, you should report it as soon as possible via email to <a href="mailto:3440217568@qq.com">3440217568@qq.com</a>. </p><h2 id="Donations"><a href="#Donations" class="headerlink" title="Donations"></a>Donations</h2><p>No donation required, but thanks anyway.</p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Hey! Do you like InterfaceKit? Awesome! We could actually really use your help!</p><p>Open source isn’t just writing code. InterfaceKit could use your help with any of the following:</p><ul><li>Finding (and reporting!) bugs.</li><li>New feature suggestions.</li><li>Answering questions on issues.</li><li>Documentation improvements.</li><li>Reviewing pull requests.</li><li>Helping to manage issue priorities.</li><li>Fixing bugs/new features.</li></ul><p>If any of that sounds cool to you, send a pull request! After your first contribution, we will add you as a member to the repo so you can merge pull requests and help steer the ship <span class="github-emoji"><span>🚢</span><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> You can read more details about that <a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">in our contributor guidelines</a>.</p><p>InterfaceKit’s community has a tremendous positive energy, and the maintainers are committed to keeping things awesome. Like <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">in the CocoaPods community</a>, always assume positive intent; even if a comment sounds mean-spirited, give the person the benefit of the doubt.</p><p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by <a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.md">its terms</a>.</p><h3 id="Adding-new-source-files"><a href="#Adding-new-source-files" class="headerlink" title="Adding new source files"></a>Adding new source files</h3><p>If you add or remove a source file from InterfaceKIt, a corresponding change needs to be made to the <code>InterfaceKit.xcworkspace</code> project at the root of this repository. This project is used for Carthage. Don’t worry, you’ll get an automated warning when submitting a pull request if you forget.</p><h3 id="Help-us-improve-InterfaceKit-documentation"><a href="#Help-us-improve-InterfaceKit-documentation" class="headerlink" title="Help us improve InterfaceKit documentation"></a>Help us improve InterfaceKit documentation</h3><p>Whether you’re a core member or a user trying it out for the first time, you can make a valuable contribution to InterfaceKit by improving the documentation. Help us by:</p><ul><li>sending us feedback about something you thought was confusing or simply missing</li><li>suggesting better wording or ways of explaining certain topics</li><li>sending us a pull request via GitHub</li><li>improving the <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">Chinese documentation</a></li></ul><h3 id="Too-wordy-about-the-above-Then-just-do-it"><a href="#Too-wordy-about-the-above-Then-just-do-it" class="headerlink" title="Too wordy about the above? Then just do it."></a>Too wordy about the above? Then just do it.</h3><ul><li>Fork the repository!</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request</li><li>Other:<br><a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">See CONTRIBUTING.md</a> for details.</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>InterfaceKit is released under the MIT license. <a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.md">See LICENSE</a> for details.</p><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p><a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.md">See CHANGELOG.md</a> for details.</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> git </tag>
            
            <tag> framework </tag>
            
            <tag> github </tag>
            
            <tag> carthage </tag>
            
            <tag> cocoapods </tag>
            
            <tag> macOS </tag>
            
            <tag> tvOS </tag>
            
            <tag> watchOS </tag>
            
            <tag> swift package manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jazzy生成代码解释文档</title>
      <link href="/posts/31013.html"/>
      <url>/posts/31013.html</url>
      
        <content type="html"><![CDATA[<h1 id="jazzy生成代码解释文档"><a href="#jazzy生成代码解释文档" class="headerlink" title="jazzy生成代码解释文档"></a>jazzy生成代码解释文档</h1><p>========================<br>realm的jazzy的确好用</p><h2 id="安装看官网"><a href="#安装看官网" class="headerlink" title="安装看官网"></a>安装看官网</h2><p><a href="https://github.com/realm/jazzy">https://github.com/realm/jazzy</a></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>这个不配置也可以生成文档，只是默认的文档比较丑，我用的文件如下</p><pre class="line-numbers language-none"><code class="language-none">author: Saidong Zhangauthor_url: https://zsd.name/github_url: https://github.com/adong666666/InterfaceKitroot_url: https://zsd.name/InterfaceKit/module: InterfaceKitoutput: Docstheme: fullwidthxcodebuild_arguments: [-workspace, 'InterfaceKit.xcworkspace', -scheme, 'InterfaceKit']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="命令行生成文档"><a href="#命令行生成文档" class="headerlink" title="命令行生成文档"></a>命令行生成文档</h2><p>我用这个命令行<code>jazzy -o Docs</code>将文档生成至Docs文件夹下，注意默认要在xcodeproj目录下执行。<br>这样一来，只要你的代码遵守iOS注释规范，就能生成非常漂亮的代码解释文档<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/jazzy%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E9%87%8A%E6%96%87%E6%A1%A3/%E6%96%87%E6%A1%A3%E6%88%AA%E5%9B%BE.png" alt="文档截图"></p>]]></content>
      
      
      <categories>
          
          <category> 文档处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> Objective-C </tag>
            
            <tag> doc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>podspec示例</title>
      <link href="/posts/34032.html"/>
      <url>/posts/34032.html</url>
      
        <content type="html"><![CDATA[<h1 id="podspec示例"><a href="#podspec示例" class="headerlink" title="podspec示例"></a>podspec示例</h1><p>========================</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><pre class="line-numbers language-none"><code class="language-none">##  Be sure to run `pod spec lint CommonUse.podspec' to ensure this is a#  valid spec and to remove all comments including this before submitting the spec.##  To learn more about Podspec attributes see http://docs.cocoapods.org/specification.html#  To see working Podspecs in the CocoaPods repo see https://github.com/CocoaPods/Specs/#Pod::Spec.new do |s|  # ―――  Spec Metadata  ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  These will help people to find your library, and whilst it  #  can feel like a chore to fill in it's definitely to your advantage. The  #  summary should be tweet-length, and the description more in depth.  #  s.name         = "CommonUse"  s.version      = "0.0.3"  s.summary      = "I am now testing my first framwork"  # This description is used to generate tags and improve search results.  #   * Think: What does it do? Why did you write it? What is the focus?  #   * Try to keep it short, snappy and to the point.  #   * Write the description between the DESC delimiters below.  #   * Finally, don't worry about the indent, CocoaPods strips it!  s.description  = &lt;&lt;-DESC                   I am testing my framwork.Hope to create a perfect one soon .                   DESC  s.homepage     = "https://github.com/adong666666/CommonUse"  # s.screenshots  = "www.example.com/screenshots_1.gif", "www.example.com/screenshots_2.gif"  # ―――  Spec License  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  Licensing your code is important. See http://choosealicense.com for more info.  #  CocoaPods will detect a license file if there is a named LICENSE*  #  Popular ones are 'MIT', 'BSD' and 'Apache License, Version 2.0'.  #  # s.license      = "MIT (example)"  s.license      = { :type =&gt; "MIT", :file =&gt; "FILE_LICENSE" }  # ――― Author Metadata  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  Specify the authors of the library, with email addresses. Email addresses  #  of the authors are extracted from the SCM log. E.g. $ git log. CocoaPods also  #  accepts just a name if you'd rather not provide an email address.  #  #  Specify a social_media_url where others can refer to, for example a twitter  #  profile URL.  #  s.author             = { "Zhangsaidong" =&gt; "3440217568@qq.com" }  # Or just: s.author    = "Zhangsaidong"  # s.authors            = { "Zhangsaidong" =&gt; "3440217568@qq.com" }  # s.social_media_url   = "http://twitter.com/Zhangsaidong"  # ――― Platform Specifics ――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  If this Pod runs only on iOS or OS X, then specify the platform and  #  the deployment target. You can optionally include the target after the platform.  #  # s.platform     = :ios   s.platform     = :ios, "8.0"  #  When using multiple platforms   s.ios.deployment_target = "8.0"  # s.osx.deployment_target = "10.7"  # s.watchos.deployment_target = "2.0"  # s.tvos.deployment_target = "9.0"  # ――― Source Location ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  Specify the location from where the source should be retrieved.  #  Supports git, hg, bzr, svn and HTTP.  #  s.source       = { :git =&gt; "https://github.com/adong666666/CommonUse.git", :tag =&gt; "#{s.version}" }  # ――― Source Code ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  CocoaPods is smart about how it includes source code. For source files  #  giving a folder will include any swift, h, m, mm, c &amp; cpp files.  #  For header files it will include any header in the folder.  #  Not including the public_header_files will make all headers public.  #  s.source_files  = "*.{h,m,swift}"  # s.public_header_files = "Classes/**/*.h"  # ――― Resources ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  A list of resources included with the Pod. These are copied into the  #  target bundle with a build phase script. Anything else will be cleaned.  #  You can preserve files from being cleaned, please don't preserve  #  non-essential files like tests, examples and documentation.  #  # s.resource  = "icon.png"  # s.resources = "Resources/*.png"  # s.preserve_paths = "FilesToSave", "MoreFilesToSave"  # ――― Project Linking ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  Link your library with frameworks, or libraries. Libraries do not include  #  the lib prefix of their name.  #  # s.framework  = "SomeFramework"  # s.frameworks = "SomeFramework", "AnotherFramework"  # s.library   = "iconv"  # s.libraries = "iconv", "xml2"  # ――― Project Settings ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  #  #  If your library depends on compiler flags you can set them in the xcconfig hash  #  where they will only apply to your library. If you depend on other Podspecs  #  you can include multiple dependencies to ensure it works.  # s.requires_arc = true  # s.xcconfig = { "HEADER_SEARCH_PATHS" =&gt; "$(SDKROOT)/usr/include/libxml2" }  # s.dependency "JSONKit", "~&gt; 1.4"  # ――― Swift Version ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #  s.swift_version = '4.2'   end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><pre class="line-numbers language-none"><code class="language-none">Pod::Spec.new do |s|  s.name             = "InterfaceKit"  s.version          = "5.4.0"  s.summary          = "InterfaceKit helps you use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily"  s.description      = &lt;&lt;-DESCThis is supported by [Saidong Zhang](https://zsd.name)its intention is to help people use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily./// You create custom views by declaring types that conform to the ``View``/// protocol. Implement the required ``View/body-swift.property`` computed/// property to provide the content for your custom view. Then you can present your UIKit/// ViewController View by using `InterfaceView(MyView())` , as follows.```//////     struct MyView: View {///         var body: some View {///             InterfaceView(MyView())///         }///     }///```/// The ``View`` protocol provides a large set of modifiers, defined as protocol/// methods with default implementations, that you use to position and configure/// views in the layout of your app. Modifiers typically work by wrapping the/// view instance on which you call them in another view with the specified/// characteristics. For example, adding the ``View/opacity(_:)`` modifier to a/// interface view returns a new view with some amount of transparency:```//////     InterfaceView(MyView())///         .opacity(0.5) // Display partially transparent interface view.///```/// It is recommended to use `ZStack` with `InterfaceView` , as follows.```//////     ZStack {///         InterfaceView(MyView())///         MySwiftUIView()///     }///```                        DESC  s.homepage         = "https://github.com/adong666666/InterfaceKit"  s.license          = 'MIT'  s.author           = { "Saidong Zhang" =&gt; "3440217568@qq.com" }  s.source           = { :git =&gt; "https://github.com/adong666666/InterfaceKit.git", :tag =&gt; s.version.to_s }  s.requires_arc          = true  s.ios.deployment_target = '13.0'  s.osx.deployment_target = '10.15'  s.watchos.deployment_target = '6.0'  s.tvos.deployment_target = '13.0'  s.source_files          = 'Sources/InterfaceKit/*.swift'  s.exclude_files         = ''  s.frameworks = 'SwiftUI'  s.swift_version = '5.4'  # UIKit  s.subspec 'UIKit' do |sp|    sp.source_files  = 'Sources/InterfaceKit/UIInterface.swift'  end  # AppKit  s.subspec 'AppKit' do |sp|    sp.source_files  = 'Sources/InterfaceKit/NSInterface.swift'  end  # WatchKit  s.subspec 'WatchKit' do |sp|    sp.source_files  = 'Sources/InterfaceKit/WKInterface.swift'  endend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage使用工作记录</title>
      <link href="/posts/16458.html"/>
      <url>/posts/16458.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage使用工作记录"><a href="#Carthage使用工作记录" class="headerlink" title="Carthage使用工作记录"></a>Carthage使用工作记录</h1><p>========================<br>主要是三点</p><h2 id="1、写Cartfile"><a href="#1、写Cartfile" class="headerlink" title="1、写Cartfile"></a>1、写Cartfile</h2><pre class="line-numbers language-none"><code class="language-none">github "SnapKit/SnapKit"                    ~&gt; 5.0...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、工程目录下命令行"><a href="#2、工程目录下命令行" class="headerlink" title="2、工程目录下命令行"></a>2、工程目录下命令行</h2><h3 id="生成framework"><a href="#生成framework" class="headerlink" title="生成framework"></a>生成framework</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="生成xcframework"><a href="#生成xcframework" class="headerlink" title="生成xcframework"></a>生成xcframework</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --platform iOS --use-xcframeworks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --use-xcframeworks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、拖入工程"><a href="#3、拖入工程" class="headerlink" title="3、拖入工程"></a>3、拖入工程</h2><p>在工程目录下会生成一个Carthage文件，里面有个Build文件，其中可以找到生成的库</p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % cd /Users/zhangsaidong/Desktop/testzhangsaidong@zhangsaidongs-MacBook-Pro test % $ carthage update --platform iOSzsh: command not found: $zhangsaidong@zhangsaidongs-MacBook-Pro test % carthage update --platform iOS *** Fetching SnapKit*** Checking out SnapKit at "5.0.1"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.LDPWAL.log*** Building scheme "SnapKit" in SnapKit.xcworkspaceA shell task (/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit -output /Users/zhangsaidong/Desktop/test/Carthage/Build/iOS/SnapKit.framework/SnapKit) failed with exit code 1:fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit have the same architectures (arm64) and can't be in the same fat output fileBuilding universal frameworks with common architectures is not possible. The device and simulator slices for "SnapKit" both build for: arm64Rebuild with --use-xcframeworks to create an xcframework bundle instead.zhangsaidong@zhangsaidongs-MacBook-Pro test % carthage update --platform iOS --use-xcframeworks*** Fetching SnapKit*** Checking out SnapKit at "5.0.1"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.w2ACyI.log*** Building scheme "SnapKit" in SnapKit.xcworkspace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro test % carthage update --use-xcframeworks*** Cloning RxSwift*** Checking out RxSwift at "6.1.0"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ZgiMrd.log*** Downloading RxSwift.framework binary at "Ethan.1"*** Building scheme "RxBlocking" in Rx.xcworkspace*** Building scheme "RxRelay" in Rx.xcworkspace*** Building scheme "RxSwift" in Rx.xcworkspace*** Building scheme "RxCocoa" in Rx.xcworkspace*** Building scheme "RxTest" in Rx.xcworkspace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Last login: Sat Apr 24 16:54:56 on ttys004c%                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunIntozhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod installAnalyzing dependenciesDownloading dependenciesRemoving BagelRemoving ResponseDetectiveRemoving Reveal-SDKGenerating Pods projectIntegrating client projectPod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod installAnalyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod installAnalyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching CocoaDebugA shell task (/usr/bin/env git fetch --prune --quiet https://github.com/CocoaDebug/CocoaDebug.git refs/tags/*:refs/tags/* +refs/heads/*:refs/heads/* (launched in /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug)) failed with exit code 128:error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54fatal: the remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failedzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebugA shell task (/usr/bin/env git clone --bare --quiet https://github.com/CocoaDebug/CocoaDebug.git /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug) failed with exit code 128:error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54fatal: the remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failedzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning TangramKit*** Checking out TangramKit at "1.4.2"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.p4tLc5.log*** Building scheme "TangramKit" in TangramKit.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod installAnalyzing dependenciesDownloading dependenciesRemoving TangramKitGenerating Pods projectIntegrating client projectPod installation complete! There are 73 dependencies from the Podfile and 88 total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod installAnalyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete! There are 73 dependencies from the Podfile and 88 total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning SQLite.swift*** Checking out SQLite.swift at "70fb7af324cb3170d921f135f0c84cbdb6487cc2"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.WCcwXI.log*** Building scheme "SQLite tvOS" in SQLite.xcodeproj*** Building scheme "SQLite Mac" in SQLite.xcodeproj*** Building scheme "SQLite watchOS" in SQLite.xcodeproj*** Building scheme "SQLite iOS" in SQLite.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning Surge*** Checking out Surge at "2.3.2"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.0VCdna.log*** Building scheme "Surge-tvOS" in Surge.xcworkspace*** Building scheme "Surge-watchOS" in Surge.xcworkspace*** Building scheme "Surge-iOS" in Surge.xcworkspace*** Building scheme "Surge-macOS" in Surge.xcworkspacezhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning InterfaceKit*** Checking out InterfaceKit at "6c54d468ae1a5c45fc68d800c86e0edd728f913c"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at "6c54d468ae1a5c45fc68d800c86e0edd728f913c"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % open /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at "4c1d617d73bd40393e71741b39c9e2ead3c7572d"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at "4c1d617d73bd40393e71741b39c9e2ead3c7572d"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries*** Fetching InterfaceKit^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries*** Fetching InterfaceKit*** Checking out InterfaceKit at "4c1d617d73bd40393e71741b39c9e2ead3c7572d"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.KPX9mF.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceA shell task (/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit -output /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/Carthage/Build/iOS/InterfaceKit.framework/InterfaceKit) failed with exit code 1:fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit have the same architectures (arm64) and can't be in the same fat output fileBuilding universal frameworks with common architectures is not possible. The device and simulator slices for "InterfaceKit" both build for: arm64Rebuild with --use-xcframeworks to create an xcframework bundle instead.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at "4c1d617d73bd40393e71741b39c9e2ead3c7572d"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at "6fbe972cef5ec57adf09e90fb18abf178279f05d"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspaceBuild Failed    Task failed with exit code 1:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks                  *** Fetching InterfaceKit*** Checking out InterfaceKit at "55b358119d90ce36475caaefb052d0a83dc7e404"*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.5gb46Q.log*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspacezhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git add .g%                                                                                                                                            zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git commit -m "fix"[master 64157fda] fix 9 files changed, 430 insertions(+), 419 deletions(-) rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/InterfaceView.swift (98%) rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/WCInterfaceView.swift (98%)zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git pushEnumerating objects: 53, done.Counting objects: 100% (53/53), done.Delta compression using up to 16 threadsCompressing objects: 100% (27/27), done.Writing objects: 100% (28/28), 364.31 KiB | 3.72 MiB/s, done.Total 28 (delta 17), reused 0 (delta 0)remote: Resolving deltas: 100% (17/17), completed with 16 local objects.To https://github.com/adong666666/RunInto-Apple.git   5dc30f04..64157fda  master -&gt; masterzhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage使用摘录</title>
      <link href="/posts/8147.html"/>
      <url>/posts/8147.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage使用摘录"><a href="#Carthage使用摘录" class="headerlink" title="Carthage使用摘录"></a>Carthage使用摘录</h1><p>========================<br>通常来说，carthage库编译快（因为不用再编译源码），但是编译后的App通常更占内存，Swift Package Manager也是，它们夹带一些其他文件，所以建议发布前，尽量用Pod，也就是开发用Carthage、Swift Package Manager,发布能用cocoapods就用cocoapods。<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E4%BD%BF%E7%94%A8%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage库制作摘录</title>
      <link href="/posts/59855.html"/>
      <url>/posts/59855.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage库制作摘录"><a href="#Carthage库制作摘录" class="headerlink" title="Carthage库制作摘录"></a>Carthage库制作摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作多平台的framework</title>
      <link href="/posts/65269.html"/>
      <url>/posts/65269.html</url>
      
        <content type="html"><![CDATA[<h1 id="制作多平台的framework"><a href="#制作多平台的framework" class="headerlink" title="制作多平台的framework"></a>制作多平台的framework</h1><p>========================<br>看图秒懂系列，Base SDK务必要设置成No SDK,选择other选项，然后什么都不填。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/4.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/5.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去除 GLKit API 弃用警告</title>
      <link href="/posts/14629.html"/>
      <url>/posts/14629.html</url>
      
        <content type="html"><![CDATA[<h1 id="去除-GLKit-API-弃用警告"><a href="#去除-GLKit-API-弃用警告" class="headerlink" title="去除 GLKit API 弃用警告"></a>去除 GLKit API 弃用警告</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">'GLKViewController' was deprecated in iOS 12.0: OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>GLKit </code>相关的 API 从 iOS12 之后就已经标记为<code>弃用</code>了。<br>为了避免 Xcode 满屏的黄色警告⚠️，我们在 <code>Project--Build Settings</code> 里找到 <code>Preprocessor Macros</code> ，然后配置<code>GLES_SILENCE_DEPRECATION=1</code>即可把 OpenGLES 相关的弃用 API 警告去掉。这样 Xcode 的编辑界面就清爽很多了。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%8E%BB%E9%99%A4GLKit_API%E5%BC%83%E7%94%A8%E8%AD%A6%E5%91%8A/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用R.swift检查各种string文件的问题</title>
      <link href="/posts/39320.html"/>
      <url>/posts/39320.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用R-swift检查各种string文件的问题"><a href="#使用R-swift检查各种string文件的问题" class="headerlink" title="使用R.swift检查各种string文件的问题"></a>使用R.swift检查各种string文件的问题</h1><p>========================<br> [R.swift] Skipping 2 strings in ‘Localizable’ (en) because symbol ‘bottle’ would be generated for all of these keys: bottle, bottle<br>这个错误主要是因为你在.strings文件中有两个相同的键值对，或者两个相同的键。</p><pre class="line-numbers language-none"><code class="language-none">"bottle " = "Langyao Straight-mouth Bottle";"bottle " = "Langyao Straight-mouth Bottle";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">"bottle " = "Bottle";"bottle " = "Langyao Straight-mouth Bottle";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> 这么说起来，可以用R.swift检查各种string文件的问题，缺失，重复等问题它都会报警告。</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS日志框架CocoaLumberjack</title>
      <link href="/posts/9465.html"/>
      <url>/posts/9465.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS日志框架CocoaLumberjack"><a href="#iOS日志框架CocoaLumberjack" class="headerlink" title="iOS日志框架CocoaLumberjack"></a>iOS日志框架CocoaLumberjack</h1><p>========================<br>我使用了如下代码进行配置，只需在AppDelegate或SceneDelegate调用configDDLog即可（在其他某些文件配置也是可以的）</p><pre class="line-numbers language-none"><code class="language-none">////  configDDLog.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/4/10.//  Copyright © 2021 adong666666. All rights reserved.//import Foundationimport CocoaLumberjack/** 配置DDLog相关参数 */func configDDLog() {//    //让日志只在debug时输出//    #if DEBUG//        defaultDebugLevel = .Verbose//    #else//    dynamicLogLevel = .off//    #endif    //添加发送日志语句到苹果的日志系统    DDLog.add(DDOSLogger.sharedInstance)    //添加发送日志语句到Xcode控制台    //DDLog.add(DDTTYLogger.sharedInstance!)        //MARK: - 日志将会被保存到沙盒/Library/Caches/Logs，这意味着可以上传至服务器    let fileLogger: DDFileLogger = DDFileLogger() // File Logger    fileLogger.rollingFrequency = 60 * 60 * 24 // 24 hours    fileLogger.logFileManager.maximumNumberOfLogFiles = 7    DDLog.add(fileLogger)    log(fileLogger.currentLogFileInfo?.filePath)    //    //允许控制台带颜色//    DDTTYLogger.sharedInstance?.colorsEnabled = true//    //设置Info下为蓝色//    DDTTYLogger.sharedInstance?.setForegroundColor(UIColor.blue, backgroundColor: UIColor.white, for: .info)}/** 得到输出的字符串的格式 - parameter message:  日志消息的主题 - parameter file:     日志消息所在的文件，方便调试定位用 - parameter function: 日志消息所在的方法，方便调试定位用 - parameter line:     日志消息所在的方法中的行数，方便调试定位用 - returns: 返回输出的日志字符串 */private func getMessage(message: String, file: StaticString, function: StaticString, line: UInt ) -&gt; String {    //初始化需要返回的字符串    var returnMessage: String = ""    //通过file获取文件的名称    if let className = file.description.components(separatedBy: CharacterSet.init(charactersIn: "/")).last {        //拼接字符串        returnMessage = "\n" +                  "className:\(className)\n" +                  " function:\(function)\n" +                  "      ine:\(line)\n" +                  "  message:\(message)"    } else {        //拼接字符串        returnMessage = "\n" +            " function:\(function)\n" +            "      ine:\(line)\n" +            "  message:\(message)"    }    return returnMessage}/**   输出Info等级的日志消息 */public func logInfo(_ message: String, file: StaticString = #file, function: StaticString = #function, line: UInt = #line) {    DDLogInfo(getMessage(message: message, file: file, function: function, line: line))}/** 输出Error等级的日志消息 */public func logError(_ message: String, file: StaticString = #file, function: StaticString = #function, line: UInt = #line) {    DDLogError(getMessage(message: message, file: file, function: function, line: line))}/** 输出Debug等级的日志消息 */public func logDebug(_ message: String, file: StaticString = #file, function: StaticString = #function, line: UInt = #line) {    DDLogDebug(getMessage(message: message, file: file, function: function, line: line))}/** 输出Warn等级的日志消息 */public func logWarn(_ message: String, file: StaticString = #file, function: StaticString = #function, line: UInt = #line) {    DDLogWarn(getMessage(message: message, file: file, function: function, line: line))}public func logVerbose(_ message: String, file: StaticString = #file, function: StaticString = #function, line: UInt = #line) {    DDLogVerbose(getMessage(message: message, file: file, function: function, line: line))}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此外，我还引用了官方demo的一些代码</p><pre class="line-numbers language-none"><code class="language-none">// Software License Agreement (BSD License)//// Copyright (c) 2010-2021, Deusty, LLC// All rights reserved.//// Redistribution and use of this software in source and binary forms,// with or without modification, are permitted provided that the following conditions are met://// * Redistributions of source code must retain the above copyright notice,//   this list of conditions and the following disclaimer.//// * Neither the name of Deusty nor the names of its contributors may be used//   to endorse or promote products derived from this software without specific//   prior written permission of Deusty, LLC.#if SWIFT_PACKAGEimport CocoaLumberjackimport CocoaLumberjackSwiftSupport#endif/** * Replacement for Swift's `assert` function that will output a log message even when assertions * are disabled. * * - Parameters: *   - condition: The condition to test. Unlike `Swift.assert`, `condition` is always evaluated, *     even when assertions are disabled. *   - message: A string to log (using `DDLogError`) if `condition` evaluates to `false`. *     The default is an empty string. */@inlinablepublic func DDAssert(_ condition: @autoclosure () -&gt; Bool, _ message: @autoclosure () -&gt; String = "", level: DDLogLevel = .all, context: Int = 0, file: StaticString = #file, function: StaticString = #function, line: UInt = #line, tag: Any? = nil, asynchronous async: Bool = false, ddlog: DDLog = DDLog.sharedInstance) {    if !condition() {        DDLogError(message(), level: level, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)        Swift.assertionFailure(message(), file: file, line: line)    }}/** * Replacement for Swift's `assertionFailure` function that will output a log message even * when assertions are disabled. * * - Parameters: *   - message: A string to log (using `DDLogError`). The default is an empty string. */@inlinablepublic func DDAssertionFailure(_ message: @autoclosure () -&gt; String = "", level: DDLogLevel = .all, context: Int = 0, file: StaticString = #file, function: StaticString = #function, line: UInt = #line, tag: Any? = nil, asynchronous async: Bool = false, ddlog: DDLog = DDLog.sharedInstance) {    DDLogError(message(), level: level, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)    Swift.assertionFailure(message(), file: file, line: line)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">// Software License Agreement (BSD License)//// Copyright (c) 2010-2021, Deusty, LLC// All rights reserved.//// Redistribution and use of this software in source and binary forms,// with or without modification, are permitted provided that the following conditions are met://// * Redistributions of source code must retain the above copyright notice,//   this list of conditions and the following disclaimer.//// * Neither the name of Deusty nor the names of its contributors may be used//   to endorse or promote products derived from this software without specific//   prior written permission of Deusty, LLC.@_exported import CocoaLumberjack#if SWIFT_PACKAGEimport CocoaLumberjackSwiftSupport#endifextension DDLogFlag {    public static func from(_ logLevel: DDLogLevel) -&gt; DDLogFlag {        return DDLogFlag(rawValue: logLevel.rawValue)    }    public init(_ logLevel: DDLogLevel) {        self = DDLogFlag(rawValue: logLevel.rawValue)    }    /// Returns the log level, or the lowest equivalent.    public func toLogLevel() -&gt; DDLogLevel {        if let ourValid = DDLogLevel(rawValue: rawValue) {            return ourValid        } else {            if contains(.verbose) {                return .verbose            } else if contains(.debug) {                return .debug            } else if contains(.info) {                return .info            } else if contains(.warning) {                return .warning            } else if contains(.error) {                return .error            } else {                return .off            }        }    }}/// The log level that can dynamically limit log messages (vs. the static DDDefaultLogLevel). This log level will only be checked, if the message passes the `DDDefaultLogLevel`.public var dynamicLogLevel = DDLogLevel.all/// Resets the `dynamicLogLevel` to `.all`./// - SeeAlso: `dynamicLogLevel`@inlinablepublic func resetDynamicLogLevel() {    dynamicLogLevel = .all}@available(*, deprecated, message: "Please use dynamicLogLevel", renamed: "dynamicLogLevel")public var defaultDebugLevel: DDLogLevel {    get {        return dynamicLogLevel    }    set {        dynamicLogLevel = newValue    }}@available(*, deprecated, message: "Please use resetDynamicLogLevel", renamed: "resetDynamicLogLevel")public func resetDefaultDebugLevel() {    resetDynamicLogLevel()}/// If `true`, all logs (except errors) are logged asynchronously by default.public var asyncLoggingEnabled = true@inlinablepublic func _DDLogMessage(_ message: @autoclosure () -&gt; Any,                          level: DDLogLevel,                          flag: DDLogFlag,                          context: Int,                          file: StaticString,                          function: StaticString,                          line: UInt,                          tag: Any?,                          asynchronous: Bool,                          ddlog: DDLog) {    // The `dynamicLogLevel` will always be checked here (instead of being passed in).    // We cannot "mix" it with the `DDDefaultLogLevel`, because otherwise the compiler won't strip strings that are not logged.    if level.rawValue &amp; flag.rawValue != 0 &amp;&amp; dynamicLogLevel.rawValue &amp; flag.rawValue != 0 {        // Tell the DDLogMessage constructor to copy the C strings that get passed to it.        let logMessage = DDLogMessage(message: String(describing: message()),                                      level: level,                                      flag: flag,                                      context: context,                                      file: String(describing: file),                                      function: String(describing: function),                                      line: line,                                      tag: tag,                                      options: [.copyFile, .copyFunction],                                      timestamp: nil)        ddlog.log(asynchronous: asynchronous, message: logMessage)    }}@inlinablepublic func DDLogDebug(_ message: @autoclosure () -&gt; Any,                       level: DDLogLevel = .debug,                       context: Int = 0,                       file: StaticString = #file,                       function: StaticString = #function,                       line: UInt = #line,                       tag: Any? = nil,                       asynchronous async: Bool = asyncLoggingEnabled,                       ddlog: DDLog = .sharedInstance) {    _DDLogMessage(message(), level: level, flag: .debug, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)}@inlinablepublic func DDLogInfo(_ message: @autoclosure () -&gt; Any,                      level: DDLogLevel = .info,                      context: Int = 0,                      file: StaticString = #file,                      function: StaticString = #function,                      line: UInt = #line,                      tag: Any? = nil,                      asynchronous async: Bool = asyncLoggingEnabled,                      ddlog: DDLog = .sharedInstance) {    _DDLogMessage(message(), level: level, flag: .info, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)}@inlinablepublic func DDLogWarn(_ message: @autoclosure () -&gt; Any,                      level: DDLogLevel = DDLogLevel.warning,                      context: Int = 0,                      file: StaticString = #file,                      function: StaticString = #function,                      line: UInt = #line,                      tag: Any? = nil,                      asynchronous async: Bool = asyncLoggingEnabled,                      ddlog: DDLog = .sharedInstance) {    _DDLogMessage(message(), level: level, flag: .warning, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)}@inlinablepublic func DDLogVerbose(_ message: @autoclosure () -&gt; Any,                         level: DDLogLevel = .verbose,                         context: Int = 0,                         file: StaticString = #file,                         function: StaticString = #function,                         line: UInt = #line,                         tag: Any? = nil,                         asynchronous async: Bool = asyncLoggingEnabled,                         ddlog: DDLog = .sharedInstance) {    _DDLogMessage(message(), level: level, flag: .verbose, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)}@inlinablepublic func DDLogError(_ message: @autoclosure () -&gt; Any,                       level: DDLogLevel = .error,                       context: Int = 0,                       file: StaticString = #file,                       function: StaticString = #function,                       line: UInt = #line,                       tag: Any? = nil,                       asynchronous async: Bool = false,                       ddlog: DDLog = .sharedInstance) {    _DDLogMessage(message(), level: level, flag: .error, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)}/// Returns a String of the current filename, without full path or extension.////// Analogous to the C preprocessor macro `THIS_FILE`.public func currentFileName(_ fileName: StaticString = #file) -&gt; String {    var str = String(describing: fileName)    if let idx = str.range(of: "/", options: .backwards)?.upperBound {        str = String(str[idx...])    }    if let idx = str.range(of: ".", options: .backwards)?.lowerBound {        str = String(str[..&lt;idx])    }    return str}// swiftlint:disable identifier_name// swiftlint doesn't like func names that begin with a capital letter - deprecated@available(*, deprecated, message: "Please use currentFileName", renamed: "currentFileName")public func CurrentFileName(_ fileName: StaticString = #file) -&gt; String {    return currentFileName(fileName)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">// Software License Agreement (BSD License)//// Copyright (c) 2010-2021, Deusty, LLC// All rights reserved.//// Redistribution and use of this software in source and binary forms,// with or without modification, are permitted provided that the following conditions are met://// * Redistributions of source code must retain the above copyright notice,//   this list of conditions and the following disclaimer.//// * Neither the name of Deusty nor the names of its contributors may be used//   to endorse or promote products derived from this software without specific//   prior written permission of Deusty, LLC.#if canImport(Combine)import Combine#if SWIFT_PACKAGEimport CocoaLumberjackimport CocoaLumberjackSwiftSupport#endif@available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)extension DDLog {    /**     * Creates a message publisher.     *     * The publisher will add and remove loggers as subscriptions are added and removed.     *     * The level that you provide here is a preemptive filter (for performance).     * That is, the level specified here will be used to filter out logMessages so that     * the logger is never even invoked for the messages.     *     * More information:     *    See -[DDLog addLogger:with:]     *     * - Parameter logLevel: preemptive filter of the message returned by the publisher. All levels are sent by default     * - Returns: A MessagePublisher that emits LogMessages filtered by the specified logLevel     **/    public func messagePublisher(with logLevel: DDLogLevel = .all) -&gt; MessagePublisher {        return MessagePublisher(log: self, with: logLevel)    }    // MARK: - MessagePublisher        @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)    public struct MessagePublisher: Combine.Publisher {        public typealias Output = DDLogMessage        public typealias Failure = Never        private let log: DDLog        private let logLevel: DDLogLevel        public init(log: DDLog, with logLevel: DDLogLevel) {            self.log = log            self.logLevel = logLevel        }        public func receive&lt;S&gt;(subscriber: S) where S: Subscriber, S.Failure == Failure, S.Input == Output {            let subscription = Subscription(log: self.log, with: logLevel, subscriber: subscriber)            subscriber.receive(subscription: subscription)        }    }    // MARK: - Subscription    private final class Subscription&lt;S: Subscriber&gt;: NSObject, DDLogger, Combine.Subscription        where S.Input == DDLogMessage {        private var subscriber: S?        private weak var log: DDLog?        //Not used but DDLogger requires it. The preferred way to achieve this is to use the `map()` Combine operator of the publisher.        //ie:        // DDLog.sharedInstance.messagePublisher()        //     .map { [format log message] }        //     .sink(receiveValue: { [process log message] })        //        var logFormatter: DDLogFormatter? = nil        let combineIdentifier = CombineIdentifier()        init(log: DDLog, with logLevel: DDLogLevel, subscriber: S) {            self.subscriber = subscriber            self.log = log            super.init()            log.add(self, with: logLevel)        }        func request(_ demand: Subscribers.Demand) {            //The log messages are endless until canceled, so we won't do any demand management.            //Combine operators can be used to deal with it as needed.        }        func cancel() {            self.log?.remove(self)            self.subscriber = nil        }        func log(message logMessage: DDLogMessage) {            _ = self.subscriber?.receive(logMessage)        }    }}@available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)extension Publisher where Output == DDLogMessage {    public func formatted(with formatter: DDLogFormatter) -&gt; Publishers.CompactMap&lt;Self, String&gt; {        return compactMap { formatter.format(message: $0) }    }}#endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看cocoapods中各个库的版本</title>
      <link href="/posts/48263.html"/>
      <url>/posts/48263.html</url>
      
        <content type="html"><![CDATA[<h1 id="查看cocoapods中各个库的版本"><a href="#查看cocoapods中各个库的版本" class="headerlink" title="查看cocoapods中各个库的版本"></a>查看cocoapods中各个库的版本</h1><p>========================</p><p>记录一下</p><pre class="line-numbers language-none"><code class="language-none">cat Podfile.lock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Last login: Fri Apr  9 05:48:04 on ttys002zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunIntozhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cat Podfile.lockPODS:  - Alamofire (5.4.1)  - ARVideoKit (1.6.0)  - BarcodeScanner-custom (5.1.4)  - ColorSlider (4.4)  - Crashlytics (3.14.0):    - Fabric (~&gt; 1.10.2)  - Differentiator (5.0.0)  - Fabric (1.10.2)  - HandyJSON (5.0.2)  - JGProgressHUD (2.2)  - Kingfisher (6.1.1)  - MJRefresh (3.5.0)  - Moya (14.0.0):    - Moya/Core (= 14.0.0)  - Moya/Core (14.0.0):    - Alamofire (~&gt; 5.0)  - "NSObject+Rx (2.1.0)":    - RxSwift  - ObjectMapper (4.2.0)  - OpenCV (4.1.0)  - PinpointKit (1.5.0):    - PinpointKit/Core (= 1.5.0)  - PinpointKit/Core (1.5.0)  - R.swift (5.3.1):    - R.swift.Library (~&gt; 5.3.0)  - R.swift.Library (5.3.0)  - ReactorKit (3.0.0):    - RxSwift (~&gt; 6.0)    - WeakMapTable (~&gt; 1.1)  - RxCocoa (6.1.0):    - RxRelay (= 6.1.0)    - RxSwift (= 6.1.0)  - RxDataSources (5.0.0):    - Differentiator (~&gt; 5.0)    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxFeedback (4.0.0):    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxGesture (4.0.0):    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxRelay (6.1.0):    - RxSwift (= 6.1.0)  - RxSwift (6.1.0)  - Siren (5.8.1)  - SnapKit (5.0.1)  - Spring (1.0.6)  - SQLite.swift (0.12.2):    - SQLite.swift/standard (= 0.12.2)  - SQLite.swift/standard (0.12.2)  - SwifterSwift/CoreGraphics (5.2.0)  - SwifterSwift/Dispatch (5.2.0)  - SwifterSwift/Foundation (5.2.0)  - SwifterSwift/SceneKit (5.2.0)  - SwifterSwift/StoreKit (5.2.0)  - SwifterSwift/SwiftStdlib (5.2.0)  - SwifterSwift/UIKit (5.2.0)  - SwiftLint (0.42.0)  - SwiftyBeaver (1.9.3)  - SwiftyJSON (5.0.0)  - Then (2.7.0)  - Toast-Swift (5.0.1)  - WeakMapTable (1.2.0)  - Zip (2.1.1)DEPENDENCIES:  - Alamofire  - ARVideoKit (from `https://github.com/AFathi/ARVideoKit.git`, branch `swift_5`)  - BarcodeScanner-custom (from `https://github.com/adong666666/BarCodeScanner-custom.git`, tag `5.1.4`)  - ColorSlider  - Crashlytics  - Fabric  - HandyJSON  - JGProgressHUD  - Kingfisher  - MJRefresh  - Moya  - "NSObject+Rx"  - ObjectMapper  - OpenCV  - PinpointKit  - R.swift  - ReactorKit  - RxCocoa  - RxDataSources  - RxFeedback  - RxGesture  - RxSwift  - Siren  - SnapKit  - Spring (from `https://github.com/MengTo/Spring.git`)  - SQLite.swift  - SwifterSwift/CoreGraphics  - SwifterSwift/Dispatch  - SwifterSwift/Foundation  - SwifterSwift/SceneKit  - SwifterSwift/StoreKit  - SwifterSwift/SwiftStdlib  - SwifterSwift/UIKit  - SwiftLint  - SwiftyBeaver  - SwiftyJSON  - Then  - Toast-Swift  - ZipSPEC REPOS:  https://github.com/CocoaPods/Specs.git:    - Alamofire    - ColorSlider    - Crashlytics    - Differentiator    - Fabric    - HandyJSON    - JGProgressHUD    - Kingfisher    - MJRefresh    - Moya    - "NSObject+Rx"    - ObjectMapper    - OpenCV    - PinpointKit    - R.swift    - R.swift.Library    - ReactorKit    - RxCocoa    - RxDataSources    - RxFeedback    - RxGesture    - RxRelay    - RxSwift    - Siren    - SnapKit    - SQLite.swift    - SwifterSwift    - SwiftLint    - SwiftyBeaver    - SwiftyJSON    - Then    - Toast-Swift    - WeakMapTable    - ZipEXTERNAL SOURCES:  ARVideoKit:    :branch: swift_5    :git: https://github.com/AFathi/ARVideoKit.git  BarcodeScanner-custom:    :git: https://github.com/adong666666/BarCodeScanner-custom.git    :tag: 5.1.4  Spring:    :git: https://github.com/MengTo/Spring.gitCHECKOUT OPTIONS:  ARVideoKit:    :commit: b7e1facdedd8fe16d04ef5f47c4697e89bad9f27    :git: https://github.com/AFathi/ARVideoKit.git  BarcodeScanner-custom:    :git: https://github.com/adong666666/BarCodeScanner-custom.git    :tag: 5.1.4  Spring:    :commit: 50d92a5b9e08848387ae95bf44c6ad20834f7083    :git: https://github.com/MengTo/Spring.gitSPEC CHECKSUMS:  Alamofire: 2291f7d21ca607c491dd17642e5d40fdcda0e65c  ARVideoKit: 4bd4ac37b63e32de354d5470949416f527dd88f5  BarcodeScanner-custom: 661d4e5a498a848580857e2eb5cbd1718bb356b7  ColorSlider: 9a888e65b871fa1e6a26fadebf4931c949935681  Crashlytics: 9220f5bc89e7a618df411b4f639389dbfb0e03d2  Differentiator: e8497ceab83c1b10ca233716d547b9af21b9344d  Fabric: ea977e3cd9c20425516d3dafd3bf8c941c51223f  HandyJSON: 9e4e236f5d2dbefad5155a77417bbea438201c03  JGProgressHUD: d83d7a981b85d11205e19ff8ad5bb9c40571c847  Kingfisher: 676d63307fbef6ed5d5ed400bff36983480d7500  MJRefresh: 6afc955813966afb08305477dd7a0d9ad5e79a16  Moya: 5b45dacb75adb009f97fde91c204c1e565d31916  "NSObject+Rx": 09277ba78aa12a8e454c82429eb4e31bfb413131  ObjectMapper: 1eb41f610210777375fa806bf161dc39fb832b81  OpenCV: 52cd4d72ff29e2be83421477aec5447320b7fb19  PinpointKit: 8599f60b7cff2b65e52a10293c220b6b81f14839  R.swift: 56ec7e3aef34b9eee47a659e42462db2c1cc5ac3  R.swift.Library: 0fc583cb55a99e28901299cc451614cad1161962  ReactorKit: 5348c9881dcb546605b451e32759dccc9937d36e  RxCocoa: 5c51f02d562cbd94629f6c26cf0c80fe4ab8d343  RxDataSources: aa47cc1ed6c500fa0dfecac5c979b723542d79cf  RxFeedback: c762a59b678ed8e30b5c84b6e4e03ad0341d2ecb  RxGesture: b095a86df33d199a33b46a644e7c58bdef8ab035  RxRelay: 483e1a19fad961b41f0b0c0bee506f46c1ae14fe  RxSwift: a834e5c538e89eca0cae86f403f4fbf0336786ce  Siren: de768099aff1f1c9acda4247064788a4940b4bf3  SnapKit: 97b92857e3df3a0c71833cce143274bf6ef8e5eb  Spring: 3d113f14575ef79aec9c5f906dfa4f5001c03254  SQLite.swift: d2b4642190917051ce6bd1d49aab565fe794eea3  SwifterSwift: 334181863c416882d97b7a60c05054d9e4d799e2  SwiftLint: 4fa9579c63416865179bc416f0a92d55f009600d  SwiftyBeaver: 2e8acd6fc90c6d0a27055867a290794926d57c02  SwiftyJSON: 36413e04c44ee145039d332b4f4e2d3e8d6c4db7  Then: acfe0be7e98221c6204e12f8161459606d5d822d  Toast-Swift: 9b6a70f28b3bf0b96c40d46c0c4b9d6639846711  WeakMapTable: 05c694ce8439a7a9ebabb56187287a63c57673d6  Zip: 414f59909701fda9a84ab774ebe0f5449b1082ccPODFILE CHECKSUM: 3c89a7a0577096b9dbf521d41263b504084bd37fCOCOAPODS: 1.10.1zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zip使用</title>
      <link href="/posts/17588.html"/>
      <url>/posts/17588.html</url>
      
        <content type="html"><![CDATA[<h1 id="Zip使用"><a href="#Zip使用" class="headerlink" title="Zip使用"></a>Zip使用</h1><p>========================</p><p>感觉官方写得挺明白的</p><pre class="line-numbers language-none"><code class="language-none">do {    let filePath = Bundle.main.url(forResource: "file", withExtension: "zip")!    let unzipDirectory = try Zip.quickUnzipFile(filePath) // Unzip    let zipFilePath = try Zip.quickZipFiles([filePath], fileName: "archive") // Zip}catch {  print("Something went wrong")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">do {    let filePath = Bundle.main.url(forResource: "file", withExtension: "zip")!    let documentsDirectory = FileManager.default.urls(for:.documentDirectory, in: .userDomainMask)[0]    try Zip.unzipFile(filePath, destination: documentsDirectory, overwrite: true, password: "password", progress: { (progress) -&gt; () in        print(progress)    }) // Unzip    let zipFilePath = documentsFolder.appendingPathComponent("archive.zip")    try Zip.zipFiles([filePath], zipFilePath: zipFilePath, password: "password", progress: { (progress) -&gt; () in        print(progress)    }) //Zip}catch {  print("Something went wrong")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Zip.addCustomFileExtension("file-extension-here")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我是这样用的</p><pre class="line-numbers language-none"><code class="language-none">func unzipModels(_ path: [String], modelUrl: String, directory: String) {    for item in path {        let fileManager = FileManager.default        let urls: [URL] = fileManager.urls(for: .documentDirectory, in: .userDomainMask)        let documentURL = urls.first!        let url = documentURL.appendingPathComponent(directory + item)        let urlForTemp = documentURL.appendingPathComponent("Temp", isDirectory: true)        let destinationURL = documentURL.appendingPathComponent(directory + "File", isDirectory: true)            while true {                if fileManager.fileExists(atPath: url.path) {                    break                } else {                    Thread.sleep(forTimeInterval: 1)                    continue                }            }        do {            try Zip.unzipFile(url, destination: urlForTemp, overwrite: true, password: nil, progress: { (progress) in                if progress == 1 {                    do {                        if fileManager.fileExists(atPath: destinationURL.path ) {                            try fileManager.removeItem(atPath: destinationURL.path)                        }                        try fileManager.moveItem(atPath: urlForTemp.path, toPath: destinationURL.path)                        try fileManager.removeItem(atPath: url.path)                    } catch {                        log(error)                    }                }            })        } catch {            log(error)        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">func downloadModelsAndUnzip(_ path: [String], modelUrl: String, directory: String) {    DispatchQueue.global().async {        downloadModelsWithoutDispatchQueue(path, modelUrl: modelUrl, directory: directory)        unzipModels(path, modelUrl: modelUrl, directory: directory)    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> zip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS mlmodelc内部文件格式规范</title>
      <link href="/posts/32840.html"/>
      <url>/posts/32840.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS-mlmodelc内部文件格式规范"><a href="#iOS-mlmodelc内部文件格式规范" class="headerlink" title="iOS mlmodelc内部文件格式规范"></a>iOS mlmodelc内部文件格式规范</h1><p>========================<br>尽量本地编译Core ML mlmodel，则得到的mlmodelc可以直接使用</p><p>通过网络加载的Core ML mlmodel所编译而出的mlmodelc虽说内容一致，但格式不方便直接使用，而且……最重要的是，网络加载的mlmodel至少还要再编译一次，相当于在App内占用了两个模型的体量。而且有可能需要重复编译多次，即占用多个模型的体量，如果还不注重清理的话，App的体量会越来越大，而且内部数据还大量重复，因为编译出来mlmodec不能直接使用(你可以在代码里调整模型的内部格式，但是这也太麻烦了，对不同模型还得不同处理)</p><p>所以建议使用mlmodel本地编译出来后的mlmodelc，你可以在Products中的.app文件夹中右键显示包内容找到编译后的mlmodelc文件</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> file </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS延时</title>
      <link href="/posts/12351.html"/>
      <url>/posts/12351.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS延时"><a href="#iOS延时" class="headerlink" title="iOS延时"></a>iOS延时</h1><p>========================</p><p>今天我使用了这样一种延时，目的是等待文件下载完，返回与文件相关的数据，我试了各种多线程，后面发现这种延时有阻塞的味道，能有效地防止函数提前返回数据</p><pre class="line-numbers language-none"><code class="language-none">while true {    if let compiledModelURL = try? MLModel.compileModel(at: url) {    } else {        Thread.sleep(forTimeInterval: 2)        continue    }    break}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种延时不能起到阻塞作用，也不能防止函数提前返回，但是它可以等待一定时间后执行某种操作。</p><pre class="line-numbers language-none"><code class="language-none">DispatchQueue.main.asyncAfter(deadline: .now() + 3) {    let view = UIViewController.getCurrentViewController()?.view    view?.hideToastActivity()    view?.hideAllToasts()}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面是网上看到的一些延时</p><pre class="line-numbers language-none"><code class="language-none">// 1.perform(必须在主线程中执行)self.perform(#selector(delayExecution), with: nil, afterDelay: 3)// 取消NSObject.cancelPreviousPerformRequests(withTarget: self)// 2.timer(必须在主线程中执行)Timer.scheduledTimer(timeInterval: 3, target: self, selector: #selector(delayExecution), userInfo: nil, repeats: false)// 3.Thread (在主线程会卡主界面)Thread.sleep(forTimeInterval: 3)self.delayExecution()// 4.GCD 主线程/子线程DispatchQueue.main.asyncAfter(deadline: .now() + 3) {    self.delayExecution()}DispatchQueue.global().asyncAfter(deadline: .now() + 3) {    self.delayExecution()}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="延时执行"><a href="#延时执行" class="headerlink" title="延时执行"></a>延时执行</h2><pre class="line-numbers language-none"><code class="language-none">typealias Task = (_ cancel: Bool) -&gt; Void/// 代码延迟运行////// - Parameters:///   - delayTime: 延时时间。比如：.seconds(5)、.milliseconds(500)///   - qosClass: 要使用的全局QOS类（默认为 nil，表示主线程）///   - task: 延迟运行的代码/// - Returns: Task?@discardableResultstatic func bk_delay(by delayTime: TimeInterval, qosClass: DispatchQoS.QoSClass? = nil, _ task: @escaping () -&gt; Void) -&gt; Task? {        func dispatch_later(block: @escaping () -&gt; Void) {        let dispatchQueue = qosClass != nil ? DispatchQueue.global(qos: qosClass!) : .main        dispatchQueue.asyncAfter(deadline: .now() + delayTime, execute: block)    }        var closure: (() -&gt; Void)? = task    var result: Task?        let delayedClosure: Task = { cancel in        if let internalClosure = closure {            if !cancel {                DispatchQueue.main.async(execute: internalClosure)            }        }        closure = nil        result = nil    }        result = delayedClosure        dispatch_later {        if let delayedClosure = result {            delayedClosure(false)        }    }        return result    }/// 取消代码延时运行func delayCancel(_ task: Task?) {    task?(true)}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h2><pre class="line-numbers language-none"><code class="language-none">/// GCD定时器倒计时////// - Parameters:///   - timeInterval: 间隔时间///   - repeatCount: 重复次数///   - handler: 循环事件,闭包参数: 1.timer 2.剩余执行次数func dispatchTimer(timeInterval: Double, repeatCount: Int, handler: @escaping (DispatchSourceTimer?, Int) -&gt; Void) {        if repeatCount &lt;= 0 {        return    }    let timer = DispatchSource.makeTimerSource(flags: [], queue: DispatchQueue.main)    var count = repeatCount    timer.schedule(deadline: .now(), repeating: timeInterval)    timer.setEventHandler {        count -= 1        DispatchQueue.main.async {            handler(timer, count)        }        if count == 0 {            timer.cancel()        }    }    timer.resume()    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><pre class="line-numbers language-none"><code class="language-none">/// GCD实现定时器////// - Parameters:///   - timeInterval: 间隔时间///   - handler: 事件///   - needRepeat: 是否重复func dispatchTimer(timeInterval: Double, handler: @escaping (DispatchSourceTimer?) -&gt; Void, needRepeat: Bool) {        let timer = DispatchSource.makeTimerSource(flags: [], queue: DispatchQueue.main)    timer.schedule(deadline: .now(), repeating: timeInterval)    timer.setEventHandler {        DispatchQueue.main.async {            if needRepeat {                handler(timer)            } else {                timer.cancel()                handler(nil)            }        }    }    timer.resume()    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> time </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS调试摘录</title>
      <link href="/posts/28837.html"/>
      <url>/posts/28837.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS调试摘录"><a href="#iOS调试摘录" class="headerlink" title="iOS调试摘录"></a>iOS调试摘录</h1><p>========================<br> po vo do 等调试命令可以了解下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS_Swift文件夹和文件操作</title>
      <link href="/posts/700.html"/>
      <url>/posts/700.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS-Swift文件夹和文件操作"><a href="#iOS-Swift文件夹和文件操作" class="headerlink" title="iOS_Swift文件夹和文件操作"></a>iOS_Swift文件夹和文件操作</h1><p>========================</p><p>首先获取app文件夹：(以下例子都在doucment文件夹下操作)</p><pre class="line-numbers language-none"><code class="language-none">let manager = FileManager.defaultlet urls: [URL] = manager.urls(for: .documentDirectory, in: .userDomainMask)// .libraryDirectory、.cachesDirectory ...self.documentURL = urls.first!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan", isDirectory: true)var isDirectory: ObjCBool = ObjCBool(false)let isExist = manager.fileExists(atPath: url.path, isDirectory: &amp;isDirectory)if !isExist {  do {    try manager.createDirectory(at: url, withIntermediateDirectories: true, attributes: nil)  } catch {    print("createDirectory error:\(error)")  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建文件，并写入内容"><a href="#创建文件，并写入内容" class="headerlink" title="创建文件，并写入内容"></a>创建文件，并写入内容</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan/test1.txt", isDirectory: true) // txt文件会自动创建，只要给个名称就行let string = "moxiaoyan"do {  try string.write(to: url, atomically: true, encoding: .utf8)  // Data、Array、Dictionary、Image 都可以write} catch {  print("write string error:\(error)")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件夹-文件-信息"><a href="#文件夹-文件-信息" class="headerlink" title="文件夹/文件 信息"></a>文件夹/文件 信息</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan", isDirectory: true) // or "moxiaoyan/test1.txt"// 可读、可写、可执行、可删除let readable = manager.isReadableFile(atPath: url.path)let writeable = manager.isWritableFile(atPath: url.path)let executable = manager.isExecutableFile(atPath: url.path)let deleteable = manager.isDeletableFile(atPath: url.path)print("readable:\(readable) writeable:\(writeable) executable:\(executable) deleteable:\(deleteable)") // NSFileCreationDate:创建时间、NSFileSize:文件大小、NSFileType:文件类型...do {  let attributes: Dictionary = try manager.attributesOfItem(atPath: url.path)  print("attributes\(attributes)")  let fileSize = attributes[FileAttributeKey.size] as! Int  print("fileSize:\(fileSize)")} catch {  print("attributes error: \(error)")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除-文件夹-文件"><a href="#删除-文件夹-文件" class="headerlink" title="删除 文件夹/文件"></a>删除 文件夹/文件</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan", isDirectory: true)var isDirectory: ObjCBool = ObjCBool(false)let isExist = manager.fileExists(atPath: url.path, isDirectory: &amp;isDirectory)if isExist {  do {    try manager.removeItem(at: url) // 删除文件    // try manager.removeItem(atPath: url.path) // 删除文件路径  } catch {    print("removeItem error:\(error)")  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="清空文件夹"><a href="#清空文件夹" class="headerlink" title="清空文件夹"></a>清空文件夹</h2><pre class="line-numbers language-none"><code class="language-none">// 删除文件夹里的所有文件，而不删除文件夹let url = self.documentURL.appendingPathComponent("moxiaoyan", isDirectory: true)// 方法1：删除，再创建// self.deleteFile(name)// self.createFile(name) // 方法2：遍历文件删除let files = manager.subpaths(atPath: url.path)for file in files ?? [] {  do {    try manager.removeItem(atPath: url.path + "/\(file)") // 需要拼接路径！！  } catch {    print("remove item:\(file)\n error:\(error)")  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan", isDirectory: true)// 1.1 浅遍历：只有 文件夹/文件 名do {  let contentsOfDirectory = try manager.contentsOfDirectory(atPath: url.path)  print("contentsOfDirectory:\(contentsOfDirectory)")} catch {  print("1.1 浅遍历 error:\(error)")}// 1.2 浅遍历：包含完整路径do {  let contentsOfDirectory = try manager.contentsOfDirectory(at: url,                                                            includingPropertiesForKeys: nil,                                                            options: .skipsHiddenFiles)  print("skipsHiddenFiles:\(contentsOfDirectory)")} catch {  print("1.2 浅遍历 error:\(error)")} // 2.1 深度遍历：只有当前文件夹下的路径let enumberatorAtPath = manager.enumerator(atPath: url.path)print("2.1 深度遍历：\(enumberatorAtPath?.allObjects)")// 2.2 深度遍历：包含完整路径let enumberatorAtURL = manager.enumerator(at: url,                                          includingPropertiesForKeys: nil,                                          options: .skipsHiddenFiles,                                          errorHandler: nil)print("2.2 深度遍历：\(enumberatorAtURL?.allObjects)")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件写入数据"><a href="#文件写入数据" class="headerlink" title="文件写入数据"></a>文件写入数据</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan/test1.txt", isDirectory: true)guard let data = string.data(using: .utf8, allowLossyConversion: true) else {  return}// 1.写在结尾do {  let writeHandler = try FileHandle(forWritingTo: url)  writeHandler.seekToEndOfFile()  writeHandler.write(data)} catch {  print("writeHandler error:\(error)")}// 2.从第n个字符开始覆盖do {  let writeHandler = try FileHandle(forWritingTo: url)  do {    try writeHandler.seek(toOffset: 1)  } catch {    print("writeHandler.seek error:\(error)")  }  writeHandler.write(data)} catch {  print("writeHandler error:\(error)")}// 3.只保留前n个字符do {  let writeHandler = try FileHandle(forWritingTo: url)  do {    try writeHandler.truncate(atOffset: 1)  } catch {    print("writeHandler.truncate error:\(error)")  }  writeHandler.write(data)} catch {  print("writeHandler error:\(error)")}// 4.只保留前n个字符:(n超过原字符长度，则并接在结尾)do {  let writeHandler = try FileHandle(forWritingTo: url)  writeHandler.truncateFile(atOffset: 12)  writeHandler.write(data)} catch {  print("writeHandler error:\(error)")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent("moxiaoyan/test1.txt", isDirectory: true)// 方法1:guard let data = manager.contents(atPath: url.path) else {  return}let readString = String(data: data, encoding: .utf8)print("方法1：\(readString ?? "")")// 方法2:guard let readHandler = FileHandle(forReadingAtPath: url.path) else {  return}guard let data2: Data = readHandler.readDataToEndOfFile() else {  return}let readString2 = String(data: data2, encoding: .utf8)print("方法2：\(readString2 ?? "")")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><pre class="line-numbers language-none"><code class="language-none">let file1 = self.documentURL.appendingPathComponent("moxiaoyan/test1.txt")let file2 = self.documentURL.appendingPathComponent("moxiaoyan/test2.txt")do {  // try manager.copyItem(at: file1, to: file2) // 直接复制文件  try manager.copyItem(atPath: file1.path, toPath: file2.path) // 复制文件内容} catch {  print("copyItem error:\(error)")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><pre class="line-numbers language-none"><code class="language-none">let url = self.documentURL.appendingPathComponent(name, isDirectory: true)let file1 = url.appendingPathComponent(name)print("文件1:\(file1)")let file2 = url.appendingPathComponent(to + "/test1.txt")print("文件2:\(file2)")do {  // try manager.moveItem(atPath: file1.path, toPath: file2.path) // 直接拷贝文件  try manager.moveItem(at: file1, to: file2) // 拷贝文件内容} catch {  print("moveItem error:\(error)")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="比较文件"><a href="#比较文件" class="headerlink" title="比较文件"></a>比较文件</h2><pre class="line-numbers language-none"><code class="language-none">let file1 = self.documentURL.appendingPathComponent(name1)let file2 = self.documentURL.appendingPathComponent(name2)// 参数必须的是路径（相同字符串false）let equal = manager.contentsEqual(atPath: file1.path, andPath: file2.path) print("file1:\(file1)")print("file2:\(file2)")print("equal:\(equal)")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> file </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift字符串截取摘录</title>
      <link href="/posts/16775.html"/>
      <url>/posts/16775.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift字符串截取摘录"><a href="#Swift字符串截取摘录" class="headerlink" title="Swift字符串截取摘录"></a>Swift字符串截取摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 解决URL或参数中含有中文（Swift URL编码）</title>
      <link href="/posts/63894.html"/>
      <url>/posts/63894.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-解决URL或参数中含有中文（Swift-URL编码）"><a href="#Swift-解决URL或参数中含有中文（Swift-URL编码）" class="headerlink" title="Swift 解决URL或参数中含有中文（Swift URL编码）"></a>Swift 解决URL或参数中含有中文（Swift URL编码）</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">let encodeURLStr = urlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)let url =  URL.init(string: encodeURLStr)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">static func get( _ url: String, parameters: [String: Any] , completionHandler: @escaping (NSError?, JSON) -&gt; Void)  {      var urlStr = url      var flag = true      let generalDelimitersToEncode = ":#[]@" // does not include "?" or "/" due to RFC 3986 - Section 3.4      let subDelimitersToEncode = "!$&amp;'()*+,;="      var allowedCharacterSet = CharacterSet.urlQueryAllowed      allowedCharacterSet.remove(charactersIn: "\(generalDelimitersToEncode)\(subDelimitersToEncode)")      for ( key , value) in parameters {         var anyValue: Any = value         if let value = value as? String{            anyValue = value.addingPercentEncoding(withAllowedCharacters: allowedCharacterSet) ?? ""         }         if flag{            flag = false            urlStr += "?" + key + "=\(anyValue)"         }else{            urlStr += "&amp;" + key + "=\(anyValue)"         }      }      if let url = URL.init(string: urlStr){         var request = URLRequest(url: url)         request.cachePolicy = .reloadIgnoringLocalCacheData         URLSession.shared.dataTask(with: request, completionHandler: { (data, response, err) in            if let err = err{               completionHandler(err as NSError, JSON.null )            }else{//               if let json = try? JSONSerialization.jsonObject(with: data!, options: [.allowFragments, .mutableContainers , .mutableLeaves]) as? [String: Any]  {               if let data = data {                  let json = JSON.init(data: data)                  guard let code = json["code"].int,                     let msg = json["msg"].string else{                        completionHandler(NSError(domain: "", code: 1, userInfo: nil), JSON.null)                        return                  }                  if code  != 10000 {                     completionHandler(NSError(domain: msg, code: code, userInfo: nil), JSON.null )                  }else{                     completionHandler(nil, json["data"])                  }               }            }         })            .resume()      }   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从网络下载文件到App</title>
      <link href="/posts/10334.html"/>
      <url>/posts/10334.html</url>
      
        <content type="html"><![CDATA[<h1 id="从网络下载文件到App"><a href="#从网络下载文件到App" class="headerlink" title="从网络下载文件到App"></a>从网络下载文件到App</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">func downloadModels(_ path: [String], modelUrl: String) {    DispatchQueue.global().async {        for str in path {            let urlString = modelUrl + str            let encodeURLStr = urlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)            log(encodeURLStr)            let url =  URL.init(string: encodeURLStr)            log(url)            let request = URLRequest(url: url!)            let downloadTask = URLSession.shared.downloadTask(with: request,                    completionHandler: { (location: URL?, _: URLResponse?, _: Error?)                    -&gt; Void in//                    let theUrl = NSHomeDirectory() + "/Documents/ThreeDModels" + str//                    let endRang = theUrl.range(of: "/" + theUrl.lastPathComponent)//                    let thePath = String(theUrl[..&lt;endRang!.lowerBound])                    let name = str.lastPathComponent.replacingOccurrences(of: ("." + str.pathExtension), with: "")                    let fileManager = FileManager.default                        let urls: [URL] = fileManager.urls(for: .documentDirectory, in: .userDomainMask)                        let documentURL = urls.first!                        let endRang = str.range(of: "/" + str.lastPathComponent)                        let documentName = String(str[..&lt;endRang!.lowerBound])                        let url = documentURL.appendingPathComponent("threeDModels" + documentName, isDirectory: true)                        var isDirectory: ObjCBool = ObjCBool(false)                        let isExist = fileManager.fileExists(atPath: url.path, isDirectory: &amp;isDirectory)                        if !isExist {                          do {                            try fileManager.createDirectory(at: url, withIntermediateDirectories: true, attributes: nil)                          } catch {                            log(error)                          }                        }                        let filePath = url.path + "/" + name + "." + str.pathExtension                        do {                            if fileManager.fileExists(atPath: filePath ) {                                try fileManager.removeItem(atPath: filePath)                            }                            try fileManager.moveItem(atPath: location!.path, toPath: filePath)                        } catch {                            log(error)                        }                    })            downloadTask.resume()        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> network </tag>
            
            <tag> 三维模型 </tag>
            
            <tag> file </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON解析摘录</title>
      <link href="/posts/36625.html"/>
      <url>/posts/36625.html</url>
      
        <content type="html"><![CDATA[<h1 id="JSON解析摘录"><a href="#JSON解析摘录" class="headerlink" title="JSON解析摘录"></a>JSON解析摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210403JSON%E8%A7%A3%E6%9E%90%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kingfisher简单使用</title>
      <link href="/posts/34152.html"/>
      <url>/posts/34152.html</url>
      
        <content type="html"><![CDATA[<h1 id="Kingfisher简单使用"><a href="#Kingfisher简单使用" class="headerlink" title="Kingfisher简单使用"></a>Kingfisher简单使用</h1><p>========================</p><h2 id="UIKit"><a href="#UIKit" class="headerlink" title="UIKit"></a>UIKit</h2><pre class="line-numbers language-none"><code class="language-none">let url = dataShare.queryFromManyTable(with: modelName, from: [dataShare.cuturalRelicsIntroduction,                                                                          dataShare.models3DIntroduction,                                                                          dataShare.paintingModelsIntroduction])?.image           objectImageView.kf.indicatorType = .activity           objectImageView.kf.setImage(with: URL(string: url))           // 设置超时时间           let downloader = KingfisherManager.shared.downloader           // 超时时间（秒）           downloader.downloadTimeout = 50                      // 获取缓存代销           let cache = KingfisherManager.shared.cache           // 设置最大缓存为多少 100M  默认是无上限           cache.memoryStorage.config.totalCostLimit = 100 * 1024 * 1024           // 设置保存时间 1天 默认5分钟           cache.memoryStorage.config.expiration = StorageExpiration.seconds(300)           cache.diskStorage.config.sizeLimit = 100 * 1024 * 1024           cache.diskStorage.config.expiration = StorageExpiration.days(7)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftUI"><a href="#SwiftUI" class="headerlink" title="SwiftUI"></a>SwiftUI</h2><pre class="line-numbers language-none"><code class="language-none">KFImage(URL(string: Images.help.url))    .diskCacheExpiration(.days(365))    .resizable()    .aspectRatio(contentMode: .fit)    .foregroundColor(.white)    .frame(width: 20.fitCGWidth, height: 20.fitCGWidth, alignment: .center)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift高阶函数</title>
      <link href="/posts/22942.html"/>
      <url>/posts/22942.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift高阶函数"><a href="#Swift高阶函数" class="headerlink" title="Swift高阶函数"></a>Swift高阶函数</h1><p>========================</p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><h4 id="map-1"><a href="#map-1" class="headerlink" title="map"></a>map</h4><p><code>map</code>对于原始集合里的每一个元素, 以一个变换后的元素替换之形成一个新的集合</p><pre class="line-numbers language-none"><code class="language-none">let results = [1, 2, 3, 4, 5, 6, 7, 8, 9]let allResults = results.map{ $0.map{ $0 * 10 } }print(allResults)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[10, 20, 30, 40, 50, 60, 70, 80, 90]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h4><p><code>flatMap</code>对于元素是集合的集合, 可以得到单级的集合</p><pre class="line-numbers language-none"><code class="language-none">let results = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]let allResults = results.flatMap{ $0.map{ $0 * 10 } }let passMarks = results.flatMap{ $0.filter{ $0 &gt; 5 } }print(allResults)print(passMarks)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[10, 20, 30, 40, 50, 60, 70, 80, 90][6, 7, 8, 9] <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="compactMap"><a href="#compactMap" class="headerlink" title="compactMap"></a>compactMap</h4><p><code>compactMap</code>过滤空值</p><pre class="line-numbers language-none"><code class="language-none">let keys: [String?] = ["Zhangsan", nil, "Lisi", nil, "Wawngwu"]let validNames = keys.compactMap{ $0 }print(validNames)let counts = keys.compactMap { $0?.count }print(counts)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果：</p><pre class="line-numbers language-none"><code class="language-none">["Zhangsan", "Lisi", "Wawngwu"][8, 4, 7]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><code>filter</code>对于原始集合里的每一个元素, 通过判定来将其丢弃或者放进新集合</p><pre class="line-numbers language-none"><code class="language-none">let numbers: [Int] = [10, 20, 30, 40, 50, 60, 70, 80, 90]print(numbers.filter{ $0 &gt; 50})<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[60, 70, 80, 90]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p><code>reduce</code>对于原始集合里的每一个元素, 作用与当前累积的结果上</p><pre class="line-numbers language-none"><code class="language-none">let numbers: [Int] = [1, 2, 3, 4, 5, 10]print(numbers.reduce(0) { $0 + $1 })<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">25<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Self摘录</title>
      <link href="/posts/32945.html"/>
      <url>/posts/32945.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-Self摘录"><a href="#Swift-Self摘录" class="headerlink" title="Swift Self摘录"></a>Swift Self摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftSelf%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Package摘录</title>
      <link href="/posts/50099.html"/>
      <url>/posts/50099.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-Package摘录"><a href="#Swift-Package摘录" class="headerlink" title="Swift Package摘录"></a>Swift Package摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftPackage%E6%91%98%E5%BD%95/SwiftPackage%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift函数举例</title>
      <link href="/posts/47366.html"/>
      <url>/posts/47366.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift函数举例"><a href="#Swift函数举例" class="headerlink" title="Swift函数举例"></a>Swift函数举例</h1><p>========================<br>这里<code>tate, Request, RequestID, Event</code>都是泛型，函数的返回值为闭包<code>(ObservableSchedulerContext&lt;State&gt;) -&gt; Observable&lt;Event&gt; </code>，闭包<code>(State) -&gt; [RequestID: Request]</code>的返回值是一个字典</p><pre class="line-numbers language-none"><code class="language-none">/** State: State type of the system. Request: Subset of state used to control the feedback loop. For every uniquely identifiable request `effects` closure is invoked with the initial value of the request and future requests corresponding to the same identifier. Subsequent equal values of request are not emitted from the effects state parameter. - parameter requests: Requests to perform some effects. - parameter effects: The request effects. - parameter initial: Initial request. - parameter state: Latest request state. - returns: The feedback loop performing the effects. */public func react&lt;State, Request: Equatable, RequestID, Event&gt;(    requests: @escaping (State) -&gt; [RequestID: Request],    effects: @escaping (_ initial: Request, _ state: Observable&lt;Request&gt;) -&gt; Observable&lt;Event&gt;) -&gt; (ObservableSchedulerContext&lt;State&gt;) -&gt; Observable&lt;Event&gt; {    return { stateContext in        Observable.create { observer in            let state = RequestLifetimeTracking&lt;Request, RequestID, Event&gt;(                effects: effects,                scheduler: stateContext.scheduler,                observer: observer            )            let subscription = stateContext.source                .map(requests)                .subscribe { event in                    switch event {                    case .next(let requests):                        state.forwardRequests(requests)                    case .error(let error):                        observer.on(.error(error))                    case .completed:                        observer.on(.completed)                    }                }            return Disposables.create {                state.dispose()                subscription.dispose()            }        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>泛型WeakOwner继承AnyObject，这里where的条件限定函数的参数，与返回的闭包无关</p><pre class="line-numbers language-none"><code class="language-none">/** Bi-directional binding of a system State to external state machine and events from it. Strongify owner. */public func bind&lt;State, Event, WeakOwner&gt;(_ owner: WeakOwner, _ bindings: @escaping (WeakOwner, ObservableSchedulerContext&lt;State&gt;) -&gt; (Bindings&lt;Event&gt;))    -&gt; (ObservableSchedulerContext&lt;State&gt;) -&gt; Observable&lt;Event&gt; where WeakOwner: AnyObject {    return bind(bindingsStrongify(owner, bindings))}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Codable实现JSON转对象、对象转JSON</title>
      <link href="/posts/17329.html"/>
      <url>/posts/17329.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用Codable实现JSON转对象、对象转JSON"><a href="#使用Codable实现JSON转对象、对象转JSON" class="headerlink" title="使用Codable实现JSON转对象、对象转JSON"></a>使用Codable实现JSON转对象、对象转JSON</h1><p>========================</p><p>先上代码，这里我是在Swift playground中运行，方便演示</p><pre class="line-numbers language-none"><code class="language-none">import UIKitimport Foundation// MARK: - Decodestruct User: Codable { // 基本类型组合默认遵守Codable协议    var name: String    var age: Int}let jsonStr = """{    "name": "Ryan",    "age": 18}"""let jsonData = jsonStr.data(using: .utf8)!let decoder = JSONDecoder()do {    let userObj = try decoder.decode(User.self, from: jsonData)    print("userObj = \(userObj)")} catch {    print("decode error")}// MARK: - Encodelet user = User(name: "Lux", age: 20)let encoder = JSONEncoder()do {    let data = try encoder.encode(user)    let jsonStr = String(data: data, encoding: .utf8)!    print("jsonStr = \(jsonStr)")} catch {    print("encode error")}struct Introduction: Identifiable, Codable {   var id = UUID()   var idForDataBase: Int64   var image: String   var title: String   var text: String   //这里的date原是想要展示日期，现在就用于当备注   var date: String}class I18n {    class func localizedString(_ key: String?) -&gt; String {        guard let key = key else { return "" }        return NSLocalizedString(key, tableName: nil, bundle: Bundle(for: I18n.self), value: "", comment: "")    }}let culturalRelicsData = [    Introduction(idForDataBase: Int64.init(20210303063005), image: "郎窑红釉穿带直口瓶", title: I18n.localizedString("bottle"), text: I18n.localizedString("郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。"), date: I18n.localizedString("故宫镇馆之宝")),     Introduction(idForDataBase: Int64.init(20210303063006), image: "张成造款雕漆云纹盒", title: I18n.localizedString("box"), text: I18n.localizedString("张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"), date: I18n.localizedString("故宫镇馆之宝")),     Introduction(idForDataBase: Int64.init(20210303063007), image: "彩漆描金楼阁式自开门群仙祝寿御制钟", title: I18n.localizedString("clock"), text: I18n.localizedString("黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。"), date: I18n.localizedString("故宫镇馆之宝")),     Introduction(idForDataBase: Int64.init(20210303063008), image: "乾隆款金瓯永固杯", title: I18n.localizedString("cup"), text: I18n.localizedString("宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。"), date: I18n.localizedString("故宫镇馆之宝")),     Introduction(idForDataBase: Int64.init(20210303063009), image: "掐丝珐琅缠枝莲纹象耳炉", title: I18n.localizedString("ear_furnace"), text: I18n.localizedString("掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。"), date: I18n.localizedString("故宫镇馆之宝")),    Introduction(idForDataBase: Int64.init(20210303063010), image: "青玉云龙纹炉", title: I18n.localizedString("grain_furnace"), text: I18n.localizedString("青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”"), date: I18n.localizedString("故宫镇馆之宝")),    Introduction(idForDataBase: Int64.init(20210303063011), image: "清明上河图", title: I18n.localizedString("painting"), text: I18n.localizedString("《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。"), date: I18n.localizedString("故宫镇馆之宝")),    Introduction(idForDataBase: Int64.init(20210303063012), image: "平复帖", title: I18n.localizedString("placard"), text: I18n.localizedString("西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。"), date: I18n.localizedString("故宫镇馆之宝")),    Introduction(idForDataBase: Int64.init(20210303063013), image: "酗亚方尊", title: I18n.localizedString("zun"), text: I18n.localizedString("青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。"), date: I18n.localizedString("故宫镇馆之宝")),    Introduction(idForDataBase: Int64.init(20210303063014), image: "沈子蕃缂丝《梅鹊图》轴", title: I18n.localizedString("magpie"), text: I18n.localizedString("沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。"), date: I18n.localizedString("故宫镇馆之宝"))]let encoder2 = JSONEncoder()do {    let data = try encoder2.encode(culturalRelicsData)    let jsonStr = String(data: data, encoding: .utf8)!    print("jsonStr = \(jsonStr)")} catch {    print("encode error")}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JSON转对象"><a href="#JSON转对象" class="headerlink" title="JSON转对象"></a>JSON转对象</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/1.png"></p><h2 id="对象转JSON"><a href="#对象转JSON" class="headerlink" title="对象转JSON"></a>对象转JSON</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
            <tag> JSON </tag>
            
            <tag> simulation </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>借助github或其他网站的服务器模拟数据</title>
      <link href="/posts/16277.html"/>
      <url>/posts/16277.html</url>
      
        <content type="html"><![CDATA[<h1 id="借助github或其他网站的服务器模拟数据"><a href="#借助github或其他网站的服务器模拟数据" class="headerlink" title="借助github或其他网站的服务器模拟数据"></a>借助github或其他网站的服务器模拟数据</h1><p>========================</p><p>其实非常简单，假设要模拟JSON数据只要把json文件传到网站的服务器</p><h2 id="github举例"><a href="#github举例" class="headerlink" title="github举例"></a>github举例</h2><p>只需新建仓库或使用已有仓库或使用博客仓库等，把相应的json文件推送到远程仓库。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/1.png"><br>而后就可以直接对着该json进行网络请求<a href="https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json">https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/2.png"></p><h2 id="博客举例"><a href="#博客举例" class="headerlink" title="博客举例"></a>博客举例</h2><p>把json文件放到博客源文件的目录或子目录下，这里我放在子目录runinto下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/3.png"><br>图片或其他资源也都放在博客源文件的目录或子目录下，这里我放在子目录image下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/4.png"><br>部署博客</p><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro blog % hexo g &amp;&amp; hexo dINFO  Validating configWARN  Deprecated config detected: "external_link" with a Boolean value is deprecated. See https://hexo.io/docs/configuration for more details.INFO  Start processingINFO  Files loaded in 594 msINFO  Deleted: json/CulturalRelicsIntroduction.jsonINFO  Generated: runinto/Models3DData.jsonINFO  Generated: runinto/CulturalRelicsData.jsonINFO  Generated: runinto/PaintingRomanceData.jsonINFO  Generated: runinto/StylePredictData.jsonINFO  Generated: runinto/IntroductionData.jsonINFO  Generated: runinto/PaintingModelsData.jsonINFO  Generated: books/index.htmlINFO  Generated: works/index.htmlINFO  Generated: 2021/03/31/20210331Moya使用/index.htmlINFO  Generated: 2021/03/31/20210331HandyJSON使用/index.htmlINFO  Generated: 2021/03/31/20210331iOS开发之真机调试下查看本地沙盒数据摘录/index.htmlINFO  Generated: 2021/03/20/20210320git发布tag/index.htmlINFO  Generated: 2021/03/21/20210320Perfect部署到云服务器摘录/index.htmlINFO  Generated: 2021/03/18/Mac命令行关闭端口/index.htmlINFO  Generated: 2021/03/16/20210316Swift多线程/index.htmlINFO  Generated: 2019/08/03/iOS-Localizable-strings/index.htmlINFO  Generated: about/index/resume.htmlINFO  Generated: archive/index.htmlINFO  Generated: archives/2019/index.htmlINFO  Generated: 2020/09/30/学术论文——基于ARKit技术的文物交互式相机App的设计与实现/index.htmlINFO  Generated: 2019/07/06/hello-world/index.htmlINFO  Generated: archives/2019/07/index.htmlINFO  Generated: archives/page/2/index.htmlINFO  Generated: archives/2020/index.htmlINFO  Generated: archives/2019/08/index.htmlINFO  Generated: archives/2021/03/index.htmlINFO  Generated: archives/2020/09/index.htmlINFO  Generated: archives/2021/index.htmlINFO  Generated: archives/2021/page/2/index.htmlINFO  Generated: archives/2021/03/page/2/index.htmlINFO  Generated: tags/iOS/index.htmlINFO  Generated: tags/多线程/index.htmlINFO  Generated: tags/Swift/index.htmlINFO  Generated: tags/博文/index.htmlINFO  Generated: tags/framework/index.htmlINFO  Generated: tags/server/index.htmlINFO  Generated: index.htmlINFO  Generated: tags/network/index.htmlINFO  Generated: page/2/index.htmlINFO  Generated: tags/软件测试/index.htmlINFO  Generated: tags/论文/index.htmlINFO  Generated: tags/git/index.htmlINFO  Generated: tags/DataBase/index.htmlINFO  Generated: about/index.htmlINFO  Generated: 2021/03/22/20210322iOS之制作xcframework摘录/index.htmlINFO  Generated: archives/index.htmlINFO  Generated: tags/index.htmlINFO  Generated: 2021/03/01/README/index.htmlINFO  Generated: 2021/03/01/README.en/index.htmlINFO  Generated: 2021/03/03/20210331SQLite.swift使用/index.htmlINFO  Generated: 2021/03/27/20210327gitbook配置/index.htmlINFO  Generated: 2021/03/20/Perfect部署到服务器工作记录/index.htmlINFO  52 files generated in 157 msINFO  Validating configWARN  Deprecated config detected: "external_link" with a Boolean value is deprecated. See https://hexo.io/docs/configuration for more details.INFO  Deploying: gitINFO  Clearing .deploy_git folder...INFO  Copying files from public folder...INFO  Copying files from extend dirs...[master c336836] Site updated: 2021-03-31 11:58:37 53 files changed, 466 insertions(+), 1 deletion(-) delete mode 100644 json/CulturalRelicsIntroduction.json create mode 100644 runinto/CulturalRelicsData.json create mode 100644 runinto/IntroductionData.json create mode 100644 runinto/Models3DData.json create mode 100644 runinto/PaintingModelsData.json create mode 100644 runinto/PaintingRomanceData.json create mode 100644 runinto/StylePredictData.jsonEnumerating objects: 228, done.Counting objects: 100% (228/228), done.Delta compression using up to 16 threadsCompressing objects: 100% (84/84), done.Writing objects: 100% (123/123), 28.58 KiB | 2.86 MiB/s, done.Total 123 (delta 55), reused 0 (delta 0)remote: Resolving deltas: 100% (55/55), completed with 38 local objects.To https://github.com/adong666666/adong666666.github.io.git   03af415..c336836  HEAD -&gt; masterBranch 'master' set up to track remote branch 'master' from 'https://github.com/adong666666/adong666666.github.io.git'.INFO  Deploy done: git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将博客部署之后，就可以用对应url进行网络请求，如这里使用的是<a href="https://zsd.name/runinto/IntroductionData.json">https://zsd.name/runinto/IntroductionData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/5.png"><br>图片资源也可以拿到，如<a href="https://zsd.name/images/xinyi.jpg">https://zsd.name/images/xinyi.jpg</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/6.png"><br>这便相当于有个现成的模拟服务器，各种软件开发，这样模拟数据是不是很轻松！</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> server </tag>
            
            <tag> network </tag>
            
            <tag> 软件测试 </tag>
            
            <tag> JSON </tag>
            
            <tag> simulation </tag>
            
            <tag> data </tag>
            
            <tag> github </tag>
            
            <tag> Web </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HandyJSON使用</title>
      <link href="/posts/47851.html"/>
      <url>/posts/47851.html</url>
      
        <content type="html"><![CDATA[<h1 id="HandyJSON使用"><a href="#HandyJSON使用" class="headerlink" title="HandyJSON使用"></a>HandyJSON使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，这个大都配合SwiftyJSON使用。</p><h2 id="模型示例"><a href="#模型示例" class="headerlink" title="模型示例"></a>模型示例</h2><pre class="line-numbers language-none"><code class="language-none">import SwiftUIimport Foundationimport ObjectMapperimport Thenimport RxSwiftimport RxCocoaimport HandyJSONstruct Introduction: Identifiable, Decodable, Mappable, HandyJSON {    init() {    }    init?(map: Map) {    }    var id = UUID()    var idForDataBase: Int64 = Int64()    var image: String = String()    var title: String = String()    var text: String = String()    //这里的date原是想要展示日期，现在就用于当备注    var date: String = String()    init(idForDataBase: Int64, image: String, title: String, text: String, date: String) {        self.idForDataBase = idForDataBase        self.image = image        self.title = title        self.text = text        self.date = date    }    mutating func mapping(map: Map) {        id &lt;- map["id"]        idForDataBase &lt;- map["idForDataBase"]        image &lt;- map["image"]        title &lt;- map["title"]        text &lt;- map["text"]        date &lt;- map["date"]    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>//解析的话，只遵循HandyJSON协议即可，如下，这样就可以使用了：</p><pre class="line-numbers language-none"><code class="language-none">import Foundationimport HandyJSONstruct Introduction: HandyJSON {    var idForDataBase = Int64()    var image: String = String()    var title: String = String()    var text: String = String()    var date: String = String()}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，这里主要是<code>JSONDeserializer&lt;Introduction&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description)</code>使用了HandyJSON，不要太轻松。</p><pre class="line-numbers language-none"><code class="language-none">////  NetworkTool.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/3/30.//  Copyright © 2021 adong666666. All rights reserved.////swiftlint:disable void_returnimport Foundationimport Alamofireimport SwiftyJSONimport HandyJSONprotocol NetworkToolProtocol {    static func loadCulturalRelicsData(input: IntroductionAPI, completionHandler: @escaping ([Introduction?]) -&gt; ())}extension NetworkToolProtocol {    static func loadCulturalRelicsData(input: IntroductionAPI, completionHandler: @escaping ([Introduction?]) -&gt; ()) {        //        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in        //            let value = response.value        //            let json = JSON(value as Any)        //            log(json)        //        })        introductionPovider.request(input) { (result) in            if case let .success(response) = result {                //解析数据                let data = try? response.mapJSON()                let json = JSON(data!)                let culturalRelicsData = json["data"]["culturalRelicsData"]                //log(json)                //log(culturalRelicsData)                if let mappedObject = JSONDeserializer&lt;Introduction&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description) {                    //log(mappedObject)                    //log(mappedObject.count)                    completionHandler(mappedObject)                }            }        }    }}struct NetworkTool: NetworkToolProtocol {}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Moya使用</title>
      <link href="/posts/13900.html"/>
      <url>/posts/13900.html</url>
      
        <content type="html"><![CDATA[<h1 id="Moya使用"><a href="#Moya使用" class="headerlink" title="Moya使用"></a>Moya使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，其实就是一个整理。</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><pre class="line-numbers language-none"><code class="language-none">////  IntroductionAPI.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/3/30.//  Copyright © 2021 adong666666. All rights reserved.//// swiftlint:disable identifier_nameimport Foundationimport Moyaimport HandyJSONlet ip = "http://47.119.162.99"let culturalRelicsDataUrl = ip + "/runinto/culturalRelicsData"let models3DDataUrl = ip +  "/runinto/models3DData"let introductionDataUrl = ip + "/runinto/introductionData"let paintingModeslDataUrl = ip + "/runinto/paintingModelsData"let paintinggRomanceDataUrl = ip + "/runinto/paintingRomanceData"let stylePredictDataUrl = ip + "/runinto/stylePredictData"/// 介绍接口let introductionPovider = MoyaProvider&lt;IntroductionAPI&gt;()enum IntroductionAPI {    case culturalRelicsData    case models3DData    case introductionData    case paintingModeslData    case paintinggRomanceData    case stylePredictData}extension IntroductionAPI: TargetType {    //服务器地址    public var baseURL: URL {        return URL(string: ip)!    }        var path: String {        switch self {        case .culturalRelicsData:            return "/runinto/culturalRelicsData"        case .models3DData:            return "/runinto/models3DData"        case .introductionData:            return "/runinto/introductionData"        case .paintingModeslData:            return "/runinto/paintingModelsData"        case .paintinggRomanceData:            return "/runinto/paintingRomanceData"        case .stylePredictData:            return "/runinto/stylePredictData"        }    }        var method: Moya.Method { return .get }    var task: Task {        let parameters: [String: Any] = [:]        return .requestParameters(parameters: parameters, encoding: URLEncoding.default)    }        var sampleData: Data { return "".data(using: .utf8)!}    var headers: [String: String]? { return nil }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，<code>mapJSON()</code>也是Moya里的函数。<code>JSON()</code>则是SwiftyJSON里的常用函数</p><pre class="line-numbers language-none"><code class="language-none">////  NetworkTool.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/3/30.//  Copyright © 2021 adong666666. All rights reserved.////swiftlint:disable void_returnimport Foundationimport Alamofireimport SwiftyJSONimport HandyJSONprotocol NetworkToolProtocol {    static func loadCulturalRelicsData(input: IntroductionAPI, completionHandler: @escaping ([Introduction?]) -&gt; ())}extension NetworkToolProtocol {    static func loadCulturalRelicsData(input: IntroductionAPI, completionHandler: @escaping ([Introduction?]) -&gt; ()) {        //        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in        //            let value = response.value        //            let json = JSON(value as Any)        //            log(json)        //        })        introductionPovider.request(input) { (result) in            if case let .success(response) = result {                //解析数据                let data = try? response.mapJSON()                let json = JSON(data!)                let culturalRelicsData = json["data"]["culturalRelicsData"]                //log(json)                //log(culturalRelicsData)                if let mappedObject = JSONDeserializer&lt;Introduction&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description) {                    //log(mappedObject)                    //log(mappedObject.count)                    completionHandler(mappedObject)                }            }        }    }}struct NetworkTool: NetworkToolProtocol {}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS开发之真机和模拟器查看本地沙盒数据摘录</title>
      <link href="/posts/1671.html"/>
      <url>/posts/1671.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS开发之真机和模拟器查看本地沙盒数据摘录"><a href="#iOS开发之真机和模拟器查看本地沙盒数据摘录" class="headerlink" title="iOS开发之真机和模拟器查看本地沙盒数据摘录"></a>iOS开发之真机和模拟器查看本地沙盒数据摘录</h1><p>========================</p><p>我主要是想看看真机下的数据库文件。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitbook配置</title>
      <link href="/posts/13006.html"/>
      <url>/posts/13006.html</url>
      
        <content type="html"><![CDATA[<h1 id="gitbook配置"><a href="#gitbook配置" class="headerlink" title="gitbook配置"></a>gitbook配置</h1><p>========================</p><p>首先请看我配置的gitbook，这里是搬了一个RxSwift的中文教程过来。</p><h2 id="gitbook网址：https-3440217568-gitbook-io-rxswift"><a href="#gitbook网址：https-3440217568-gitbook-io-rxswift" class="headerlink" title="gitbook网址：https://3440217568.gitbook.io/rxswift/"></a>gitbook网址：<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a></h2><h2 id="使用的教程"><a href="#使用的教程" class="headerlink" title="使用的教程"></a>使用的教程</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/1.png"></p><h2 id="解决“-cb-apply不是函数”错误"><a href="#解决“-cb-apply不是函数”错误" class="headerlink" title="解决“ cb.apply不是函数”错误"></a>解决“ cb.apply不是函数”错误</h2><p>在安装gitbook时，由于mac上的node版本较新，出现了bug，根据下面的文章，我注释了三行代码，解决了这个问题。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/2.png"></p><h2 id="为gitbook配置github仓库"><a href="#为gitbook配置github仓库" class="headerlink" title="为gitbook配置github仓库"></a>为gitbook配置github仓库</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/4.png"></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>我的域名之前绑定了博客，再绑定这个gitbook估计又得折腾一阵了，所以我暂时先用这个网址<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a>，其实我觉得不一定非得自定义域名。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/5.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/6.png"></p><h2 id="成果图"><a href="#成果图" class="headerlink" title="成果图"></a>成果图</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/7.png"></p><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><pre class="line-numbers language-none"><code class="language-none">Last login: Fri Mar 26 11:38:08 on ttys002zhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -VCLI version: 2.3.2Installing GitBook 3.2.3  SOLINK_MODULE(target) Release/.node  CXX(target) Release/obj.target/fse/fsevents.o  SOLINK_MODULE(target) Release/fse.node  SOLINK_MODULE(target) Release/.node  CXX(target) Release/obj.target/fse/fsevents.o  SOLINK_MODULE(target) Release/fse.node/usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287      if (cb) cb.apply(this, arguments)                 ^TypeError: cb.apply is not a function    at /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287:18    at FSReqCallback.oncomplete (fs.js:184:5)zhangsaidong@zhangsaidongs-MacBook-Pro ~ % open /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.jszhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -VCLI version: 2.3.2Installing GitBook 3.2.3  SOLINK_MODULE(target) Release/.node  CXX(target) Release/obj.target/fse/fsevents.o  SOLINK_MODULE(target) Release/fse.node  SOLINK_MODULE(target) Release/.node  CXX(target) Release/obj.target/fse/fsevents.o  SOLINK_MODULE(target) Release/fse.nodegitbook@3.2.3 ../../var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/tmp-84437JZNGqeaPKI2p/node_modules/gitbook├── escape-html@1.0.3├── escape-string-regexp@1.0.5├── destroy@1.0.4├── ignore@3.1.2├── bash-color@0.0.4├── gitbook-plugin-livereload@0.0.1├── graceful-fs@4.1.4├── nunjucks-do@1.0.0├── cp@0.2.0├── github-slugid@1.0.1├── direction@0.1.5├── q@1.4.1├── spawn-cmd@0.0.2├── gitbook-plugin-fontsettings@2.0.0├── open@0.0.5├── is@3.3.0├── object-path@0.9.2├── extend@3.0.2├── json-schema-defaults@0.1.1├── gitbook-plugin-search@2.2.1├── jsonschema@1.1.0├── crc@3.4.0├── semver@5.1.0├── urijs@1.18.0├── immutable@3.8.2├── front-matter@2.3.0├── omit-keys@0.1.0 (isobject@0.2.0, array-difference@0.0.1)├── error@7.0.2 (xtend@4.0.2, string-template@0.2.1)├── npmi@2.0.1 (semver@4.3.6)├── tmp@0.0.28 (os-tmpdir@1.0.2)├── send@0.13.2 (fresh@0.3.0, etag@1.7.0, range-parser@1.0.3, statuses@1.2.1, ms@0.7.1, depd@1.1.2, mime@1.3.4, debug@2.2.0, http-errors@1.3.1, on-finished@2.3.0)├── mkdirp@0.5.1 (minimist@0.0.8)├── dom-serializer@0.1.0 (domelementtype@1.1.3, entities@1.1.2)├── resolve@1.1.7├── rmdir@1.2.0 (node.flow@1.2.3)├── fresh-require@1.0.3 (is-require@0.0.1, shallow-copy@0.0.1, sleuth@0.1.1, astw@1.3.0, through2@0.6.5, escodegen@1.14.3, acorn@0.9.0)├── cpr@1.1.1 (rimraf@2.4.5)├── js-yaml@3.14.1 (esprima@4.0.1, argparse@1.0.10)├── gitbook-plugin-theme-default@1.0.7├── tiny-lr@0.2.1 (parseurl@1.3.3, livereload-js@2.4.0, qs@5.1.0, debug@2.2.0, body-parser@1.14.2, faye-websocket@0.10.0)├── gitbook-plugin-lunr@1.2.0 (html-entities@1.2.0, lunr@0.5.12)├── chokidar@1.5.0 (async-each@1.0.3, path-is-absolute@1.0.1, inherits@2.0.4, glob-parent@2.0.0, is-glob@2.0.1, is-binary-path@1.0.1, anymatch@1.3.2, fsevents@1.2.13, readdirp@2.2.1)├── gitbook-plugin-highlight@2.0.2 (highlight.js@9.2.0)├── moment@2.13.0├── read-installed@4.0.3 (debuglog@1.0.1, util-extend@1.0.3, slide@1.1.6, readdir-scoped-modules@1.1.0, read-package-json@2.1.2)├── gitbook-plugin-sharing@1.0.2 (lodash@3.10.1)├── nunjucks@2.5.2 (asap@2.0.6, yargs@3.32.0, chokidar@1.7.0)├── i18n-t@1.0.1 (lodash@4.17.21)├── cheerio@0.20.0 (entities@1.1.2, css-select@1.2.0, htmlparser2@3.8.3, jsdom@7.2.2, lodash@4.17.21)├── gitbook-asciidoc@1.2.2 (gitbook-html@1.3.3, asciidoctor.js@1.5.5-1, lodash@4.17.21)├── gitbook-markdown@1.3.2 (kramed-text-renderer@0.2.1, gitbook-html@1.3.3, kramed@0.5.6, lodash@4.17.21)├── request@2.72.0 (tunnel-agent@0.4.3, aws-sign2@0.6.0, forever-agent@0.6.1, oauth-sign@0.8.2, caseless@0.11.0, is-typedarray@1.0.0, stringstream@0.0.6, aws4@1.11.0, isstream@0.1.2, json-stringify-safe@5.0.1, tough-cookie@2.2.2, node-uuid@1.4.8, qs@6.1.2, combined-stream@1.0.8, mime-types@2.1.29, bl@1.1.2, hawk@3.1.3, har-validator@2.0.6, http-signature@1.1.1, form-data@1.0.1)├── juice@2.0.0 (deep-extend@0.4.2, slick@1.12.2, batch@0.5.3, cssom@0.3.1, commander@2.9.0, cross-spawn-async@2.2.5, web-resource-inliner@2.0.0)└── npm@3.9.2GitBook version: 3.2.3zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbookzhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook initwarn: no summary file in this book info: create README.md info: create SUMMARY.md TypeError [ERR_INVALID_ARG_TYPE]: The "data" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received an instance of Promisezhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: 35729Press CTRL+C to quit ...info: 7 plugins are installed info: loading plugin "livereload"... OK info: loading plugin "highlight"... OK info: loading plugin "search"... OK info: loading plugin "lunr"... OK info: loading plugin "sharing"... OK info: loading plugin "fontsettings"... OK info: loading plugin "theme-default"... OK info: found 1 pages info: found 0 asset files info: &gt;&gt; generation finished with success in 0.3s ! Starting server ...Serving book on http://localhost:4000Restart after change in file book.jsonStopping serverinfo: 7 plugins are installed info: 21 explicitly listed Error: Couldn't locate plugins "jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic", Run 'gitbook install' to install plugins from registry.zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: 35729Press CTRL+C to quit ...info: 7 plugins are installed info: 21 explicitly listed Error: Couldn't locate plugins "jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic", Run 'gitbook install' to install plugins from registry.zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook install ./info: installing 14 plugins using npm@3.9.2 info:  info: installing plugin "jsbin" info: install plugin "jsbin" (*) from NPM with version 0.0.12 /Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook└── gitbook-plugin-jsbin@0.0.12 info: &gt;&gt; plugin "jsbin" installed with success info:  info: installing plugin "anchors" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├─┬ gitbook-plugin-anchors@0.7.1 │ ├─┬ cheerio@0.22.0 │ │ ├─┬ css-select@1.2.0 │ │ │ ├── boolbase@1.0.0 │ │ │ ├── css-what@2.1.3 │ │ │ ├── domutils@1.5.1 │ │ │ └── nth-check@1.0.2 │ │ ├─┬ dom-serializer@0.1.1 │ │ │ └── domelementtype@1.3.1 │ │ ├── entities@1.1.2 │ │ ├─┬ htmlparser2@3.10.1 │ │ │ ├── domhandler@2.4.2 │ │ │ ├── inherits@2.0.4 │ │ │ └─┬ readable-stream@3.6.0 │ │ │   ├─┬ string_decoder@1.3.0 │ │ │   │ └── safe-buffer@5.2.1 │ │ │   └── util-deprecate@1.0.2 │ │ ├── lodash.assignin@4.2.0 │ │ ├── lodash.bind@4.2.1 │ │ ├── lodash.defaults@4.2.0 │ │ ├── lodash.filter@4.6.0 │ │ ├── lodash.flatten@4.4.0 │ │ ├── lodash.foreach@4.5.0 │ │ ├── lodash.map@4.6.0 │ │ ├── lodash.merge@4.6.2 │ │ ├── lodash.pick@4.4.0 │ │ ├── lodash.reduce@4.6.0 │ │ ├── lodash.reject@4.6.0 │ │ └── lodash.some@4.6.0 │ └── github-slugid@1.0.1 └── gitbook-plugin-jsbin@0.0.12 info: &gt;&gt; plugin "anchors" installed with success info:  info: installing plugin "video" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-jsbin@0.0.12 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "video" installed with success info:  info: installing plugin "ga" runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "ga" installed with success info:  info: installing plugin "toggle-chapters" runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "toggle-chapters" installed with success info:  info: installing plugin "editlink" runTopLevelLifecycles → 2 ▐ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "editlink" installed with success info:  info: installing plugin "include-codeblock" runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├─┬ gitbook-plugin-include-codeblock@3.2.2 │ ├─┬ handlebars@4.7.7 │ │ ├── minimist@1.2.5 │ │ ├── neo-async@2.6.2 │ │ ├── source-map@0.6.1 │ │ ├── uglify-js@3.13.2 │ │ └── wordwrap@1.0.0 │ ├── language-map@1.4.0 │ ├─┬ meow@4.0.1 │ │ ├─┬ camelcase-keys@4.2.0 │ │ │ ├── camelcase@4.1.0 │ │ │ ├── map-obj@2.0.0 │ │ │ └── quick-lru@1.1.0 │ │ ├─┬ decamelize-keys@1.1.0 │ │ │ ├── decamelize@1.2.0 │ │ │ └── map-obj@1.0.1 │ │ ├─┬ loud-rejection@1.6.0 │ │ │ ├─┬ currently-unhandled@0.4.1 │ │ │ │ └── array-find-index@1.0.2 │ │ │ └── signal-exit@3.0.3 │ │ ├─┬ minimist-options@3.0.2 │ │ │ ├── arrify@1.0.1 │ │ │ └── is-plain-obj@1.1.0 │ │ ├─┬ normalize-package-data@2.5.0 │ │ │ ├── hosted-git-info@2.8.8 │ │ │ ├─┬ resolve@1.20.0 │ │ │ │ ├─┬ is-core-module@2.2.0 │ │ │ │ │ └─┬ has@1.0.3 │ │ │ │ │   └── function-bind@1.1.1 │ │ │ │ └── path-parse@1.0.6 │ │ │ ├── semver@5.7.1 │ │ │ └─┬ validate-npm-package-license@3.0.4 │ │ │   ├─┬ spdx-correct@3.1.1 │ │ │   │ └── spdx-license-ids@3.0.7 │ │ │   └─┬ spdx-expression-parse@3.0.1 │ │ │     └── spdx-exceptions@2.3.0 │ │ ├─┬ read-pkg-up@3.0.0 │ │ │ ├─┬ find-up@2.1.0 │ │ │ │ └─┬ locate-path@2.0.0 │ │ │ │   ├─┬ p-locate@2.0.0 │ │ │ │   │ └─┬ p-limit@1.3.0 │ │ │ │   │   └── p-try@1.0.0 │ │ │ │   └── path-exists@3.0.0 │ │ │ └─┬ read-pkg@3.0.0 │ │ │   ├─┬ load-json-file@4.0.0 │ │ │   │ ├── graceful-fs@4.2.6 │ │ │   │ ├─┬ parse-json@4.0.0 │ │ │   │ │ ├─┬ error-ex@1.3.2 │ │ │   │ │ │ └── is-arrayish@0.2.1 │ │ │   │ │ └── json-parse-better-errors@1.0.2 │ │ │   │ ├── pify@3.0.0 │ │ │   │ └── strip-bom@3.0.0 │ │ │   └── path-type@3.0.0 │ │ ├─┬ redent@2.0.0 │ │ │ ├── indent-string@3.2.0 │ │ │ └── strip-indent@2.0.0 │ │ └── trim-newlines@2.0.0 │ └─┬ winston-color@1.0.0 │   └─┬ winston@2.4.5 │     ├── async@1.0.0 │     ├── colors@1.0.3 │     ├── cycle@1.0.3 │     ├── eyes@0.1.8 │     ├── isstream@0.1.2 │     └── stack-trace@0.0.10 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "include-codeblock" installed with success info:  info: installing plugin "splitter" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "splitter" installed with success info:  info: installing plugin "github-buttons" runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "github-buttons" installed with success info:  info: installing plugin "chart" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├─┬ gitbook-plugin-chart@0.2.2 │ └─┬ js-yaml@3.14.1 │   ├─┬ argparse@1.0.10 │   │ └── sprintf-js@1.0.3 │   └── esprima@4.0.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "chart" installed with success info:  info: installing plugin "todo" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ ├─┬ cheerio@0.19.0 │ │ ├─┬ css-select@1.0.0 │ │ │ ├── css-what@1.0.0 │ │ │ └── domutils@1.4.3 │ │ ├─┬ htmlparser2@3.8.3 │ │ │ ├── domhandler@2.3.0 │ │ │ ├── domutils@1.5.1 │ │ │ ├── entities@1.0.0 │ │ │ └─┬ readable-stream@1.1.14 │ │ │   ├── core-util-is@1.0.2 │ │ │   ├── isarray@0.0.1 │ │ │   └── string_decoder@0.10.31 │ │ └── lodash@3.10.1 │ └── underscore@1.12.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "todo" installed with success info:  info: installing plugin "quiz" runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├─┬ gitbook-plugin-quiz@0.3.0 │ └── jquery@2.2.4 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "quiz" installed with success info:  info: installing plugin "include-highlight" runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├─┬ gitbook-plugin-include-highlight@0.2.1 │ ├─┬ path@0.12.7 │ │ ├── process@0.11.10 │ │ └─┬ util@0.10.4 │ │   └── inherits@2.0.3 │ └── q@1.5.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-quiz@0.3.0 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "include-highlight" installed with success info:  info: installing plugin "tonic" runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-include-highlight@0.2.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-quiz@0.3.0 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 ├── gitbook-plugin-tonic@1.1.0 └── gitbook-plugin-video@0.0.3 info: &gt;&gt; plugin "tonic" installed with success zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % git servegit: 'serve' is not a git command. See 'git --help'.The most similar command is    mergezhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: 35729Press CTRL+C to quit ...info: 21 plugins are installed info: loading plugin "jsbin"... OK info: loading plugin "anchors"... OK info: loading plugin "video"... OK info: loading plugin "ga"... OK info: loading plugin "toggle-chapters"... OK info: loading plugin "editlink"... OK info: loading plugin "include-codeblock"... warn: ace features disabled (`gitbook-plugin-ace` required)OK info: loading plugin "splitter"... OK info: loading plugin "github-buttons"... OK info: loading plugin "chart"... OK info: loading plugin "todo"... OK info: loading plugin "quiz"... OK info: loading plugin "include-highlight"... OK info: loading plugin "tonic"... OK info: loading plugin "livereload"... OK info: loading plugin "highlight"... OK info: loading plugin "search"... OK info: loading plugin "lunr"... OK info: loading plugin "sharing"... OK info: loading plugin "fontsettings"... OK info: loading plugin "theme-default"... OK info: found 108 pages info: found 181 asset files warn: "options" property is deprecated, use config.get(key) instead info: &gt;&gt; generation finished with success in 12.0s ! Starting server ...Serving book on http://localhost:4000(node:84994) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated(Use `node --trace-deprecation ...` to show where the warning was created)^Czhangsaidong@zhangsaidongs-MacBook-Pro gitbook % cd /Users/zhangsaidong/Desktop/project/Self/BlogSource zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git clone https://git.gitbook.com/chengweiv5/test.gitCloning into 'test'...Username for 'https://git.gitbook.com': ^Czhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git clone https://git.gitbook.com/3440217568/rxswift.gitCloning into 'rxswift'...Username for 'https://git.gitbook.com': 34402217568       Password for 'https://34402217568@git.gitbook.com': remote: Book not foundfatal: repository 'https://git.gitbook.com/3440217568/rxswift.git/' not foundzhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git clone https://git.gitbook.com/3440217568/RxSwift.gitCloning into 'RxSwift'...Username for 'https://git.gitbook.com': 3440217568@qq.comPassword for 'https://3440217568@qq.com@git.gitbook.com': remote: Book not foundfatal: repository 'https://git.gitbook.com/3440217568/RxSwift.git/' not foundzhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git clone https://github.com/adong666666/RxSwiftDoc.gitCloning into 'RxSwiftDoc'...warning: You appear to have cloned an empty repository.zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % cd /Users/zhangsaidong/Desktop/project/Self/RxSwiftDoc zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git add .git %                                                                                                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git commit -m "fix"[master (root-commit) 2719ead] fix 291 files changed, 11003 insertions(+) create mode 100644 .gitignore create mode 100644 CHANGELOG.md create mode 100644 LICENSE create mode 100644 README.md create mode 100644 SUMMARY.md create mode 100644 assets/Architecture/Architecture.png create mode 100644 assets/Architecture/MVVM/GitHubSignupViewController.png create mode 100644 assets/Architecture/MVVM/GithubSignupFull.gif create mode 100644 assets/Architecture/MVVM/GithubSignupViewModel.png create mode 100644 assets/Architecture/MVVM/MVC.png create mode 100644 assets/Architecture/MVVM/MVVM.png create mode 100644 assets/Architecture/MVVM/Service.png create mode 100644 assets/Architecture/MVVM/ViewModel.png create mode 100644 assets/Architecture/ReactorKit/BasicConcept.png create mode 100644 assets/Architecture/ReactorKit/GithubPaginatedSearchFull.gif create mode 100644 assets/Architecture/ReactorKit/Reactor.png create mode 100644 assets/Architecture/ReactorKit/ReactorKit.png create mode 100644 assets/Architecture/RxFeedback/All.png create mode 100644 assets/Architecture/RxFeedback/Counter.gif create mode 100644 assets/Architecture/RxFeedback/Event.png create mode 100644 assets/Architecture/RxFeedback/FeedbackLoop.png create mode 100644 assets/Architecture/RxFeedback/GithubPaginatedSearchFull.gif create mode 100644 assets/Architecture/RxFeedback/QueriedState.png create mode 100644 assets/Architecture/RxFeedback/RxFeedback.png create mode 100644 assets/Architecture/RxFeedback/State.png create mode 100644 assets/Disposable/Disposable.png create mode 100644 assets/Disposable/DisposeBag.png create mode 100644 assets/Disposable/TakeUntil.png create mode 100644 assets/FunctionalReactiveProgramming/Binding.png create mode 100644 assets/FunctionalReactiveProgramming/FunctionalProgramming.png create mode 100644 assets/FunctionalReactiveProgramming/FunctionalProgrammingBanner.png create mode 100644 assets/FunctionalReactiveProgramming/FunctionalReactiveProgramming.png create mode 100644 assets/FunctionalReactiveProgramming/TapArray.png create mode 100644 assets/FunctionalReactiveProgramming/TapObservable.png create mode 100644 assets/GithubSearch.gif create mode 100644 assets/MoreDemo/Calculator/All.png create mode 100644 assets/MoreDemo/Calculator/CalculatorCommand.png create mode 100644 assets/MoreDemo/Calculator/CalculatorFull.gif create mode 100644 assets/MoreDemo/Calculator/CalculatorState.png create mode 100644 assets/MoreDemo/Calculator/State.png create mode 100644 assets/MoreDemo/Calculator/StateObserver.png create mode 100644 assets/MoreDemo/ImagePicker/All.png create mode 100644 assets/MoreDemo/ImagePicker/ImagePickerFull.gif create mode 100644 assets/MoreDemo/ImagePicker/Operator.png create mode 100644 assets/MoreDemo/TableViewSectionedViewController/All.png create mode 100644 assets/MoreDemo/TableViewSectionedViewController/TableViewSectionedViewControllerFull.png create mode 100644 assets/MoreDemo/TableViewSectionedViewController/bindings.png create mode 100644 assets/Observable/Callback.png create mode 100644 assets/Observable/JSON.png create mode 100644 assets/Observable/Obervable.png create mode 100644 assets/Observable/OnePiece.png create mode 100644 assets/Observable/Temperature.png create mode 100644 assets/ObservableAndObserver/AsyncSubject.png create mode 100644 assets/ObservableAndObserver/AsyncSubject1.png create mode 100644 assets/ObservableAndObserver/BehaviorSubject.png create mode 100644 assets/ObservableAndObserver/BehaviorSubject1.png create mode 100644 assets/ObservableAndObserver/ObservableAndObserver.png create mode 100644 assets/ObservableAndObserver/PublishSubject.png create mode 100644 assets/ObservableAndObserver/PublishSubject1.png create mode 100644 assets/ObservableAndObserver/ReplaySubject.png create mode 100644 assets/Observer/Callback.png create mode 100644 assets/Observer/JSON.png create mode 100644 assets/Observer/Observer.png create mode 100644 assets/Observer/OnePiece.png create mode 100644 assets/Observer/Temperature.png create mode 100644 assets/Operator/Operator.png create mode 100644 assets/Operator/filter.png create mode 100644 assets/Operator/map.png create mode 100644 assets/Operator/zip.png create mode 100644 assets/README/FunctionalReactiveProgramming.png create mode 100644 assets/README/Introduction.png create mode 100644 assets/README/OperatorCreate.png create mode 100644 assets/README/RxSwiftEcosystem.png create mode 100644 assets/Recipes/Recipes.jpg create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Bind.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Do.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Element.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4FilterNil.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4TimeInterval.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4ToArray.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Variable.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Bind.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5DispatchTimeInterval.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Do.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Element.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5FilterNil.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5ToArray.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Variable.png create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwiftDpendencyGraph.png create mode 100644 assets/RxSwiftCore.png create mode 100644 assets/Rx_Logo_M.png create mode 100644 assets/Schedulers/Scheduler.png create mode 100644 assets/SimpleValid/All.png create mode 100644 assets/SimpleValid/LoginAction.png create mode 100644 assets/SimpleValid/LoginButtonValid.png create mode 100644 assets/SimpleValid/PasswordValid.png create mode 100644 assets/SimpleValid/SimpleValidationFull.gif create mode 100644 assets/SimpleValid/UsernameValid.png create mode 100644 assets/WhichOperator/Operators/amb.png create mode 100644 assets/WhichOperator/Operators/buffer.png create mode 100644 assets/WhichOperator/Operators/catchError.png create mode 100644 assets/WhichOperator/Operators/combineLatest.png create mode 100644 assets/WhichOperator/Operators/concat.png create mode 100644 assets/WhichOperator/Operators/concatMap.png create mode 100644 assets/WhichOperator/Operators/create.png create mode 100644 assets/WhichOperator/Operators/debounce.png create mode 100644 assets/WhichOperator/Operators/deferred.png create mode 100644 assets/WhichOperator/Operators/delay.png create mode 100644 assets/WhichOperator/Operators/delaySubscription.png create mode 100644 assets/WhichOperator/Operators/dematerialize.png create mode 100644 assets/WhichOperator/Operators/distinctUntilChanged.png create mode 100644 assets/WhichOperator/Operators/do.png create mode 100644 assets/WhichOperator/Operators/elementAt.png create mode 100644 assets/WhichOperator/Operators/empty.png create mode 100644 assets/WhichOperator/Operators/error.png create mode 100644 assets/WhichOperator/Operators/filter.png create mode 100644 assets/WhichOperator/Operators/flatMap.png create mode 100644 assets/WhichOperator/Operators/flatMapLatest.png create mode 100644 assets/WhichOperator/Operators/from.png create mode 100644 assets/WhichOperator/Operators/groupBy.png create mode 100644 assets/WhichOperator/Operators/ignoreElements.png create mode 100644 assets/WhichOperator/Operators/interval.png create mode 100644 assets/WhichOperator/Operators/just.png create mode 100644 assets/WhichOperator/Operators/map.png create mode 100644 assets/WhichOperator/Operators/materialize.png create mode 100644 assets/WhichOperator/Operators/merge.png create mode 100644 assets/WhichOperator/Operators/never.png create mode 100644 assets/WhichOperator/Operators/observeOn.png create mode 100644 assets/WhichOperator/Operators/observeOn1.png create mode 100644 assets/WhichOperator/Operators/publish.png create mode 100644 assets/WhichOperator/Operators/reduce.png create mode 100644 assets/WhichOperator/Operators/refCount.png create mode 100644 assets/WhichOperator/Operators/repeatElement.png create mode 100644 assets/WhichOperator/Operators/replay.png create mode 100644 assets/WhichOperator/Operators/retry.png create mode 100644 assets/WhichOperator/Operators/sample.png create mode 100644 assets/WhichOperator/Operators/scan.png create mode 100644 assets/WhichOperator/Operators/schedulers.png create mode 100644 assets/WhichOperator/Operators/single.png create mode 100644 assets/WhichOperator/Operators/skip.png create mode 100644 assets/WhichOperator/Operators/skipUntil.png create mode 100644 assets/WhichOperator/Operators/skipWhile.png create mode 100644 assets/WhichOperator/Operators/startWith.png create mode 100644 assets/WhichOperator/Operators/subscribeOn.png create mode 100644 assets/WhichOperator/Operators/take.png create mode 100644 assets/WhichOperator/Operators/takeLast.png create mode 100644 assets/WhichOperator/Operators/takeUntil.png create mode 100644 assets/WhichOperator/Operators/takeWhile.png create mode 100644 assets/WhichOperator/Operators/timeout.png create mode 100644 assets/WhichOperator/Operators/timer.png create mode 100644 assets/WhichOperator/Operators/timer1.png create mode 100644 assets/WhichOperator/Operators/using.png create mode 100644 assets/WhichOperator/Operators/window.png create mode 100644 assets/WhichOperator/Operators/withLatestFrom.png create mode 100644 assets/WhichOperator/Operators/zip.png create mode 100644 assets/WhichOperator/WhichOperator.png create mode 100644 assets/WhyRxSwiftAgain/ReactiveX.png create mode 100644 assets/WhyRxSwiftAgain/RxDataSources.gif create mode 100644 assets/WhyRxSwiftAgain/RxSwiftCommunity.png create mode 100644 book.json create mode 100644 content/about.md create mode 100644 content/architecture.md create mode 100644 content/architecture/mvvm.md create mode 100644 content/architecture/mvvm/github_signup.md create mode 100644 content/architecture/reactorkit.md create mode 100644 content/architecture/reactorkit/github_search.md create mode 100644 content/architecture/rxfeedback.md create mode 100644 content/architecture/rxfeedback/github_search.md create mode 100644 content/decision_tree.md create mode 100644 content/decision_tree/amb.md create mode 100644 content/decision_tree/buffer.md create mode 100644 content/decision_tree/catchError.md create mode 100644 content/decision_tree/combineLatest.md create mode 100644 content/decision_tree/concat.md create mode 100644 content/decision_tree/concatMap.md create mode 100644 content/decision_tree/connect.md create mode 100644 content/decision_tree/create.md create mode 100644 content/decision_tree/debounce.md create mode 100644 content/decision_tree/debug.md create mode 100644 content/decision_tree/deferred.md create mode 100644 content/decision_tree/delay.md create mode 100644 content/decision_tree/delaySubscription.md create mode 100644 content/decision_tree/dematerialize.md create mode 100644 content/decision_tree/distinctUntilChanged.md create mode 100644 content/decision_tree/do.md create mode 100644 content/decision_tree/elementAt.md create mode 100644 content/decision_tree/empty.md create mode 100644 content/decision_tree/error.md create mode 100644 content/decision_tree/filter.md create mode 100644 content/decision_tree/flatMap.md create mode 100644 content/decision_tree/flatMapLatest.md create mode 100644 content/decision_tree/from.md create mode 100644 content/decision_tree/groupBy.md create mode 100644 content/decision_tree/ignoreElements.md create mode 100644 content/decision_tree/interval.md create mode 100644 content/decision_tree/just.md create mode 100644 content/decision_tree/map.md create mode 100644 content/decision_tree/materialize.md create mode 100644 content/decision_tree/merge.md create mode 100644 content/decision_tree/never.md create mode 100644 content/decision_tree/observeOn.md create mode 100644 content/decision_tree/publish.md create mode 100644 content/decision_tree/reduce.md create mode 100644 content/decision_tree/refCount.md create mode 100644 content/decision_tree/repeatElement.md create mode 100644 content/decision_tree/replay.md create mode 100644 content/decision_tree/retry.md create mode 100644 content/decision_tree/sample.md create mode 100644 content/decision_tree/scan.md create mode 100644 content/decision_tree/shareReplay.md create mode 100644 content/decision_tree/single.md create mode 100644 content/decision_tree/skip.md create mode 100644 content/decision_tree/skipUntil.md create mode 100644 content/decision_tree/skipWhile.md create mode 100644 content/decision_tree/startWith.md create mode 100644 content/decision_tree/subscribeOn.md create mode 100644 content/decision_tree/take.md create mode 100644 content/decision_tree/takeLast.md create mode 100644 content/decision_tree/takeUntil.md create mode 100644 content/decision_tree/takeWhile.md create mode 100644 content/decision_tree/timeout.md create mode 100644 content/decision_tree/timer.md create mode 100644 content/decision_tree/using.md create mode 100644 content/decision_tree/window.md create mode 100644 content/decision_tree/withLatestFrom.md create mode 100644 content/decision_tree/zip.md create mode 100644 content/first_app.md create mode 100644 content/more_demo.md create mode 100644 content/more_demo/calculator.md create mode 100644 content/more_demo/image_picker.md create mode 100644 content/more_demo/tableView_sectioned_viewController.md create mode 100644 content/recipes.md create mode 100644 content/recipes/pure_function.md create mode 100644 content/recipes/rxrelay.md create mode 100644 content/recipes/share_side_effects.md create mode 100644 content/recipes/side_effects.md create mode 100644 content/recipes/whats_new_in_rxswift_5.md create mode 100644 content/resource.md create mode 100644 content/rxswift_core.md create mode 100644 content/rxswift_core/disposable.md create mode 100644 content/rxswift_core/error_handling.md create mode 100644 content/rxswift_core/observable.md create mode 100644 content/rxswift_core/observable/completable.md create mode 100644 content/rxswift_core/observable/control_event.md create mode 100644 content/rxswift_core/observable/driver.md create mode 100644 content/rxswift_core/observable/maybe.md create mode 100644 content/rxswift_core/observable/signal.md create mode 100644 content/rxswift_core/observable/single.md create mode 100644 content/rxswift_core/observable_and_observer.md create mode 100644 content/rxswift_core/observable_and_observer/async_subject.md create mode 100644 content/rxswift_core/observable_and_observer/behavior_subject.md create mode 100644 content/rxswift_core/observable_and_observer/control_property.md create mode 100644 content/rxswift_core/observable_and_observer/publish_subject.md create mode 100644 content/rxswift_core/observable_and_observer/replay_subject.md create mode 100644 content/rxswift_core/observable_and_observer/variable.md create mode 100644 content/rxswift_core/observer.md create mode 100644 content/rxswift_core/observer/any_observer.md create mode 100644 content/rxswift_core/observer/binder.md create mode 100644 content/rxswift_core/operator.md create mode 100644 content/rxswift_core/schedulers.md create mode 100644 content/rxswift_ecosystem.md create mode 100644 content/think_reactive.md create mode 100644 content/think_reactive/data_binding.md create mode 100644 content/think_reactive/functional_reactive_progaramming.md create mode 100644 content/think_reactive/funtional_programming.md create mode 100644 content/why_rxswift.md create mode 100644 gitbook/fonts/fontawesome/FontAwesome.otf create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.eot create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.svg create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.ttf create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff2 create mode 100644 gitbook/gitbook-plugin-fontsettings/fontsettings.js create mode 100644 gitbook/gitbook-plugin-fontsettings/website.css create mode 100644 gitbook/gitbook-plugin-highlight/ebook.css create mode 100644 gitbook/gitbook-plugin-highlight/website.css create mode 100644 gitbook/gitbook-plugin-lunr/lunr.min.js create mode 100644 gitbook/gitbook-plugin-lunr/search-lunr.js create mode 100644 gitbook/gitbook-plugin-search/lunr.min.js create mode 100644 gitbook/gitbook-plugin-search/search-engine.js create mode 100644 gitbook/gitbook-plugin-search/search.css create mode 100644 gitbook/gitbook-plugin-search/search.js create mode 100644 gitbook/gitbook-plugin-sharing/buttons.js create mode 100644 gitbook/gitbook.js create mode 100644 gitbook/images/apple-touch-icon-precomposed-152.png create mode 100644 gitbook/images/favicon.ico create mode 100644 gitbook/style.css create mode 100644 gitbook/theme.js create mode 100644 introduction.md create mode 100755 publish_gitbook.sh create mode 100644 search_index.jsonzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git ppushgit: 'ppush' is not a git command. See 'git --help'.The most similar command is    pushzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git push Enumerating objects: 336, done.Counting objects: 100% (336/336), done.Delta compression using up to 16 threadsCompressing objects: 100% (330/330), done.Writing objects: 100% (336/336), 15.77 MiB | 116.00 KiB/s, done.Total 336 (delta 5), reused 0 (delta 0)remote: Resolving deltas: 100% (5/5), done.To https://github.com/adong666666/RxSwiftDoc.git * [new branch]      master -&gt; masterzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % lsszsh: command not found: lsszhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % lsCHANGELOG.md        SUMMARY.md        book.json        introduction.md        search_index.jsonLICENSE            _book            content            node_modulesREADME.md        assets            gitbook            publish_gitbook.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 文档处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS之制作xcframework摘录</title>
      <link href="/posts/10391.html"/>
      <url>/posts/10391.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS之制作xcframework摘录"><a href="#iOS之制作xcframework摘录" class="headerlink" title="iOS之制作xcframework摘录"></a>iOS之制作xcframework摘录</h1><p>========================</p><p>最近RxSwift 6开始需要xcframework拖到工程中（感觉有点麻烦，直接让我们pod就能用，他不香吗），然后我就去搜了网上的教程制作xcframework，真是很麻烦，幸好结合下面两篇教程最后还是搞定了。</p><p>附网址：<a href="https://www.shareintelli.com/1087/">https://www.shareintelli.com/1087/</a><br> 附网址：<a href="https://blog.csdn.net/zr_csdn/article/details/112298965">https://blog.csdn.net/zr_csdn/article/details/112298965</a></p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/2.png"></p><h2 id="截图看不到的命令行"><a href="#截图看不到的命令行" class="headerlink" title="截图看不到的命令行"></a>截图看不到的命令行</h2><pre class="line-numbers language-none"><code class="language-none">xcodebuild -create-xcframework -framework &lt;第一个库的路径&gt; -framework &lt;第二个库的路径&gt; -output &lt;输出路径/库名称.xcframework&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">xcodebuild -create-xcframework -framework /Users/admin/Library/Developer/Xcode/DerivedData/MyTools-ciyqnqacjemhpfbqswwhrlyvstsb/Build/Products/Release-iphoneos/MyTools.framework -framework /Users/admin/Library/Developer/Xcode/DerivedData/MyTools-ciyqnqacjemhpfbqswwhrlyvstsb/Build/Products/Release-iphonesimulator/MyTools.framework -output ~/Desktop/MyToolsOutput/MyTools.xcframework// 成功后的日志xcframework successfully written out to: /Users/admin/Desktop/MyToolsOutput/MyTools.xcframework<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><p>这里因为在博客就直接给内容哈：</p><pre class="line-numbers language-none"><code class="language-none">Last login: Sun Mar 21 16:16:57 on ttys000zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project2/iOS/someProjectzhangsaidong@zhangsaidongs-MacBook-Pro someProject % zhangsaidong@zhangsaidongs-MacBook-Pro someProject % git clone https://github.com/ReactiveX/RxSwift.gitCloning into 'RxSwift'...remote: Enumerating objects: 36, done.remote: Counting objects: 100% (36/36), done.remote: Compressing objects: 100% (33/33), done.remote: Total 39525 (delta 9), reused 9 (delta 3), pack-reused 39489Receiving objects: 100% (39525/39525), 15.15 MiB | 1.85 MiB/s, done.Resolving deltas: 100% (29174/29174), done.zhangsaidong@zhangsaidongs-MacBook-Pro someProject % xcodebuildCommand line invocation:    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuildxcodebuild: error: The directory /Users/zhangsaidong/Desktop/project2/iOS/someProject does not contain an Xcode project.zhangsaidong@zhangsaidongs-MacBook-Pro someProject % cd /Users/zhangsaidong/Desktop/project2/iOS/someProject/RxSwift/RxExample/RxExample.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RxExample.xcodeproj % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcode buildzsh: command not found: xcodezhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuildCommand line invocation:    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuildnote: Using new build systemnote: Planning buildnote: Constructing build descriptionwarning: ONLY_ACTIVE_ARCH=YES requested with multiple ARCHS and no run destination to provide an active architecture; building for all applicable architectures (in target 'RxCocoa' from project 'Rx')error: No profiles for 'io.rx.example.4.3.0' were found: Xcode couldn't find any iOS App Development provisioning profiles matching 'io.rx.example.4.3.0'. Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild. (in target 'RxExample-iOS' from project 'RxExample')error: Building for iOS, but the linked framework 'RxSwift.framework' is building for macOS. You may need to configure 'RxSwift.framework' to build for iOS. (in target 'RxExample-iOS' from project 'RxExample')error: Building for iOS, but the linked framework 'RxCocoa.framework' is building for macOS. You may need to configure 'RxCocoa.framework' to build for iOS. (in target 'RxExample-iOS' from project 'RxExample')zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.frameworkerror: invalid argument '-framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkerror: invalid argument '-framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxCocoa.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxRelay.framework output ~/Desktop/RxRelay.xcframeworkerror: invalid argument 'output'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxRelay.framework -output ~/Desktop/RxRelay.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxRelay.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxCocoa.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxSwift.framework  -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxSwift.framework  -output ~/Desktop/RxSwift.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxSwift.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perfect部署到云服务器摘录</title>
      <link href="/posts/48709.html"/>
      <url>/posts/48709.html</url>
      
        <content type="html"><![CDATA[<h1 id="Perfect部署到云服务器摘录"><a href="#Perfect部署到云服务器摘录" class="headerlink" title="Perfect部署到云服务器摘录"></a>Perfect部署到云服务器摘录</h1><p>========================<br>部署过程中我先用的下面的教程<br>附链接:<a href="https://blog.csdn.net/z123sen/article/details/80248345">https://blog.csdn.net/z123sen/article/details/80248345</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/4.png"></p><h1 id="遇到的第一个问题"><a href="#遇到的第一个问题" class="headerlink" title="遇到的第一个问题"></a>遇到的第一个问题</h1><h3 id="linux-下解压-tar-gz文件"><a href="#linux-下解压-tar-gz文件" class="headerlink" title="linux 下解压 tar.gz文件"></a>linux 下解压 tar.gz文件</h3><p>百度了之后，使用命令行<code>tar -xvzf filename.tar.gz</code>解决</p><h1 id="遇到的第二个问题"><a href="#遇到的第二个问题" class="headerlink" title="遇到的第二个问题"></a>遇到的第二个问题</h1><h3 id="云服务器搭建Swift环境"><a href="#云服务器搭建Swift环境" class="headerlink" title="云服务器搭建Swift环境"></a>云服务器搭建Swift环境</h3><p>这里我发现前面的教程不够好，总是搭建不成功，于是我又找到了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/5.png"><br>使用这个教程我成功搭建了Swift环境</p><h1 id="遇到的第三个问题"><a href="#遇到的第三个问题" class="headerlink" title="遇到的第三个问题"></a>遇到的第三个问题</h1><h3 id="这段时间github访问不了，需要翻墙"><a href="#这段时间github访问不了，需要翻墙" class="headerlink" title="这段时间github访问不了，需要翻墙"></a>这段时间github访问不了，需要翻墙</h3><p>Perfect有许多依赖库在github上面，所以需要获取到github上的依赖库<br>现在我想到了两个办法，一是服务器翻墙，二是在mac上翻墙，然后将依赖库下载下来，上传到没有被墙的代码托管仓库，我会选择Coding，因为之前就用过，在这之后，修改Perfect各个依赖仓库的代码，把有关github的url全部改成Coding的url,标签尽量保持一致。<br>权衡之下，我选择了第二个办法，linux翻墙也是件麻烦事，mac上我有无数个vpn随便翻<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/6.png"><br>不过也是很麻烦，费了几个小时整理依赖库，修改代码。<br>幸运的是，不出所料，一顿改动后，代码总算是运行起来了，这个时候已经出现了<code>[INFO] Starting HTTP server localhost on 0.0.0.0:8080</code>。<br>也就是说我成功将Perfect项目在服务器跑了起来。</p><h1 id="遇到的第四个问题"><a href="#遇到的第四个问题" class="headerlink" title="遇到的第四个问题"></a>遇到的第四个问题</h1><h3 id="公网无法访问"><a href="#公网无法访问" class="headerlink" title="公网无法访问"></a>公网无法访问</h3><p>到这里，项目只能在服务器localhost上跑，公网访问不到<br>然后我又找了半天，找到Perfect官方文档的一个nginx配置教程，链接是<a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md">https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/7.png"></p><h1 id="遇到的第五个问题"><a href="#遇到的第五个问题" class="headerlink" title="遇到的第五个问题"></a>遇到的第五个问题</h1><h3 id="nginx配置到想吐"><a href="#nginx配置到想吐" class="headerlink" title="nginx配置到想吐"></a>nginx配置到想吐</h3><p>上面那个文档写得很一般，我配了半天，也只是配出个 bad gateways<br>然后我又找了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/8.png"><br>虽然用处不大，但我还是想到了把<code>http://127.0.0.1:8181</code>换成了<code>http://localhost:8080</code></p><h1 id="遇到的第六个问题"><a href="#遇到的第六个问题" class="headerlink" title="遇到的第六个问题"></a>遇到的第六个问题</h1><h3 id="一顿nigix配置下来，还是无法从公网访问"><a href="#一顿nigix配置下来，还是无法从公网访问" class="headerlink" title="一顿nigix配置下来，还是无法从公网访问"></a>一顿nigix配置下来，还是无法从公网访问</h3><p>然后我又找了一堆内网穿透教程、外网访问服务器教程等等，皆无果<br>我觉得我需要海量Perfect部署至服务器教程，我就又这样搜起来了，总有成功访问的吧。<br>我又找到了下面这个教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/9.png"><br>对比了之前的教程，我发现了一个非常严重却不容易发现的问题</p><h1 id="遇到的第七个问题"><a href="#遇到的第七个问题" class="headerlink" title="遇到的第七个问题"></a>遇到的第七个问题</h1><h3 id="安全组设置问题"><a href="#安全组设置问题" class="headerlink" title="安全组设置问题"></a>安全组设置问题</h3><p>我为Perfect项目设置了8080窗口<br>在云服务器控制台，我以为安全组有个80就可以了，没怎么关注这个安全组，真是上面的教程救我于危难之际。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/10.png"><br>居然要配置这么个东西，端口范围，他配置的是8181/8181<br>那么我岂不是要配置个8080/8080，我就抱着试试的态度，没想到居然成功了，外网一直无法访问，竟然是因为安全组的这个端口范围，我真是一把辛酸泪啊，终于成功了！<br>附上该教程链接，我超喜欢这个教程<a href="https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/">https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/11.png"><br>这个时候已经可以从公网调用接口了，感觉稳了，一切都值得<br>没想到还有第八个问题</p><h1 id="遇到的第八个问题"><a href="#遇到的第八个问题" class="headerlink" title="遇到的第八个问题"></a>遇到的第八个问题</h1><h3 id="项目无法持续在服务器跑"><a href="#项目无法持续在服务器跑" class="headerlink" title="项目无法持续在服务器跑"></a>项目无法持续在服务器跑</h3><p>我远程连接一关，远程的终端一关，这个服务器他就不跑了，可我需要这个项目在服务器上一直跑下去，这样我才能随时调用接口<br>于是我又搜教程，然后一篇文章给了我启发，利用nohup来让Perfect项目保持运行<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/12.png"><br>我并没有按照上面教程来<br>我使用的是<code>apt install coreutils</code>、<code>vi ~/.profile</code>(我在.profile中按照教程写入了<code>PATH=$PATH:$HOME/bin:/usr/bin</code>)、<code>source ~/.profile</code><br>弄完这些<br>我在Perfect项目目录下使用 <code>swift build</code>、编译完之后使用<code>nohup .build/debug/PerfectTemplate</code>成功地让项目保持运行<br>如果想要停止运行，只需要关闭端口即可<br>即<code>lsof -i:端口号</code>获取到Perfect项目在对应端口号下的PID<br>使用<code>kill 该PID</code>便能关闭端口，停止项目的运行<br>好了，本次Swift Perfect部署至云服务器之旅便到此结束了！！！真的很开心！！！向着全栈的方向越走越远！！！</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perfect部署到服务器工作记录</title>
      <link href="/posts/50921.html"/>
      <url>/posts/50921.html</url>
      
        <content type="html"><![CDATA[<h1 id="Perfect部署到服务器工作记录"><a href="#Perfect部署到服务器工作记录" class="headerlink" title="Perfect部署到服务器工作记录"></a>Perfect部署到服务器工作记录</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">Welcome to Ubuntu 20.04.1 LTS (GNU/Linux 5.4.0-65-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantageWelcome to Alibaba Cloud Elastic Compute Service !Last login: Sat Mar 20 16:36:55 2021 from 47.96.60.213root@iZwz9ir4og87e0nnfrmugkZ:~# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/# cd homeroot@iZwz9ir4og87e0nnfrmugkZ:/home# lsCode  Swift  swift-5.3.3-RELEASE-ubuntu20.04  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig  wget-logroot@iZwz9ir4og87e0nnfrmugkZ:/home# cd Coderoot@iZwz9ir4og87e0nnfrmugkZ:/home/Code# lsServer-tencet2root@iZwz9ir4og87e0nnfrmugkZ:/home/Code# cd Server-tencet2root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# swift builderror: root manifest not foundroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# lsLICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# swift buildUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# git pullUsername for 'https://e.coding.net': 3440217568@qq.comPassword for 'https://3440217568@qq.com@e.coding.net': remote: Enumerating objects: 9, done.remote: Counting objects: 100% (9/9), done.remote: Compressing objects: 100% (5/5), done.remote: Total 7 (delta 2), reused 0 (delta 0), pack-reused 0Unpacking objects: 100% (7/7), 558 bytes | 558.00 KiB/s, done.From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2   5495386..830be1e  master     -&gt; origin/masterUpdating 5495386..830be1eFast-forward Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata | 7 +++++++ 1 file changed, 7 insertions(+) create mode 100644 Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedataroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# lsLICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# swift buildUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfecttTemplate-bash: cd: PerfecttTemplate: No such file or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# lsLICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# ls -a.  ..  .build  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpmroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# rm -rf .buildroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# lsLICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# ls -a.  ..  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpmroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# swift buildFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Cerror: Failed to clone https://github.com/PerfectlySoft/Perfect-HTTP.git:    Cloning into bare repository '/home/Code/Server-tencet2/PerfectTemplate/.build/repositories/Perfect-HTTP-3192655d'...root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd Perfect-bash: cd: Perfect: No such file or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# lsLICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd Package.swift-bash: cd: Package.swift: Not a directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# vi Package.swiftroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# git pullUsername for 'https://e.coding.net': 3440217568@qq.comPassword for 'https://3440217568@qq.com@e.coding.net': remote: Enumerating objects: 7, done.remote: Counting objects: 100% (7/7), done.remote: Compressing objects: 100% (4/4), done.remote: Total 4 (delta 3), reused 0 (delta 0), pack-reused 0Unpacking objects: 100% (4/4), 322 bytes | 322.00 KiB/s, done.From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2   830be1e..a6d4c36  master     -&gt; origin/masterUpdating 830be1e..a6d4c36Fast-forward PerfectTemplate/Package.swift | 2 +- 1 file changed, 1 insertion(+), 1 deletion(-)root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# lsLICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfectTemplatet-bash: cd: PerfectTemplatet: No such file or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# swift buildUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.githttps://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git @ 4.0.0: error: duplicate dependency 'perfectlib-tencent'root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# swift buildUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.gitCloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.git at 4.0.2Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git at 4.0.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git at 0.0.4Cloning https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git at 4.0.1Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git at 3.1.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git at 4.0.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git at 3.0.23Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git at 3.3.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git at 3.0.7warning: failed to retrieve search paths with pkg-config; maybe pkg-config is not installedwarning: you may be able to install openssl using your system-packager:    apt-get install openssl libssl-dev/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable 'resultList' was never mutated; consider changing to 'let' constant                guard result == 0, var resultList = resultListPtr else {                                   ~~~ ^                                   let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable 'resultList' was never mutated; consider changing to 'let' constant                guard result == 0, var resultList = resultListPtr else {                                   ~~~ ^                                   let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable 'resultList' was never mutated; consider changing to 'let' constant                guard result == 0, var resultList = resultListPtr else {                                   ~~~ ^                                   let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable 'resultList' was never mutated; consider changing to 'let' constant                guard result == 0, var resultList = resultListPtr else {                                   ~~~ ^                                   let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable 'addr' was never mutated; consider changing to 'let' constant                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable 'len' was never mutated; consider changing to 'let' constant                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable 'nothingPtr' was never mutated; consider changing to 'let' constant                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable 'nothing' was never mutated; consider changing to 'let' constant                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)                ~~~ ^                let/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: 'TLSv1_2_method()' is deprecated                case .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: 'TLSv1_1_method()' is deprecated                case .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: 'TLSv1_method()' is deprecated                case .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: 'TLSv1_2_method()' is deprecated                case .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: 'TLSv1_1_method()' is deprecated                case .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: 'TLSv1_method()' is deprecated                case .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: 'TLSv1_2_method()' is deprecated                case .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: 'TLSv1_1_method()' is deprecated                case .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: 'TLSv1_method()' is deprecated                case .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPRequestHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPResponseHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPMethod' to 'Hashable' by implementing 'hash(into:)' instead                public var hashValue: Int {                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPRequestHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPResponseHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPMethod' to 'Hashable' by implementing 'hash(into:)' instead                public var hashValue: Int {                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPRequestHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPResponseHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPMethod' to 'Hashable' by implementing 'hash(into:)' instead                public var hashValue: Int {                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPRequestHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPResponseHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPMethod' to 'Hashable' by implementing 'hash(into:)' instead                public var hashValue: Int {                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPRequestHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPResponseHeader.Name' to 'Hashable' by implementing 'hash(into:)' instead                        public var hashValue: Int {                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTPMethod' to 'Hashable' by implementing 'hash(into:)' instead                public var hashValue: Int {                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                                        let qPtr = UnsafePointer&lt;UInt8&gt;(byts)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: 'Hashable.hashValue' is deprecated as a protocol requirement; conform type 'HTTP2Session' to 'Hashable' by implementing 'hash(into:)' instead                var hashValue: Int { return Int(net.fd.fd) }                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of 'UnsafeMutablePointer&lt;UInt8&gt;' results in a dangling pointer                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        stream.next_in = UnsafeMutablePointer(mutating: bytes)                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of 'UnsafeMutableRawPointer' results in a dangling pointer                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from '[UInt8]' to 'UnsafeRawPointer' produces a pointer valid only for the duration of the call to 'init(mutating:)'                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the 'withUnsafeBytes' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of 'UnsafePointer&lt;UInt8&gt;' results in a dangling pointer                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from '[UInt8]' to 'UnsafePointer&lt;UInt8&gt;' produces a pointer valid only for the duration of the call to 'init(_:)'                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the 'withUnsafeBufferPointer' method on Array in order to explicitly convert argument to buffer pointer valid for a defined scope                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {                                  ^[88/88] Linking PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# .build/debug/PerfectTemplate[INFO] Starting HTTP server localhost on 0.0.0.0:8181^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home/Code# cd ..root@iZwz9ir4og87e0nnfrmugkZ:/home# mkdir WebServiceroot@iZwz9ir4og87e0nnfrmugkZ:/home# cd WebServiceroot@iZwz9ir4og87e0nnfrmugkZ:/home/WebService# swift package init --type=executableCreating executable package: WebServiceCreating Package.swiftCreating README.mdCreating .gitignoreCreating Sources/Creating Sources/WebService/main.swiftCreating Tests/Creating Tests/LinuxMain.swiftCreating Tests/WebServiceTests/Creating Tests/WebServiceTests/WebServiceTests.swiftCreating Tests/WebServiceTests/XCTestManifests.swiftroot@iZwz9ir4og87e0nnfrmugkZ:/home/WebService# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git发布tag</title>
      <link href="/posts/40815.html"/>
      <url>/posts/40815.html</url>
      
        <content type="html"><![CDATA[<h1 id="git发布tag"><a href="#git发布tag" class="headerlink" title="git发布tag"></a>git发布tag</h1><p>========================<br>有些命令行老是要找半天，这里记录下git发布tag<br>举例来说，要发布一个3.3.0的tag ，就用<code>git tag 3.3.0</code><br>然后推送到远程仓库用<code>git push origin 3.3.0</code>，注意<code>origin</code>不能省略<br>删除tag用<code>git tag -d 3.3.0</code><br>查看tag用<code>git tag</code></p><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git tag 3.3.0zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git push 3.3.0fatal: '3.3.0' does not appear to be a git repositoryfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git push origin 3.3.0Total 0 (delta 0), reused 0 (delta 0)To https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git * [new tag]         3.3.0 -&gt; 3.3.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 版本控制git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac命令行关闭端口</title>
      <link href="/posts/15967.html"/>
      <url>/posts/15967.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mac命令行关闭端口"><a href="#Mac命令行关闭端口" class="headerlink" title="Mac命令行关闭端口"></a>Mac命令行关闭端口</h1><p>========================</p><h2 id="lsof-i-端口号"><a href="#lsof-i-端口号" class="headerlink" title="lsof -i:端口号"></a>lsof -i:端口号</h2><p>这里项目PefectTemplate占用了8181端口号，因此我输入的是<code>lsof -i:8181</code>，可以看到PerfectTemplate的进程ID为1869。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/lsof.png" alt="查看端口号"></p><h2 id="kill-PID"><a href="#kill-PID" class="headerlink" title="kill PID"></a>kill PID</h2><p>得到PID为1869后，我需要关闭端口，只需要使用<code>kill 1869</code>即可。</p><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % lsof -i:8181COMMAND    PID         USER   FD   TYPE            DEVICE SIZE/OFF NODE NAMEGoogle     574 zhangsaidong   38u  IPv4 0xe91302581543067      0t0  TCP localhost:56525-&gt;localhost:8181 (ESTABLISHED)Google     574 zhangsaidong   44u  IPv4 0xe91302581f1b067      0t0  TCP localhost:56526-&gt;localhost:8181 (ESTABLISHED)PerfectTe 1869 zhangsaidong    3u  IPv4 0xe91302587abea7f      0t0  TCP *:8181 (LISTEN)PerfectTe 1869 zhangsaidong    4u  IPv4 0xe91302582798067      0t0  TCP localhost:8181-&gt;localhost:56525 (ESTABLISHED)PerfectTe 1869 zhangsaidong    5u  IPv4 0xe91302579eaa807      0t0  TCP localhost:8181-&gt;localhost:56526 (ESTABLISHED)zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % kill 1869<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><h3 id="关闭前"><a href="#关闭前" class="headerlink" title="关闭前"></a>关闭前</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%89%8D.png" alt="关闭前"></p><h3 id="关闭后"><a href="#关闭后" class="headerlink" title="关闭后"></a>关闭后</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%90%8E.png" alt="关闭后"><br>至此端口被成功关闭。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift多线程摘录</title>
      <link href="/posts/58771.html"/>
      <url>/posts/58771.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-多线程摘录"><a href="#Swift-多线程摘录" class="headerlink" title="Swift 多线程摘录"></a>Swift 多线程摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210316Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B/Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B.png" alt="Swift多线程"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 多线程 </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLite.swift使用</title>
      <link href="/posts/63335.html"/>
      <url>/posts/63335.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQLite-swift使用"><a href="#SQLite-swift使用" class="headerlink" title="SQLite.swift使用"></a>SQLite.swift使用</h1><p>========================<br>对于这个，我只想上代码。</p><h2 id="数据库代码示例"><a href="#数据库代码示例" class="headerlink" title="数据库代码示例"></a>数据库代码示例</h2><pre class="line-numbers language-none"><code class="language-none">////  DataBase.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/3/3.//  Copyright © 2021 adong666666. All rights reserved.//import Foundationimport SQLitestruct  DataCenterConstant {    static let dbName = "db.sqlite"    static let dbFilePath = NSHomeDirectory() + "/Documents/" + DataCenterConstant.dbName}class DataBase {    static let shared = DataBase()    static var dataBase: Connection? = {        do {            return try Connection(DataCenterConstant.dbFilePath)        } catch {            assertionFailure("Fail to Create DataBase")            debugPrint(error)        }        return nil    }()        var cuturalRelicsIntroduction = CulturalRelicsIntroduction()    init() {        cuturalRelicsIntroduction.setupTable()    }}// MARK: - Queryextension DataBase {    // 查询所有文物介绍    func queryCulturalRelicsIntroduction() -&gt; [Introduction] {        var intro = [Introduction]()        do {            for value in Array(try DataBase.dataBase!.prepare(cuturalRelicsIntroduction.table)) {                let idForDB = value[cuturalRelicsIntroduction.id]                let name = value[cuturalRelicsIntroduction.name]                let introduction = value[cuturalRelicsIntroduction.introduction]                let photo = value[cuturalRelicsIntroduction.photo]                let remark = value[cuturalRelicsIntroduction.remark]                let tempIntroduction = Introduction(idForDataBase: idForDB, image: photo, title: I18n.localizedString(name), text: I18n.localizedString(introduction), date: I18n.localizedString(remark))                intro.append(tempIntroduction)            }        } catch {            assertionFailure("\(error)")        }        return intro    }    //查询个别文物介绍    func queryIntroduction(with id: Int64) -&gt; Introduction? {        let filter = cuturalRelicsIntroduction.table.filter(id == cuturalRelicsIntroduction.id)        do {            guard let pluck = try DataBase.dataBase?.pluck(filter) else {                return nil            }            return  Introduction(idForDataBase: pluck[cuturalRelicsIntroduction.id],                                 image: pluck[cuturalRelicsIntroduction.photo],                                 title: pluck[cuturalRelicsIntroduction.name],                                 text: pluck[cuturalRelicsIntroduction.introduction],                                 date: pluck[cuturalRelicsIntroduction.remark])        } catch {            assertionFailure()        }        return nil    }    func queryIntroduction(with name: String) -&gt; Introduction? {        let filter = cuturalRelicsIntroduction.table.filter(name == cuturalRelicsIntroduction.name)        do {            guard let pluck = try DataBase.dataBase?.pluck(filter) else {                return nil            }            return  Introduction(idForDataBase: pluck[cuturalRelicsIntroduction.id],                                 image: pluck[cuturalRelicsIntroduction.photo],                                 title: pluck[cuturalRelicsIntroduction.name],                                 text: pluck[cuturalRelicsIntroduction.introduction],                                 date: pluck[cuturalRelicsIntroduction.remark])        } catch {            assertionFailure()        }        return nil    }}// MARK: - Insertextension DataBase {    //插入文物介绍    @discardableResult    func insertCulturalRelicsIntroduction(with intro: Introduction) -&gt; (Int64?, String?) {        do {            if (try DataBase.dataBase?.pluck(cuturalRelicsIntroduction.table.filter(cuturalRelicsIntroduction.id == intro.idForDataBase))) != nil {                return (nil, "the cultural relics exsit")            }            let insert = cuturalRelicsIntroduction.table.insert(cuturalRelicsIntroduction.name &lt;- intro.title,                                                                cuturalRelicsIntroduction.id &lt;- intro.idForDataBase,                                                                cuturalRelicsIntroduction.introduction &lt;- intro.text,                                                                cuturalRelicsIntroduction.photo &lt;- intro.image,                                                                cuturalRelicsIntroduction.remark &lt;- intro.date)            let insertIntroduction = try? DataBase.dataBase?.run(insert)            return (insertIntroduction, "inserted successfully")        } catch {            assertionFailure()        }        return(nil, "inserted unsuccessfully")    }}// MARK: - Deleteextension DataBase {    //删除文物介绍    @discardableResult    func deletetCulturalRelicsIntroduction(with id: Int64) -&gt; (Int?, String?) {        let filter = cuturalRelicsIntroduction.table.filter(id == cuturalRelicsIntroduction.id)        do {            let delete = try DataBase.dataBase?.run(filter.delete())            return (delete, "deleted successfully")        } catch {            assertionFailure()        }        return (nil, "deleted unsuccessfully")    }    @discardableResult    func deletetCulturalRelicsIntroduction(with name: String) -&gt; (Int?, String?) {        let filter = cuturalRelicsIntroduction.table.filter(name == cuturalRelicsIntroduction.name)        do {            let deleteIntroduction = try DataBase.dataBase?.run(filter.delete())            return (deleteIntroduction, "deleted successfully")        } catch {            assertionFailure()        }        return (nil, "deleted unsuccessfully")    }}// MARK: - Updateextension DataBase {    //修改文物介绍数据    func update(_ intro: Introduction) -&gt; (Int?, String?) {        guard (try? DataBase.dataBase?.pluck(cuturalRelicsIntroduction.table.filter(cuturalRelicsIntroduction.id == intro.idForDataBase))) != nil else {            return (nil, "the cultural relics not exsit")        }        do {            let update = cuturalRelicsIntroduction.table.update(cuturalRelicsIntroduction.name &lt;- intro.title,                                                                cuturalRelicsIntroduction.id &lt;- intro.idForDataBase,                                                                cuturalRelicsIntroduction.introduction &lt;- intro.text,                                                                cuturalRelicsIntroduction.photo &lt;- intro.image,                                                                cuturalRelicsIntroduction.remark &lt;- intro.date)            let updateIntroduction = try DataBase.dataBase?.run(update)            return (updateIntroduction, "updated successfully")        } catch {            assertionFailure()        }        return (nil, "updated unsuccessfully")    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="建表示例"><a href="#建表示例" class="headerlink" title="建表示例"></a>建表示例</h2><pre class="line-numbers language-none"><code class="language-none">////  CulturalRelicsIntroduction.swift//  RunInto////  Created by 张赛东（手机：15674119605） on 2021/3/3.//  Copyright © 2021 adong666666. All rights reserved.//import Foundationimport SQLiteclass CulturalRelicsIntroduction {    let table = Table("CulturalRelicsIntroduction")    let id = Expression&lt;Int64&gt;("id")    let name = Expression&lt;String&gt;("name")    let introduction = Expression&lt;String&gt;("introduction")    let photo = Expression&lt;String&gt;("photo")    let remark = Expression&lt;String&gt;("remark")}extension CulturalRelicsIntroduction {    func setupTable() {        do {            guard let cmd = createTableCMD() else { return }            try DataBase.dataBase?.run(cmd)        } catch { print(error) }    }    func createTableCMD() -&gt; String? {        return table.create(ifNotExists: true) {            $0.column(id, primaryKey: true)            $0.column(name)            $0.column(introduction)            $0.column(photo)            $0.column(remark)        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用</p><pre class="line-numbers language-none"><code class="language-none">DataBase.shared.insertCulturalRelicsIntroduction(with: intro!)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Help(show: $showContent, datas: DataBase.shared.queryCulturalRelicsIntroduction())<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看sqlite文件"><a href="#查看sqlite文件" class="headerlink" title="查看sqlite文件"></a>查看sqlite文件</h2><p>下载真机的沙盒数据，查看后缀名为.sqlite的文件，即为生成的数据库，在应用商店搜“sqlite”,有很多软件可以查看<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%932.png"></p><h2 id="导出的表"><a href="#导出的表" class="headerlink" title="导出的表"></a>导出的表</h2><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">introduction</th><th align="left">photo</th><th align="left">remark</th></tr></thead><tbody><tr><td align="left">20210303063005</td><td align="left">bottle</td><td align="left">郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。</td><td align="left">郎窑红釉穿带直口瓶</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063006</td><td align="left">box</td><td align="left">张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。</td><td align="left">张成造款雕漆云纹盒</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063007</td><td align="left">clock</td><td align="left">黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。</td><td align="left">彩漆描金楼阁式自开门群仙祝寿御制钟</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063008</td><td align="left">cup</td><td align="left">宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。</td><td align="left">乾隆款金瓯永固杯</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063009</td><td align="left">ear_furnace</td><td align="left">掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。</td><td align="left">掐丝珐琅缠枝莲纹象耳炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063010</td><td align="left">grain_furnace</td><td align="left">青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”</td><td align="left">青玉云龙纹炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063011</td><td align="left">painting</td><td align="left">《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。</td><td align="left">清明上河图</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063012</td><td align="left">placard</td><td align="left">西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。</td><td align="left">平复帖</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063013</td><td align="left">zun</td><td align="left">青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。</td><td align="left">酗亚方尊</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063014</td><td align="left">magpie</td><td align="left">沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。</td><td align="left">沈子蕃缂丝《梅鹊图》轴</td><td align="left">故宫镇馆之宝</td></tr></tbody></table><h2 id="导出的JSON"><a href="#导出的JSON" class="headerlink" title="导出的JSON"></a>导出的JSON</h2><pre class="line-numbers language-none"><code class="language-none">[  {    "photo" : "郎窑红釉穿带直口瓶",    "remark" : "故宫镇馆之宝",    "name" : "bottle",    "introduction" : "郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。",    "id" : 20210303063005  },  {    "id" : 20210303063006,    "remark" : "故宫镇馆之宝",    "photo" : "张成造款雕漆云纹盒",    "name" : "box",    "introduction" : "张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"  },  {    "id" : 20210303063007,    "introduction" : "黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。",    "photo" : "彩漆描金楼阁式自开门群仙祝寿御制钟",    "remark" : "故宫镇馆之宝",    "name" : "clock"  },  {    "name" : "cup",    "photo" : "乾隆款金瓯永固杯",    "introduction" : "宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。",    "id" : 20210303063008,    "remark" : "故宫镇馆之宝"  },  {    "photo" : "掐丝珐琅缠枝莲纹象耳炉",    "remark" : "故宫镇馆之宝",    "introduction" : "掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。",    "id" : 20210303063009,    "name" : "ear_furnace"  },  {    "id" : 20210303063010,    "remark" : "故宫镇馆之宝",    "name" : "grain_furnace",    "introduction" : "青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”",    "photo" : "青玉云龙纹炉"  },  {    "remark" : "故宫镇馆之宝",    "photo" : "清明上河图",    "id" : 20210303063011,    "introduction" : "《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。",    "name" : "painting"  },  {    "photo" : "平复帖",    "introduction" : "西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。",    "name" : "placard",    "remark" : "故宫镇馆之宝",    "id" : 20210303063012  },  {    "id" : 20210303063013,    "photo" : "酗亚方尊",    "name" : "zun",    "introduction" : "青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。",    "remark" : "故宫镇馆之宝"  },  {    "id" : 20210303063014,    "name" : "magpie",    "photo" : "沈子蕃缂丝《梅鹊图》轴",    "introduction" : "沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。",    "remark" : "故宫镇馆之宝"  }]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出的插入语句"><a href="#导出的插入语句" class="headerlink" title="导出的插入语句"></a>导出的插入语句</h2><pre class="line-numbers language-none"><code class="language-none">BEGIN;INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063005, 'bottle', '郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。', '郎窑红釉穿带直口瓶', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063006, 'box', '张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。', '张成造款雕漆云纹盒', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063007, 'clock', '黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。', '彩漆描金楼阁式自开门群仙祝寿御制钟', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063008, 'cup', '宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。', '乾隆款金瓯永固杯', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063009, 'ear_furnace', '掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。', '掐丝珐琅缠枝莲纹象耳炉', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063010, 'grain_furnace', '青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”', '青玉云龙纹炉', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063011, 'painting', '《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。', '清明上河图', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063012, 'placard', '西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。', '平复帖', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063013, 'zun', '青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。', '酗亚方尊', '故宫镇馆之宝');INSERT INTO CulturalRelicsIntroduction(id, name, introduction, photo, remark) VALUES(20210303063014, 'magpie', '沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。', '沈子蕃缂丝《梅鹊图》轴', '故宫镇馆之宝');COMMIT;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> DataBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub (cocoapods)</title>
      <link href="/posts/50954.html"/>
      <url>/posts/50954.html</url>
      
        <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub, and classifies the frameworks, which provides convenience for users to manage the third-party frameworks.</p><h1 id="github：https-github-com-adong666666-PodfileKit"><a href="#github：https-github-com-adong666666-PodfileKit" class="headerlink" title="github：https://github.com/adong666666/PodfileKit"></a>github：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#set-up-platform">Set up Platform</a></li><li><a href="#designated-third-party-framework">Designated Third Party framework</a></li><li><a href="#framework-classification">Framework Classification</a></li><li><a href="#subframework">Subframework</a></li><li><a href="#set-up-groups">Set up groups</a></li><li><a href="#use">Use</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a><h2 id="Set-up-Platform"><a href="#Set-up-Platform" class="headerlink" title="Set up Platform"></a>Set up Platform</h2><code>platform:ios '13.0'</code>. The <code>'13.0'</code>here is the lowest iOS system version that the app can support. You can replace it with <code>'11.0', '12.3' , '14.0'</code>and so on.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpPlatform.png" alt="SetUpPlatform"></p><h2 id="Designated-Third-Party-framework"><a href="#Designated-Third-Party-framework" class="headerlink" title="Designated Third Party framework"></a>Designated Third Party framework</h2><p><code>Pod 'ARVideoKit'</code> specifies a framework named <code>'ARVideoKit'</code> to download. You can replace <code>'ARVideoKit'</code> with <code>'name of the framework you want to install'</code>. Specify the corresponding URL by <code>: git = &gt;</code>, specify the corresponding branch by <code>: Branch = &gt;</code>, specify the submitted version by <code>commit:</code>, specify the marked submitted version by <code>: tag = &gt;</code>, and specify the submitted version by <code>: inhibit'_ Warnings = &gt; true </code> to avoid warnings from a single framework. Of course, the relevant specifications after <code>pod' ARVideoKit</code> can be omitted. In this way, you will download the default version of the framework, which is generally the latest version suitable for your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Example.png" alt="Example"></p><h2 id="Framework-Classification"><a href="#Framework-Classification" class="headerlink" title="Framework Classification"></a>Framework Classification</h2><p>The frameworks are classified, you can also classify according to your own preferences.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkClassification.png" alt="FrameworkClassification"><br>When there is a framework you need to use in the classification, you can delete “#“.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkSelection.png" alt="FrameworkSelection"></p><h2 id="Subframework"><a href="#Subframework" class="headerlink" title="Subframework"></a>Subframework</h2><p>For some frameworks, if only some of the functions in the framework are used, it is not necessary to download the whole framework, only its sub frameworks.</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Subframework.png" alt="Subframework"></p><h2 id="Set-up-groups"><a href="#Set-up-groups" class="headerlink" title="Set up groups"></a>Set up groups</h2><p>You can use</p><pre class="line-numbers language-none"><code class="language-none">def groupName  pod ... ...end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>to set up groups, for example, some frameworks are used for debugging, some frameworks are used for app publishing, and some frameworks are special. After <code>target</code>, you need to replace <code>ProjectName</code> with the name of your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpGroups.png" alt="SetUpGroups"></p><h2 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h2><ul><li>Clone the repository to get the <code>PodFile</code> file in the repository</li><li>Directly download the <code>PodFile</code> in the repository and put it under the directory of the project folder</li><li>Copy the contents of the <code>PodFile</code> in the repository to your own generated <code>PodFile</code></li><li>Use the terminal to open the project directory and run the following command<pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><pre class="line-numbers language-none"><code class="language-none">source 'https://github.com/CocoaPods/Specs.git'# Minimum supported iOS system versionplatform:ios,'13.0'use_frameworks!# Inhibit the warning of the third party libraryinhibit_all_warnings!def thirdParty  # eg. # AR Video  # Git specifies the web address, branch specifies the branch, commit specifies the submitted version, tag specifies the marked submitted version and inhibit_ Warnings to avoid warnings from a single framework  # pod 'ARVideoKit', :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true    # Network Request  # pod 'Alamofire'  # pod 'Moya'  # pod 'AlamofireObjectMapper'    # JSON Parsing  # pod 'SwiftyJSON'  # pod 'HandyJSON'  # pod 'Argo'  # pod 'Sync'    # Detect Network Status  # pod 'ReachabilitySwift'    # Data Stream  # pod 'RxSwift'  # pod 'RxCocoa'  # pod 'ObjectMapper'  # pod 'ReSwift'  # pod 'ReactiveSwift'  # pod 'ReactorKit'    # Internet Pictures  # pod 'Kingfisher'    # Layout  # pod 'SnapKit'  # pod 'Cartography'  # pod 'Neon'  # pod 'AnimatedCollectionViewLayout'  # pod "BouncyLayout"  # pod 'TangramKit'  # pod 'TinyConstraints'  # pod 'LayoutKit'  # pod 'SteviaLayout'    # Animation  # pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'  # pod 'lottie-ios'  # pod 'ViewAnimator'  # pod 'Advance'  # pod 'Pastel'  # pod 'YapAnimator'    # Transition  # pod 'Hero'  # pod 'Transition'  # pod 'Jelly'    # Code Rules  # pod 'SwiftLint'    # UserDefault  # pod 'SwiftyUserDefaults'    # Data Base  # pod 'SQLite.swift'  # pod 'GRDB.swift'  # pod 'FMDB'  # pod 'RealmSwift'  # pod 'YapDatabase'  # pod 'CoreStore'    # Extension  # pod 'SwifterSwift'  ## pod 'SwifterSwift/SwiftStdlib'  ## pod 'SwifterSwift/Foundation'  ## pod 'SwifterSwift/UIKit'  ## pod 'SwifterSwift/AppKit'  ## pod 'SwifterSwift/MapKit'  ## pod 'SwifterSwift/CoreGraphics'  ## pod 'SwifterSwift/CoreLocation'  ## pod 'SwifterSwift/SpriteKit'  ## pod 'SwifterSwift/SceneKit'  ## pod 'SwifterSwift/StoreKit'  ## pod 'SwifterSwift/Dispatch'  # pod 'Then'  ### Use 'SwiftUIX'  # pod 'EZSwiftExtensions'    # Resources (picture, color, localized string)  # pod 'R.swift'  # pod 'SwiftGen'    # Monitor  # pod 'Crashlytics'  # pod 'Fabric'  # pod 'Bugly'   # Bind  # pod 'bond'    # Alert  # pod 'JGProgressHUD'  # pod 'SwiftMessages'  # pod 'SwiftEntryKit'  # pod 'SPPermissions'  # pod 'NotificationBanner'  # pod 'Whisper'  # pod 'PopupDialog'  # pod 'Toast-Swift'    # Side Menu  # pod 'SideMenu'  # pod 'YALSideMenu'    # Drop-down Menu  # pod 'BTNavigationDropdownMenu'    # Pagination Menu  # pod 'Parchment'  # pod 'Tabman'    # UI Controls  # pod 'LYEmptyView'  # pod 'CollectionKit'  # pod 'DifferenceKit'  # pod 'ACBadge'  # pod 'LTMorphingLabel'  # pod 'SkeletonView'  # pod 'NVActivityIndicatorView'  # pod 'FSPagerView'  # pod 'TextFieldEffects'  # pod 'SwipeCellKit'  # pod 'ScrollableGraphView'  # pod 'SCLAlertView'  # pod 'SkyFloatingLabelTextField'  # pod 'ActiveLabel'  # pod 'MarqueeLabel'  # pod 'DOFavoriteButton'  # pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView  # pod 'XLActionController'  # pod 'LNPopupController'  # pod 'CHIPageControl'  # pod 'EasyTipView'  # pod 'CardParts'  # pod 'PMAlertController'  # pod 'Segmentio'  # pod 'HGCircularSlider'  # pod 'ZLSwipeableViewSwift'  # pod 'ALCameraViewController'  # pod 'SwiftSpinner'  # pod 'Cosmos'    # Scan  # pod 'BarcodeScanner'    # QR Code  # pod 'EFQRCode'    # Scan Document  # pod 'WeScan'    # Color Picker  # pod 'ColorSlider'    # Prompt for Software Updates  # pod 'Siren'    # Machine learning Vision  # pod 'OpenCV'    # Feedback  # pod 'PinpointKit'    # Log  # pod 'SwiftyBeaver'    # Encryption  # pod 'CryptoSwift'  # pod 'RNCryptor'    # Internal Purchase  # pod 'SwiftyStoreKit'    # Calendar  # pod 'JTAppleCalendar'  # pod 'CVCalendar'    # Image Processing  # pod 'Nuke'  # pod 'Macaw'    # Image Picker  # pod 'ImagePicker'  # pod 'ZLPhotoBrowser'  # pod 'YPImagePicker'  # pod 'SKPhotoBrowser'    # Test  # pod 'Quick'  # pod 'Nimble'    # Storyboard and xib  # pod 'IBAnimatable'    # Date  # pod 'SwiftDate'    # Cache  # pod 'HanekeSwift'  # pod 'Disk'  # pod 'Cache'    # Mathematics  # pod 'Surge'    # Multithreading  # pod "AsyncSwift"  # pod 'Hydra'  # pod 'BrightFutures'    # Dependency Injection  # pod 'Swinject'  # pod 'Typhoon'    # Chat  # pod 'Chatto'  # pod 'ChattoAdditions'    # Message  # pod 'Messenger'  # pod 'MessageKit'    # Phone Number  # pod 'PhoneNumberKit'    # Functional Programming  # pod 'Swiftz'    # Device  # pod 'DeviceKit'    # Rich Text  # pod 'BonMot'  # pod 'SwiftRichString'    # Face  # pod 'FaceAware'    # Geographic Location  # pod 'SwiftLocation'    # HTML、XML  # pod 'SwiftSoup'  # pod 'Ono'  # pod 'Kanna'    # Convenient (uitableviewcells, uicollectionviewcells, convenient reuse, etc)  # pod 'Reusable'    # Localization  # pod 'Localize-Swift'    # Gif Support  # pod 'Gifu'    # Color  # pod 'DynamicColor'    # Detecting memory leaks, etc  # pod 'LifetimeTracker'    # Chart  # pod 'SwiftCharts'    # File Processing  # pod 'FileKit'  # pod 'Files'    # Theme (Adapt to Dark Mode)  # pod 'SwiftTheme'    # The status bar displays information such as FPS, CPU and memory usage, device model, app and iOS versions  # pod 'GDPerformanceView-Swift'    # Camera and Microphone  # pod 'HaishinKit.swift'    # Download  # pod 'Tiercel'    # Bluetooth  # pod 'BluetoothKit'    # Compress  # pod 'Zip'    # Keychain  # pod 'KeychainSwift'    # Social Sharing  # pod 'UMengUshare'  ## pod 'UMengUShare/UI'  ## pod 'UMengUShare/Social/ReducedWeChat'  ## pod 'UMengUShare/Social/ReducedQQ'enddef projectenddef debug  # App Interface Debugging  # pod 'Reveal-SDK'  # pod 'CocoaDebug'    # Network Debugging  # pod 'Bagel'  # pod 'ResponseDetective'    # Log  # pod 'XCGLogger'end  # Replace your project name heretarget "ProjectName" do  thirdParty  project  debugendpost_install do |installer_representation|  installer_representation.pods_project.targets.each do |target|    target.build_configurations.each do |config|      # Minimum supported iOS system version      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'    end  endend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便</title>
      <link href="/posts/38667.html"/>
      <url>/posts/38667.html</url>
      
        <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便。</p><h1 id="github网址：https-github-com-adong666666-PodfileKit"><a href="#github网址：https-github-com-adong666666-PodfileKit" class="headerlink" title="github网址：https://github.com/adong666666/PodfileKit"></a>github网址：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E5%B9%B3%E5%8F%B0">设置平台</a></li><li><a href="#%E6%8C%87%E5%AE%9A%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6">指定第三方框架</a></li><li><a href="#%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB">框架分类</a></li><li><a href="#%E5%AD%90%E6%A1%86%E6%9E%B6">子框架</a></li><li><a href="#%E5%BB%BA%E7%AB%8B%E5%88%86%E7%BB%84">建立分组</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#license">License</a><h2 id="设置平台"><a href="#设置平台" class="headerlink" title="设置平台"></a>设置平台</h2><code>platform:ios,'13.0'</code>，这里的<code>‘13.0’</code>是App所能支持的最低iOS系统版本，你可以替换为<code>‘11.0’、'12.3'、‘14.0’</code>等版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%B9%B3%E5%8F%B0%E8%AE%BE%E7%BD%AE.png" alt="设置平台"><h2 id="指定第三方框架"><a href="#指定第三方框架" class="headerlink" title="指定第三方框架"></a>指定第三方框架</h2><code>pod 'ARVideoKit'</code>指定名为<code>‘ARVideoKit’</code>的框架进行下载，你可以将<code>‘ARVideoKit’</code>替换为<code>‘你想要安装的框架的名称’</code>。通过<code>:git =&gt;</code>来指定相应网址，通过<code>:branch =&gt;</code>来指定相应分支，通过<code>commit:</code>来指定某次提交的版本，通过<code>:tag =&gt;</code>来指定某次被标记的提交版本，通过<code>:inhibit_warnings =&gt; true</code>来规避单个框架的警告。当然，<code>pod 'ARVideoKit'</code>之后的相关指定都可以被省略，这样你将会下载该框架的默认版本，一般为适合你工程的最新版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E7%A4%BA%E4%BE%8B.png" alt="示例"><h2 id="框架分类"><a href="#框架分类" class="headerlink" title="框架分类"></a>框架分类</h2>对框架进行了分类，你也可以根据自己的喜好进行分类。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB.png" alt="框架分类"><br>当分类中有你需要使用的框架时，便将”#“删除即可。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9.png" alt="框架选择"><h2 id="子框架"><a href="#子框架" class="headerlink" title="子框架"></a>子框架</h2>对于某些框架，如果只用到框架中部分功能，则不必下载整个框架，只需下载其子框架。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%AD%90%E6%A1%86%E6%9E%B6.png" alt="子框架"><h2 id="建立分组"><a href="#建立分组" class="headerlink" title="建立分组"></a>建立分组</h2>你可以使用<pre class="line-numbers language-none"><code class="language-none">def groupName  pod ... ...end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>来建立分组，比如某些框架是用于调试的，某些框架是用于App发布的，某些框架比较特殊等。在<code>target</code>之后，你需要将<code>ProjectName</code>替换为你项目的名称。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%88%86%E7%BB%84.png" alt="建立分组"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2></li></ul><ul><li>克隆本仓库，从而拿到仓库中的<code>PodFile</code>文件</li><li>直接下载本仓库中的<code>PodFile</code>，置于工程文件夹的目录之下</li><li>拷贝本仓库中<code>PodFile</code>的内容到你自己生成的<code>PodFile</code>文件中</li><li>使用终端打开工程所在目录，运行如下命令<pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2>这里因为在博客就直接给内容哈：<pre class="line-numbers language-none"><code class="language-none">source 'https://github.com/CocoaPods/Specs.git'# 所支持的iOS系统版本platform:ios,'13.0'use_frameworks!# 规避第三方库的警告inhibit_all_warnings!def thirdParty  # eg. # AR录像  # git指定网址, branch指定分支， commit指定某次提交的版本， tag指定某次被标记的提交版本，inhibit_warnings规避单个框架的警告  # pod 'ARVideoKit'#, :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true  # 网络请求  # pod 'Alamofire'  # pod 'Moya'  # pod 'AlamofireObjectMapper'  # JSON解析  # pod 'SwiftyJSON'  # pod 'HandyJSON'  # pod 'Argo'  # pod 'Sync'  # 检测网络状态  # pod 'ReachabilitySwift'  # 数据流  # pod 'RxSwift'  # pod 'RxCocoa'  # pod 'ObjectMapper'  # pod 'ReSwift'  # pod 'ReactiveSwift'  # pod 'ReactorKit'  # 网络图片  # pod 'Kingfisher'  # 布局  # pod 'SnapKit'  # pod 'Cartography'  # pod 'Neon'  # pod 'AnimatedCollectionViewLayout'  # pod "BouncyLayout"  # pod 'TangramKit'  # pod 'TinyConstraints'  # pod 'LayoutKit'  # pod 'SteviaLayout'  # 动画  # pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'  # pod 'lottie-ios'  # pod 'ViewAnimator'  # pod 'Advance'  # pod 'Pastel'  # pod 'YapAnimator'  # 转场  # pod 'Hero'  # pod 'Transition'  # pod 'Jelly'  # 代码规范  # pod 'SwiftLint'  # UserDefault  # pod 'SwiftyUserDefaults'  # 数据库  # pod 'SQLite.swift'  # pod 'GRDB.swift'  # pod 'FMDB'  # pod 'RealmSwift'  # pod 'YapDatabase'  # pod 'CoreStore'  # 扩展  # pod 'SwifterSwift'  ## pod 'SwifterSwift/SwiftStdlib'  ## pod 'SwifterSwift/Foundation'  ## pod 'SwifterSwift/UIKit'  ## pod 'SwifterSwift/AppKit'  ## pod 'SwifterSwift/MapKit'  ## pod 'SwifterSwift/CoreGraphics'  ## pod 'SwifterSwift/CoreLocation'  ## pod 'SwifterSwift/SpriteKit'  ## pod 'SwifterSwift/SceneKit'  ## pod 'SwifterSwift/StoreKit'  ## pod 'SwifterSwift/Dispatch'  # pod 'Then'  ### Use 'SwiftUIX'  # pod 'EZSwiftExtensions'  # Resources（图片、颜色、本地化字符串）  # pod 'R.swift'  # pod 'SwiftGen'  # 监控  # pod 'Crashlytics'  # pod 'Fabric'  # pod 'Bugly'  # 绑定  # pod 'bond'  # 提示框  # pod 'JGProgressHUD'  # pod 'SwiftMessages'  # pod 'SwiftEntryKit'  # pod 'SPPermissions'  # pod 'NotificationBanner'  # pod 'Whisper'  # pod 'PopupDialog'  # pod 'Toast-Swift'  # 侧边栏  # pod 'SideMenu'  # pod 'YALSideMenu'  # 下拉菜单  # pod 'BTNavigationDropdownMenu'  # 分页菜单  # pod 'Parchment'  # pod 'Tabman'  # UI控件  # pod 'LYEmptyView'  # pod 'CollectionKit'  # pod 'DifferenceKit'  # pod 'ACBadge'  # pod 'LTMorphingLabel'  # pod 'SkeletonView'  # pod 'NVActivityIndicatorView'  # pod 'FSPagerView'  # pod 'TextFieldEffects'  # pod 'SwipeCellKit'  # pod 'ScrollableGraphView'  # pod 'SCLAlertView'  # pod 'SkyFloatingLabelTextField'  # pod 'ActiveLabel'  # pod 'MarqueeLabel'  # pod 'DOFavoriteButton'  # pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView  # pod 'XLActionController'  # pod 'LNPopupController'  # pod 'CHIPageControl'  # pod 'EasyTipView'  # pod 'CardParts'  # pod 'PMAlertController'  # pod 'Segmentio'  # pod 'HGCircularSlider'  # pod 'ZLSwipeableViewSwift'  # pod 'ALCameraViewController'  # pod 'SwiftSpinner'  # pod 'Cosmos'  # 扫描  # pod 'BarcodeScanner'  # 二维码  # pod 'EFQRCode'  # 扫描文件  # pod 'WeScan'  # 取色器  # pod 'ColorSlider'  # 提示软件更新  # pod 'Siren'  # 机器学习视觉  # pod 'OpenCV'  # 反馈  # pod 'PinpointKit'  # 日志  # pod 'SwiftyBeaver'  # 加密  # pod 'CryptoSwift'  # pod 'RNCryptor'  # 内购  # pod 'SwiftyStoreKit'  # 日历  # pod 'JTAppleCalendar'  # pod 'CVCalendar'  # 图像处理  # pod 'Nuke'  # pod 'Macaw'  # 图片拾取  # pod 'ImagePicker'  # pod 'ZLPhotoBrowser'  # pod 'YPImagePicker'  # pod 'SKPhotoBrowser'  # 测试  # pod 'Quick'  # pod 'Nimble'  # Storyboard和xib  # pod 'IBAnimatable'  # 时间  # pod 'SwiftDate'  # 缓存  # pod 'HanekeSwift'  # pod 'Disk'  # pod 'Cache'  # 数学  # pod 'Surge'  # 多线程  # pod "AsyncSwift"  # pod 'Hydra'  # pod 'BrightFutures'  # 依赖注入  # pod 'Swinject'  # pod 'Typhoon'  # 聊天  # pod 'Chatto'  # pod 'ChattoAdditions'  # 信息  # pod 'Messenger'  # pod 'MessageKit'  # 手机号码  # pod 'PhoneNumberKit'  # 函数式编程  # pod 'Swiftz'  # 设备  # pod 'DeviceKit'  # 富文本  # pod 'BonMot'  # pod 'SwiftRichString'  # 人脸  # pod 'FaceAware'  # 地理位置  # pod 'SwiftLocation'  # HTML、XML  # pod 'SwiftSoup'  # pod 'Ono'  # pod 'Kanna'  # 便利 UITableViewCells, UICollectionViewCells 便利复用等  # pod 'Reusable'  # 本地化  # pod 'Localize-Swift'  # Gif支持  # pod 'Gifu'  # 颜色  # pod 'DynamicColor'  # 检测内存泄漏等  # pod 'LifetimeTracker'  # 表格  # pod 'SwiftCharts'  # 文件处理  # pod 'FileKit'  # pod 'Files'  # 主题 适配暗黑模式  # pod 'SwiftTheme'  # 状态栏显示FPS, CPU and memory usage, device model, app and iOS versions 等信息  # pod 'GDPerformanceView-Swift'  # 相机 麦克风  # pod 'HaishinKit.swift'  # 下载  # pod 'Tiercel'  # 蓝牙  # pod 'BluetoothKit'  # 压缩  # pod 'Zip'  # 钥匙串  # pod 'KeychainSwift'  # 社会化分享  # pod 'UMengUshare'  ## pod 'UMengUShare/UI'  ## pod 'UMengUShare/Social/ReducedWeChat'  ## pod 'UMengUShare/Social/ReducedQQ'enddef projectenddef debug  # App界面调试  # pod 'Reveal-SDK'  # pod 'CocoaDebug'  # 网络调试  # pod 'Bagel'  # pod 'ResponseDetective'  # 日志  # pod 'XCGLogger'end  # 在这里替换你的项目名称target "ProjectName" do  thirdParty  project  debugendpost_install do |installer_representation|  installer_representation.pods_project.targets.each do |target|    target.build_configurations.each do |config|      # 所支持的iOS系统版本      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'    end  endend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</title>
      <link href="/posts/57105.html"/>
      <url>/posts/57105.html</url>
      
        <content type="html"><![CDATA[<h1 id="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"><a href="#学术论文——基于ARKit技术的文物交互式相机App的设计与实现" class="headerlink" title="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"></a>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</h1><p>========================<br> 论文下载：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020">http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020</a><br> 论文摘要：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb">http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/1.png" alt="第1页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/2.png" alt="第2页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/3.png" alt="第3页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/4.png" alt="第4页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/5.png" alt="第5页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/6.png" alt="第6页"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/7.png" alt="第7页"></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Localizable.strings来增加本地化功能</title>
      <link href="/posts/15034.html"/>
      <url>/posts/15034.html</url>
      
        <content type="html"><![CDATA[<h2 id="让app支持各种语言"><a href="#让app支持各种语言" class="headerlink" title="让app支持各种语言"></a>让app支持各种语言</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/1.jpg"><br>首先创建一个Strings File<br>一般我们命名为 Localizable.strings</p><p>在Localizable.strings的属性中设置下localization, 点击后如下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/2.jpg"></p><p>会多一个English 和Chinese…的标签</p><p>而后，我们进入项目工程，进入如下界面：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/3.jpg"></p><p>点击Localizations 中的加号，添加语言<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/4.jpg"></p><p>勾选需要本地化的文件，可以只勾选Localizable.strings<br>操作完了之后情况如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/5.jpg"></p><p>而后根据键值来分别设定英语和汉语或其他语言所对应的词语，段落…<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/6.jpg"></p><p>That’s all, thank you !</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模式匹配摘录</title>
      <link href="/posts/26239.html"/>
      <url>/posts/26239.html</url>
      
        <content type="html"><![CDATA[<h1 id="模式匹配摘录"><a href="#模式匹配摘录" class="headerlink" title="模式匹配摘录"></a>模式匹配摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闭包循环引用</title>
      <link href="/posts/22939.html"/>
      <url>/posts/22939.html</url>
      
        <content type="html"><![CDATA[<h1 id="闭包循环引用"><a href="#闭包循环引用" class="headerlink" title="闭包循环引用"></a>闭包循环引用</h1><p>========================<br>我们在闭包的基础概念中讲到闭包是引用类型的，因此，与Objective-C的block一样，可能导致循环引用的问题。</p><h2 id="问题的产生"><a href="#问题的产生" class="headerlink" title="问题的产生"></a>问题的产生</h2><p>当我们给一个类指定一个闭包属性时，这个类的实例便包含了闭包的一个引用。如果在这个闭包中，又引用了类实例本身，这时闭包便创建了一个指向类实例的强引用，这种情况下，又产生了循环引用。</p><p>如代码清单1所示：HTMLElement类定义了一个闭包属性asHTML。在这个闭包中引用了self，即闭包捕获了self，这就意味着闭包维护了一个指向HTMLElement实例的强引用。这样就在两者间创建了一个强引用循环。</p><h4 id="代码清单1：闭包循环引用"><a href="#代码清单1：闭包循环引用" class="headerlink" title="代码清单1：闭包循环引用"></a>代码清单1：闭包循环引用</h4><pre class="line-numbers language-none"><code class="language-none">class HTMLElement {        let name:String    let text:String?        @lazy var asHTML:() -&gt; String = {        if let text = self.text {            return "&lt;\(self.name)]]&gt;\(self.text)&lt;/\(self.name)&gt;"        } else {            return "&lt;\(self.name) /&gt;"        }    }        init(name:String, text:String? = nil) {        self.name = name        self.text = text    }        deinit {        println("\(name) is being deinitialized")    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们可以通过“捕获列表”来解决这种循环引用问题。“捕获列表”定义了在闭包内部捕获的引用类型的使用规则。与两个类之间的强引用循环一样，我们声明每一个捕获引用为weak或者unowned引用。选择weak或者unowned依赖于两者之间的关系。</p><p>一个“捕获列表项”是一个weak(unowned)—类实例引用对。它们放在[]中，项与项之间使用“,”号隔开。</p><p>当闭包和捕获实例总是相互引用，且两者同时释放时，我们将“捕获引用”设置为unowned。如果“捕获引用”可能在某个点被设置成nil，则将其设置为weak。weak引用通常都是optional类型，当引用的实例被释放时，被设置成nil。</p><p>在代码清单1中，我们可以用unowned来处理这种循环引用问题。如代码清单2所示：</p><h4 id="代码清单2：unowned引用"><a href="#代码清单2：unowned引用" class="headerlink" title="代码清单2：unowned引用"></a>代码清单2：unowned引用</h4><pre class="line-numbers language-none"><code class="language-none">class HTMLElement {        let name:String    let text:String?        @lazy var asHTML:() -&gt; String = {        [unowned self] in        if let text = self.text {            return "&lt;\(self.name)]]&gt;\(self.text)&lt;/\(self.name)&gt;"        } else {            return "&lt;\(self.name) /&gt;"        }    }        init(name:String, text:String? = nil) {        self.name = name        self.text = text    }        deinit {        println("\(name) is being deinitialized")    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这种情况下，闭包维护了HTMLElement实例的一个unowned引用，而不再是一个强引用。</p><p>注：虽然在闭包中多次引用了self，但闭包只会维护HTMLElement实例的一个引用</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift反射摘录</title>
      <link href="/posts/26121.html"/>
      <url>/posts/26121.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift反射摘录"><a href="#Swift反射摘录" class="headerlink" title="Swift反射摘录"></a>Swift反射摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将framework提交至cocoapods工作记录</title>
      <link href="/posts/62594.html"/>
      <url>/posts/62594.html</url>
      
        <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods工作记录"><a href="#将framework提交至cocoapods工作记录" class="headerlink" title="将framework提交至cocoapods工作记录"></a>将framework提交至cocoapods工作记录</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git add .zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git commit -m "Initial release of InterfaceKit"[master (root-commit) a1942f6] Initial release of InterfaceKit 155 files changed, 21738 insertions(+) create mode 100644 .github/ISSUE_TEMPLATE.md create mode 100644 .github/Pull_request_template.md create mode 100644 .github/workflows/podspecs.yml create mode 100644 .github/workflows/tests.yml create mode 100644 .gitignore create mode 100644 .jazzy.yaml create mode 100644 .ruby-gemset create mode 100644 .ruby-version create mode 100644 .swift-version create mode 100644 .swiftformat create mode 100644 .swiftlint.yml create mode 100644 .swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata create mode 100644 .swiftpm/xcode/package.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 CHANGELOG.md create mode 100644 CHANGELOG.zh-Hans.md create mode 100644 CONTRIBUTING.md create mode 100644 CONTRIBUTING.zh-Hans.md create mode 100644 CartfileExample/Cartfile create mode 100644 Code of Conduct.md create mode 100644 Code of Conduct.zh-Hans.md create mode 100644 Docs/Structs.html create mode 100644 Docs/Structs/InterfaceView.html create mode 100644 Docs/Structs/InterfaceViewController.html create mode 100644 Docs/Structs/NSInterfaceView.html create mode 100644 Docs/Structs/NSInterfaceViewController.html create mode 100644 Docs/Structs/WKInterfaceView.html create mode 100644 Docs/badge.svg create mode 100644 Docs/css/highlight.css create mode 100644 Docs/css/jazzy.css create mode 100644 Docs/docsets/.docset/Contents/Info.plist create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceView.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/badge.svg create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/css/highlight.css create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/css/jazzy.css create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/carat.png create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/dash.png create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/gh.png create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/img/spinner.gif create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/index.html create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.js create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.search.js create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/jquery.min.js create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/lunr.min.js create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/typeahead.jquery.js create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/search.json create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/undocumented.json create mode 100644 Docs/docsets/.docset/Contents/Resources/docSet.dsidx create mode 100644 Docs/docsets/.tgz create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Info.plist create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceView.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/badge.svg create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/highlight.css create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/jazzy.css create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/carat.png create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/dash.png create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/gh.png create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/spinner.gif create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/index.html create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.js create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.search.js create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jquery.min.js create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/lunr.min.js create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/typeahead.jquery.js create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/search.json create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/undocumented.json create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/docSet.dsidx create mode 100644 Docs/docsets/InterfaceKit.tgz create mode 100644 Docs/docsets/InterfaceKit.xml create mode 100755 Docs/img/carat.png create mode 100755 Docs/img/dash.png create mode 100755 Docs/img/gh.png create mode 100644 Docs/img/spinner.gif create mode 100644 Docs/index.html create mode 100755 Docs/js/jazzy.js create mode 100644 Docs/js/jazzy.search.js create mode 100644 Docs/js/jquery.min.js create mode 100644 Docs/js/lunr.min.js create mode 100644 Docs/js/typeahead.jquery.js create mode 100644 Docs/search.json create mode 100644 Docs/undocumented.json create mode 100644 Example/iOSExample/EApp.swift create mode 100644 Example/iOSExample/Example.xcodeproj/project.pbxproj create mode 100644 Example/iOSExample/Example.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode 100644 Example/iOSExample/Example.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 Example/iOSExample/Example/Info.plist create mode 100644 Example/iOSExample/Example/Preview Content/Preview Assets.xcassets/Contents.json create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.pbxproj create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 Example/macOSExample/macOSExample/Info.plist create mode 100644 Example/macOSExample/macOSExample/Preview Content/Preview Assets.xcassets/Contents.json create mode 100644 Example/macOSExample/macOSExample/macOSExample.entitlements create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.pbxproj create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 Example/tvOSExample/tvOSExample/Info.plist create mode 100644 Example/tvOSExample/tvOSExample/Preview Content/Preview Assets.xcassets/Contents.json create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AccentColor.colorset/Contents.json create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AppIcon.appiconset/Contents.json create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/Contents.json create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Info.plist create mode 100644 Example/watchOSExample/watchOSExample WatchKit Extension/Info.plist create mode 100644 Example/watchOSExample/watchOSExample WatchKit Extension/Preview Content/Preview Assets.xcassets/Contents.json create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.pbxproj create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 Gemfile create mode 100644 InterfaceKit.podspec create mode 100644 InterfaceKit.xcframework.zip create mode 100644 InterfaceKit.xcodeproj/project.pbxproj create mode 100644 InterfaceKit.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode 100644 InterfaceKit.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 InterfaceKit.xcodeproj/xcshareddata/xcschemes/InterfaceKit.xcscheme create mode 100644 InterfaceKit.xcworkspace/contents.xcworkspacedata create mode 100644 InterfaceKit.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode 100644 InterfaceKit/Info.plist create mode 100644 InterfaceKit/InterfaceKit.h create mode 100644 InterfaceKitTests/Info.plist create mode 100644 InterfaceKitTests/InterfaceKitTests.swift create mode 100644 LICENSE create mode 100644 LICENSE.md create mode 100644 LICENSE.zh-Hans.md create mode 100644 Package.swift create mode 100644 Pictures/CartfileLocation.png create mode 100644 Pictures/China.png create mode 100644 Pictures/PodfileLocation.png create mode 100644 Pictures/SwiftPackageManager.png create mode 100644 Pictures/add_framework.png create mode 100644 Pictures/copy_files.png create mode 100644 Pictures/drag_framework.png create mode 100644 Pictures/unzip.png create mode 100644 Pictures/use_frameworks.png create mode 100644 Pictures/use_xcframeworks.png create mode 100755 PodfileExample/Podfile create mode 100644 README.md create mode 100644 README.zh-Hans.md create mode 100644 Sources/InterfaceKit/NSInterface.swift create mode 100644 Sources/InterfaceKit/UIInterface.swift create mode 100644 Sources/InterfaceKit/WKInterface.swift create mode 100644 Tests/InterfaceKitTests/InterfaceKitTests.swift create mode 100644 Tests/InterfaceKitTests/XCTestManifests.swift create mode 100644 Tests/LinuxMain.swift create mode 100644 Vision.md create mode 100644 Vision.zh-Hans.md create mode 100644 codecov.ymlzhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git pushTo https://github.com/adong666666/InterfaceKit.git ! [rejected]        master -&gt; master (fetch first)error: failed to push some refs to 'https://github.com/adong666666/InterfaceKit.git'hint: Updates were rejected because the remote contains work that you dohint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: (e.g., 'git pull ...') before pushing again.hint: See the 'Note about fast-forwards' in 'git push --help' for details.zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git push -fEnumerating objects: 162, done.Counting objects: 100% (162/162), done.Delta compression using up to 16 threadsCompressing objects: 100% (145/145), done.Writing objects: 100% (162/162), 8.12 MiB | 45.00 KiB/s, done.Total 162 (delta 28), reused 0 (delta 0)remote: Resolving deltas: 100% (28/28), done.To https://github.com/adong666666/InterfaceKit.git + 7d1efa9...a1942f6 master -&gt; master (forced update)zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git tag 5.4.0zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git push --tagTotal 0 (delta 0), reused 0 (delta 0)To https://github.com/adong666666/InterfaceKit.git * [new tag]         5.4.0 -&gt; 5.4.0zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod lib lint -&gt; InterfaceKit (5.4.0)    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using new build system    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Building targets in parallel    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: -    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Planning build    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Constructing build description    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file and one is not being generated automatically. (in target 'App' from project 'App')    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: InterfaceKit passed validation.zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod trunk push InterfaceKit.podspecUpdating spec repo `trunk`Validating podspec -&gt; InterfaceKit (5.4.0)    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using new build system    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Building targets in parallel    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: -    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Planning build    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Constructing build description    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file and one is not being generated automatically. (in target 'App' from project 'App')    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: Updating spec repo `trunk`-------------------------------------------------------------------------------- 🎉  Congrats 🚀  InterfaceKit (5.4.0) successfully published 📅  April 30th, 10:04 🌎  https://cocoapods.org/pods/InterfaceKit 👍  Tell your friends!--------------------------------------------------------------------------------zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit %       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Last login: Thu Jan 17 17:43:47 on ttys001iMac-2:~ adong666666$ cd CommonUseiMac-2:CommonUse adong666666$ git add .giMac-2:CommonUse adong666666$ git push origin masterEverything up-to-dateiMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix description"[master 7d4ebe8] fix description 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin masgtererror: src refspec masgter does not match any.error: 推送一些引用到 'https://github.com/adong666666/CommonUse.git' 失败iMac-2:CommonUse adong666666$ git push origin master枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 293 bytes | 293.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects.To https://github.com/adong666666/CommonUse.git   1618908..7d4ebe8  master -&gt; masteriMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix description"[master a7b439f] fix description 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin masterpod l枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 305 bytes | 305.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects. liTo https://github.com/adong666666/CommonUse.git   7d4ebe8..a7b439f  master -&gt; masterniMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix podspec"[master 09fbf0d] fix podspec 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin master枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 299 bytes | 299.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects.To https://github.com/adong666666/CommonUse.git   a7b439f..09fbf0d  master -&gt; masteriMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')[!] CommonUse did not pass validation, due to 2 warnings (but you can use `--allow-warnings` to ignore them).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint[!] Unable to find a podspec in the working directoryiMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE','C......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE','CommonUse.pod......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...st','README.md','FILE_LICENSE','CommonUse.podspec'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE','CommonUse.podspec'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {"CommonUse.h","UIColor-extension.swift","in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h","UIColor-extension.swift","info.plist","README.md","FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift","info.plist","README.md","FILE_LICENSE"}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift","info.plist","README.md","FILE_LICENSE"}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {"CommonUse.h","UIColor-extension.swift","info.plist","README.md","FILE_LICENSE"} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - ERROR | [iOS] xcodebuild: Returned an unsuccessful exit code. You can use `--verbose` for more information.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/FILE_LICENSE' of type 'text' for architecture 'i386' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/README.md' of type 'net.daringfireball.markdown' for architecture 'i386' (in target 'CommonUse')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/FILE_LICENSE' of type 'text' for architecture 'x86_64' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/README.md' of type 'net.daringfireball.markdown' for architecture 'x86_64' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: duplicate output file '/Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist' on task: ProcessInfoPlistFile /Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist Target Support Files/CommonUse/Info.plist (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  error: Multiple commands produce '/Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist':[!] CommonUse did not pass validation, due to 1 error and 2 warnings.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')[!] CommonUse did not pass validation, due to 2 warnings (but you can use `--allow-warnings` to ignore them).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 warning (but you can use `--allow-warnings` to ignore it).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')CommonUse passed validation.iMac-2:CommonUse adong666666$ pod trunk push Common.podspec [!] The specified path `Common.podspec` does not point to an existing podspec file.Usage:    $ pod trunk push [PATH]      Publish the podspec at `PATH` to make it available to all users of the      ‘master’ spec-repo. If `PATH` is not provided, defaults to the current      directory.      Before pushing the podspec to cocoapods.org, this will perform a local      lint of the podspec, including a build of the library. However, it remains      *your* responsibility to ensure that the published podspec will actually      work for your users. Thus it is recommended that you *first* try to use      the podspec to integrate the library into your demo and/or real      application.      If this is the first time you publish a spec for this pod, you will      automatically be registered as the ‘owner’ of this pod. (Note that ‘owner’      in this case implies a person that is allowed to publish new versions and      add other ‘owners’, not necessarily the library author.)Options:    --allow-warnings           Allows push even if there are lint warnings    --use-libraries            Linter uses static libraries to install the spec    --swift-version=VERSION    The SWIFT_VERSION that should be used to lint the                               spec. This takes precedence over a .swift-version                               file.    --skip-import-validation   Lint skips validating that the pod can be                               imported    --skip-tests               Lint skips building and running tests during                               validation    --silent                   Show nothing    --verbose                  Show more debugging information    --no-ansi                  Show output without ANSI codes    --help                     Show help banner of specified commandiMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspec Updating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2Validating podspec -&gt; CommonUse (0.0.1)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] Unable to accept duplicate entry for: CommonUse (0.0.1)iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.3)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')CommonUse passed validation.iMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspecUpdating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2Validating podspec -&gt; CommonUse (0.0.3)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')Updating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2-------------------------------------------------------------------------------- 🎉  Congrats 🚀  CommonUse (0.0.3) successfully published 📅  January 17th, 06:01 🌎  https://cocoapods.org/pods/CommonUse 👍  Tell your friends!--------------------------------------------------------------------------------iMac-2:CommonUse adong666666$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将framework提交至cocoapods摘录</title>
      <link href="/posts/61504.html"/>
      <url>/posts/61504.html</url>
      
        <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods摘录"><a href="#将framework提交至cocoapods摘录" class="headerlink" title="将framework提交至cocoapods摘录"></a>将framework提交至cocoapods摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84cocoapods%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%982.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/images/China_flag.gif" data-original="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%981.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
